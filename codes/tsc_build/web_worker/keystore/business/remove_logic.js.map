{"version":3,"file":"remove_logic.js","sourceRoot":"","sources":["../../../../web_worker/keystore/business/remove_logic.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAEpC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAEzC;IAA4B,0BAAI;IAG5B,gBAAY,GAAW,EAAE,SAA0C,EAAE,OAA8B;QAAnG,YACI,iBAAO,SAIV;QAND,kBAAY,GAAW,CAAC,CAAC;QAGrB,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;IAC5B,CAAC;IAEM,wBAAO,GAAd;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,UAAU,GAAG,UAAU,MAAM,EAAE,KAAK;YAAvB,iBAchB;YAbG,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACzF,cAAc,CAAC,OAAO,GAAG,UAAC,CAAC;gBACvB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAC,CAAC;gBACzB,IAAI,MAAM,GAAuB,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChB,EAAE,KAAI,CAAC,YAAY,CAAC;oBACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;YACL,CAAC,CAAC;QACN,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACtB,UAAU,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;IACL,CAAC;IAEO,gCAAe,GAAvB;QACI,SAAS,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACrF,CAAC;IAEO,uCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IACL,aAAC;AAAD,CAAC,AA3CD,CAA4B,IAAI,GA2C/B","sourcesContent":["import { Base } from \"./base_logic\";\r\nimport { IError } from \"../interfaces\";\r\nimport { QueryExecutor } from \"../query_executor\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\n\r\nexport class Remove extends Base {\r\n    _key: string;\r\n    _rowAffected: number = 0;\r\n    constructor(key: string, onSuccess: (recordRemoved: number) => void, onError: (err: IError) => void) {\r\n        super();\r\n        this._key = key;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n    }\r\n\r\n    public execute() {\r\n        this.initTransaction();\r\n        var removeData = function (column, value) {\r\n            var cursor_request = this._objectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n            cursor_request.onerror = (e) => {\r\n                this._errorOccured = true;\r\n                this.onErrorOccured(e);\r\n            };\r\n            cursor_request.onsuccess = (e) => {\r\n                var cursor: IDBCursorWithValue = e.target.result;\r\n                if (cursor) {\r\n                    cursor.delete();\r\n                    ++this._rowAffected;\r\n                    cursor.continue();\r\n                }\r\n            };\r\n        }.bind(this);\r\n\r\n        if (!this._errorOccured) {\r\n            removeData(QueryExecutor._columnName, this._key);\r\n        }\r\n    }\r\n\r\n    private initTransaction() {\r\n        IdbHelper.createTransaction([QueryExecutor._tableName], this.onTransactionCompleted.bind(this));\r\n        this._objectStore = IdbHelper._transaction.objectStore(QueryExecutor._tableName);\r\n    }\r\n\r\n    private onTransactionCompleted() {\r\n        if (this._errorOccured === false) {\r\n            this._onSuccess(this._rowAffected);\r\n        }\r\n    }\r\n}"]}