{"version":3,"file":"get_logic.js","sourceRoot":"","sources":["../../../../web_worker/keystore/business/get_logic.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAEpC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAEzC;IAAyB,uBAAI;IAEzB,aAAY,GAAW,EAAE,SAA2B,EAAE,OAA8B;QAApF,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;IAC5B,CAAC;IAEM,qBAAO,GAAd;QAAA,iBAiBC;QAhBG,IAAI,OAAO,GAAG,UAAC,MAAM,EAAE,KAAK;YACxB,IAAI,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACzF,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;gBAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACb,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,IAAI,MAAM,GAAuB,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjB,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAElD,CAAC;IAEO,6BAAe,GAAvB;QACI,SAAS,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;QAC5G,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACrF,CAAC;IAEO,oCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IACL,UAAC;AAAD,CAAC,AAtCD,CAAyB,IAAI,GAsC5B","sourcesContent":["import { Base } from \"./base_logic\";\r\nimport { IError } from \"../interfaces\";\r\nimport { QueryExecutor } from \"../query_executor\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\n\r\nexport class Get extends Base {\r\n    _key: string;\r\n    constructor(key: string, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n        super();\r\n        this._key = key;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n    }\r\n\r\n    public execute() {\r\n        var getData = (column, value) => {\r\n            var cursor_request = this._objectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n            cursor_request.onerror = function (e) {\r\n                this._errorOccured = true;\r\n                this.on_errorOccured(e);\r\n            }.bind(this);\r\n            cursor_request.onsuccess = function (e) {\r\n                var cursor: IDBCursorWithValue = e.target.result;\r\n                if (cursor) {\r\n                    this._results = cursor.value['Value'];\r\n                }\r\n            }.bind(this);\r\n        };\r\n        this.initTransaction();\r\n        getData(QueryExecutor._columnName, this._key);\r\n\r\n    }\r\n\r\n    private initTransaction() {\r\n        IdbHelper.createTransaction([QueryExecutor._tableName], this.onTransactionCompleted.bind(this), 'readonly');\r\n        this._objectStore = IdbHelper._transaction.objectStore(QueryExecutor._tableName);\r\n    }\r\n\r\n    private onTransactionCompleted() {\r\n        if (this._errorOccured === false) {\r\n            this._onSuccess(this._results);\r\n        }\r\n    }\r\n}\r\n"]}