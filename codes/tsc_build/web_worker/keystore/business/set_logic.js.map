{"version":3,"file":"set_logic.js","sourceRoot":"","sources":["../../../../web_worker/keystore/business/set_logic.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAEpC,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD;IAAyB,uBAAI;IAEzB,aAAY,KAAc,EAAE,SAAqB,EAAE,OAA8B;QAAjF,YACI,iBAAO,SASV;QARG,IAAI,CAAC;YACD,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC5B,CAAC;QACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACtB,CAAC;;IACL,CAAC;IAEM,qBAAO,GAAd;QAAA,iBA8BC;QA7BG,IAAI,uBAAuB,GAAG;YAC1B,IAAI,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,UAAU,CAC9E,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAC3D,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAC,CAAC;gBACzB,IAAI,MAAM,GAAwB,CAAS,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC1D,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,UAAU,EAAE,CAAC;gBACjB,CAAC;YACL,CAAC,CAAC;YAEF,cAAc,CAAC,OAAO,GAAG,UAAC,CAAC;gBACvB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC;QAEN,CAAC,CAAC;QACF,IAAI,UAAU,GAAG;YACb,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACpD,UAAU,CAAC,OAAO,GAAG,UAAC,CAAC;gBACnB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC;QACN,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,uBAAuB,EAAE,CAAC;IAC9B,CAAC;IAEO,6BAAe,GAAvB;QACI,SAAS,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACrF,CAAC;IAEO,oCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;IACL,CAAC;IACL,UAAC;AAAD,CAAC,AAxDD,CAAyB,IAAI,GAwD5B","sourcesContent":["import { Base } from \"./base_logic\";\r\nimport { IInsert, IError } from \"../interfaces\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\nimport { QueryExecutor } from \"../query_executor\";\r\n\r\nexport class Set extends Base {\r\n    _query: IInsert;\r\n    constructor(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n        super();\r\n        try {\r\n            this._query = query;\r\n            this._onSuccess = onSuccess;\r\n            this._onError = onError;\r\n        }\r\n        catch (ex) {\r\n            console.error(ex);\r\n        }\r\n    }\r\n\r\n    public execute() {\r\n        var updateIfExistElseInsert = () => {\r\n            var cursor_request = this._objectStore.index(QueryExecutor._columnName).openCursor(\r\n                IDBKeyRange.only(this._query[QueryExecutor._columnName])\r\n            );\r\n            cursor_request.onsuccess = (e) => {\r\n                var cursor: IDBCursorWithValue = (e as any).target.result;\r\n                if (cursor) {\r\n                    cursor.update(this._query);\r\n                }\r\n                else {\r\n                    insertData();\r\n                }\r\n            };\r\n\r\n            cursor_request.onerror = (e) => {\r\n                this._errorOccured = true;\r\n                this.onErrorOccured(e);\r\n            };\r\n\r\n        };\r\n        var insertData = () => {\r\n            var add_result = this._objectStore.add(this._query);\r\n            add_result.onerror = (e) => {\r\n                this._errorOccured = true;\r\n                this.onErrorOccured(e);\r\n            };\r\n        };\r\n        this.initTransaction();\r\n        updateIfExistElseInsert();\r\n    }\r\n\r\n    private initTransaction() {\r\n        IdbHelper.createTransaction([QueryExecutor._tableName], this.onTransactionCompleted.bind(this));\r\n        this._objectStore = IdbHelper._transaction.objectStore(QueryExecutor._tableName);\r\n    }\r\n\r\n    private onTransactionCompleted() {\r\n        if (this._errorOccured === false && this._onSuccess) {\r\n            this._onSuccess(null);\r\n        }\r\n    }\r\n}"]}