{"version":3,"file":"utils_logic.js","sourceRoot":"","sources":["../../../web_worker/keystore/utils_logic.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,UAAU,CAAC;AAEpC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD;IAAA;IAqCA,CAAC;IApCG;;;;;OAKG;IACI,eAAS,GAAhB;QACI,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACb,SAAS,GAAI,IAAY,CAAC,YAAY;gBACjC,IAAY,CAAC,eAAe,IAAK,IAAY,CAAC,WAAW,CAAC;QACnE,CAAC;QACD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,cAAc,GAAG,cAAc;gBAC1B,IAAY,CAAC,oBAAoB,IAAK,IAAY,CAAC,gBAAgB,CAAC;YACxE,IAAY,CAAC,WAAW,GAAI,IAAY,CAAC,WAAW;gBAChD,IAAY,CAAC,iBAAiB,IAAK,IAAY,CAAC,aAAa,CAAC;QACvE,CAAC;QACD,IAAI,CAAC,CAAC;YACF,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG;gBAC1B,SAAS,EAAE,OAAO,CAAC,iBAAiB,CAAC,aAAa;gBAClD,SAAS,EAAE,OAAO,CAAC,UAAU,CAAC,kBAAkB;aACnD,CAAC;QACN,CAAC;IACL,CAAC;IAEM,oBAAc,GAArB,UAAsB,MAAyB,EAAE,GAAwB;QACrE,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;YACpB,aAAa,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC;QAC/C,CAAC;QACD,IAAI,CAAC,CAAC;YACF,aAAa,CAAC,SAAS,GAAG;gBACtB,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,GAAG;aACjB,CAAC;QACN,CAAC;IACL,CAAC;IACL,YAAC;AAAD,CAAC,AArCD,IAqCC","sourcesContent":["import * as JsStore from '../index';\r\nimport { Connection_Status } from './enums';\r\nimport { QueryExecutor } from './query_executor';\r\n\r\nexport class Utils {\r\n    /**\r\n     * determine and set the DataBase Type\r\n     * \r\n     * \r\n     * @memberOf UtilityLogic\r\n     */\r\n    static setDbType() {\r\n        if (!indexedDB) {\r\n            indexedDB = (self as any).mozIndexedDB ||\r\n                (self as any).webkitIndexedDB || (self as any).msIndexedDB;\r\n        }\r\n        if (indexedDB) {\r\n            IDBTransaction = IDBTransaction ||\r\n                (self as any).webkitIDBTransaction || (self as any).msIDBTransaction;\r\n            (self as any).IDBKeyRange = (self as any).IDBKeyRange ||\r\n                (self as any).webkitIDBKeyRange || (self as any).msIDBKeyRange;\r\n        }\r\n        else {\r\n            JsStore.IdbHelper._dbStatus = {\r\n                ConStatus: JsStore.Connection_Status.UnableToStart,\r\n                LastError: JsStore.Error_Type.IndexedDbUndefined\r\n            };\r\n        }\r\n    }\r\n\r\n    static updateDbStatus(status: Connection_Status, err?: JsStore.Error_Type) {\r\n        if (err === undefined) {\r\n            QueryExecutor._dbStatus.ConStatus = status;\r\n        }\r\n        else {\r\n            QueryExecutor._dbStatus = {\r\n                ConStatus: status,\r\n                LastError: err\r\n            };\r\n        }\r\n    }\r\n}\r\n"]}