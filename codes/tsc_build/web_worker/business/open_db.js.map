{"version":3,"file":"open_db.js","sourceRoot":"","sources":["../../../web_worker/business/open_db.ts"],"names":[],"mappings":"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","sourcesContent":["import { IdbHelper } from \"./idb_helper\";\r\nimport { IError } from \"../interfaces\";\r\nimport { Connection_Status, Error_Type } from \"../enums\";\r\nimport { LogHelper } from \"../log_helper\";\r\nimport { Table } from \"../model/table\";\r\n\r\nexport class OpenDb {\r\n    _dbName: string;\r\n    _onSuccess: () => void;\r\n    _onError: (err: IError) => void;\r\n\r\n    constructor(onSuccess: () => void, onError: (err: IError) => void) {\r\n        this._dbName = IdbHelper._activeDb._name;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n    }\r\n\r\n    execute() {\r\n        if (this._dbName.length > 0) {\r\n            var db_request = indexedDB.open(this._dbName, IdbHelper._dbVersion);\r\n\r\n            db_request.onerror = (event) => {\r\n                if (this._onError != null) {\r\n                    this._onError((event as any).target.error);\r\n                }\r\n            };\r\n\r\n            db_request.onsuccess = (event) => {\r\n                IdbHelper._dbStatus.ConStatus = Connection_Status.Connected;\r\n                IdbHelper._dbConnection = db_request.result;\r\n                (IdbHelper._dbConnection as any).onclose = (e) => {\r\n                    IdbHelper.callDbDroppedByBrowser();\r\n                    IdbHelper.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                };\r\n\r\n                IdbHelper._dbConnection.onversionchange = (e) => {\r\n                    if (e.newVersion === null) { // An attempt is made to delete the db\r\n                        if (e.newVersion === null) { // An attempt is made to delete the db\r\n                            (e.target as any).close(); // Manually close our connection to the db\r\n                            IdbHelper.callDbDroppedByBrowser(true);\r\n                            IdbHelper.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                IdbHelper._dbConnection.onerror = (e) => {\r\n                    IdbHelper._dbStatus.LastError = (\"Error occured in connection :\" + (e.target as any).result) as any;\r\n                };\r\n\r\n                IdbHelper._dbConnection.onabort = (e) => {\r\n                    IdbHelper._dbStatus.ConStatus = Connection_Status.Closed;\r\n                    IdbHelper._dbStatus.LastError = Error_Type.ConnectionAborted;\r\n                };\r\n                if (this._onSuccess != null) {\r\n                    this._onSuccess();\r\n                }\r\n                this.setPrimaryKey();\r\n            };\r\n        }\r\n        else {\r\n            var error = new LogHelper(Error_Type.UndefinedDbName);\r\n            error.throw();\r\n        }\r\n    }\r\n\r\n    private setPrimaryKey() {\r\n        IdbHelper._activeDb._tables.forEach((table: Table, index) => {\r\n            table._columns.every(item => {\r\n                IdbHelper._activeDb._tables[index]._primaryKey = item._primaryKey ? item._name : \"\";\r\n                return !item._primaryKey;\r\n            });\r\n        });\r\n    }\r\n}"]}