{"version":3,"file":"instance.js","sourceRoot":"","sources":["../../../../web_worker/business/insert/instance.ts"],"names":[],"mappings":"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","sourcesContent":["import { Base } from \"../base\";\r\nimport { IInsert, IError } from \"../../interfaces\";\r\nimport { Table } from \"../../model/table\";\r\nimport { Error_Type } from \"../../enums\";\r\nimport { LogHelper } from \"../../log_helper\";\r\nimport { ValuesChecker } from \"./values_checker\";\r\nimport { IdbHelper } from '../idb_helper';\r\n\r\nexport class Instance extends Base {\r\n    _valuesAffected = [];\r\n    _query: IInsert;\r\n    _table: Table;\r\n\r\n    constructor(query: IInsert, onSuccess: (rowsInserted: number) => void, onError: (err: IError) => void) {\r\n        super();\r\n        this._onError = onError;\r\n        this._query = query;\r\n        this._onSuccess = onSuccess;\r\n        this._tableName = this._query.into;\r\n    }\r\n\r\n    execute() {\r\n        var table = this.getTable(this._tableName);\r\n        if (!Array.isArray(this._query.values)) {\r\n            this.onErrorOccured(\r\n                new LogHelper(Error_Type.NotArray).get(),\r\n                true\r\n            );\r\n        }\r\n        else if (table) {\r\n            try {\r\n                if (this._query.skipDataCheck) {\r\n                    this.insertData(this._query.values);\r\n                }\r\n                else {\r\n                    var value_checker_obj = new ValuesChecker(table, this._query.values);\r\n                    value_checker_obj.checkAndModifyValues(function (isError) {\r\n                        if (isError) {\r\n                            this.onErrorOccured(value_checker_obj._error, true);\r\n                        }\r\n                        else {\r\n                            this.insertData(value_checker_obj._values);\r\n                        }\r\n                        value_checker_obj = undefined;\r\n                    }.bind(this));\r\n                }\r\n                // remove values from query\r\n                this._query.values = undefined;\r\n            }\r\n            catch (ex) {\r\n                this.onExceptionOccured(ex, { TableName: this._tableName });\r\n            }\r\n        }\r\n        else {\r\n            new LogHelper(Error_Type.TableNotExist, { TableName: this._tableName }).throw();\r\n        }\r\n    }\r\n\r\n    private onTransactionCompleted() {\r\n        if (this._errorOccured === false) {\r\n            this._onSuccess(this._query.return ? this._valuesAffected : this._rowAffected);\r\n        }\r\n    }\r\n\r\n    private onQueryFinished() {\r\n        if (this._isTransaction === true) {\r\n            this.onTransactionCompleted();\r\n        }\r\n    }\r\n\r\n    private insertData(values) {\r\n        var value_index = 0,\r\n            insertDataIntoTable: (value: object) => void;\r\n        if (this._query.return) {\r\n            insertDataIntoTable = function (value) {\r\n                if (value) {\r\n                    var add_result = object_store.add(value);\r\n                    add_result.onerror = this.onErrorOccured.bind(this);\r\n                    add_result.onsuccess = function (e) {\r\n                        this._valuesAffected.push(value);\r\n                        insertDataIntoTable.call(this, values[value_index++]);\r\n                    }.bind(this);\r\n                }\r\n                else {\r\n                    this.onQueryFinished();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            insertDataIntoTable = function (value) {\r\n                if (value) {\r\n                    var add_result = object_store.add(value);\r\n                    add_result.onerror = this.onErrorOccured.bind(this);\r\n                    add_result.onsuccess = function (e) {\r\n                        ++this._rowAffected;\r\n                        insertDataIntoTable.call(this, values[value_index++]);\r\n                    }.bind(this);\r\n                }\r\n                else {\r\n                    this.onQueryFinished();\r\n                }\r\n            };\r\n        }\r\n        IdbHelper.createTransaction([this._query.into], this.onTransactionCompleted.bind(this));\r\n        var object_store = IdbHelper._transaction.objectStore(this._query.into);\r\n        insertDataIntoTable.call(this, values[value_index++]);\r\n    }\r\n}"]}