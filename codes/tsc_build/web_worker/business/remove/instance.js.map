{"version":3,"file":"instance.js","sourceRoot":"","sources":["../../../../web_worker/business/remove/instance.ts"],"names":[],"mappings":"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","sourcesContent":["import { Where } from \"./where\";\nimport { IRemove, IError } from \"../../interfaces\";\nimport { IdbHelper } from \"../idb_helper\";\nimport { Util } from \"../../util\";\nimport * as Select from '../select/index';\n\nexport class Instance extends Where {\n    _isOr: boolean;\n\n    constructor(\n        query: IRemove, onSuccess: (recordRemoved: number) => void,\n        onError: (err: IError) => void\n    ) {\n        super();\n        this._query = query;\n        this._onSuccess = onSuccess;\n        this._onError = onError;\n    }\n\n    execute() {\n        try {\n            if (this._query.where !== undefined) {\n                this.addGreatAndLessToNotOp();\n                this.initTransaction();\n                if (Array.isArray(this._query.where)) {\n                    this.processWhereArrayQry();\n                }\n                else {\n                    this.processWhere();\n                }\n            }\n            else {\n                this.initTransaction();\n                this.executeWhereUndefinedLogic();\n            }\n\n        }\n        catch (ex) {\n            this._errorOccured = true;\n            this.onExceptionOccured(ex, { TableName: this._query.from });\n        }\n    }\n\n    private processWhereArrayQry() {\n        var select_object = new Select.Instance(this._query as any,\n            function (results) {\n                var key_list = [],\n                    p_key = this.getPrimaryKey(this._query.from);\n                results.forEach((item) => {\n                    key_list.push(item[p_key]);\n                });\n                results = null;\n                this._query.where = {};\n                this._query.where[p_key] = { In: key_list };\n                this.processWhere(false);\n            }.bind(this), this._onError);\n        select_object.execute();\n    }\n\n    private processWhere() {\n        if (this._query.where.or) {\n            this.processOrLogic();\n        }\n        this.goToWhereLogic();\n    }\n\n    private initTransaction() {\n        IdbHelper.createTransaction([this._query.from], this.onTransactionCompleted.bind(this));\n        this._objectStore = IdbHelper._transaction.objectStore(this._query.from);\n    }\n\n    private onTransactionCompleted() {\n        if (this._errorOccured === false) {\n            this._onSuccess(this._rowAffected);\n        }\n    }\n\n    protected onQueryFinished() {\n        if (this._isOr === true) {\n            this.orQuerySuccess();\n        }\n        else if (this._isTransaction === true) {\n            this.onTransactionCompleted();\n        }\n    }\n\n    private orQuerySuccess() {\n        var key = Util.getObjectFirstKey((this as any)._orInfo.OrQuery);\n        if (key != null) {\n            var where = {};\n            where[key] = (this as any)._orInfo.OrQuery[key];\n            delete (this as any)._orInfo.OrQuery[key];\n            this._query.where = where;\n            this.goToWhereLogic();\n        }\n        else {\n            this._isOr = true;\n        }\n    }\n\n    private processOrLogic() {\n        this._isOr = true;\n        (this as any)._orInfo = {\n            OrQuery: this._query.where.Or\n        };\n\n        // free or memory\n        delete this._query.where.Or;\n    }\n}"]}