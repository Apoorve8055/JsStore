{"version":3,"file":"clear.js","sourceRoot":"","sources":["../../../web_worker/business/clear.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAEzC,OAAO,KAAK,QAAQ,MAAM,mBAAmB,CAAC;AAE9C;IAA2B,yBAAI;IAC3B,eAAY,SAAiB,EAAE,SAAqB,EAAE,OAA8B;QAApF,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;IAC5B,CAAC;IAED,uBAAO,GAAP;QAAA,iBAoBC;QAnBG,SAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACvC,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC/B,KAAI,CAAC,UAAU,EAAE,CAAC;YACtB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,GAAe,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;QACxF,aAAa,CAAC,SAAS,GAAG,UAAC,CAAC;YACxB,IAAI,aAAa,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,MAAc;gBAC1C,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;oBACxB,QAAQ,CAAC,GAAG,CAAC,aAAW,SAAS,CAAC,SAAS,CAAC,KAAK,SAAI,KAAI,CAAC,MAAM,SAAI,MAAM,CAAC,KAAK,WAAQ,EAAE,CAAC,CAAC,CAAC;gBACjG,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;YACtB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC;IACN,CAAC;IACL,YAAC;AAAD,CAAC,AA7BD,CAA2B,IAAI,GA6B9B","sourcesContent":["import { Base } from \"./base\";\nimport { IError } from \"../interfaces\";\nimport { IdbHelper } from './idb_helper';\nimport { Column } from \"../model/column\";\nimport * as KeyStore from \"../keystore/index\";\n\nexport class Clear extends Base {\n    constructor(tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\n        super();\n        this._query = tableName;\n        this._onSuccess = onSuccess;\n        this._onError = onError;\n    }\n\n    execute() {\n        IdbHelper.createTransaction([this._query], () => {\n            if (this._errorOccured === false) {\n                this._onSuccess();\n            }\n        });\n        var clear_request: IDBRequest = IdbHelper._transaction.objectStore(this._query).clear();\n        clear_request.onsuccess = (e) => {\n            var current_table = this.getTable(this._query);\n            current_table._columns.forEach((column: Column) => {\n                if (column._autoIncrement) {\n                    KeyStore.set(`JsStore_${IdbHelper._activeDb._name}_${this._query}_${column._name}_Value`, 0);\n                }\n            });\n        };\n\n        clear_request.onerror = (e) => {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        };\n    }\n}"]}