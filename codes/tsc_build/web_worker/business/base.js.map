{"version":3,"file":"base.js","sourceRoot":"","sources":["../../../web_worker/business/base.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseHelper } from \"./base_helper\";\nimport { IError } from \"../interfaces\";\nimport { WhereChecker } from \"./where_checker\";\nimport { IdbHelper } from \"./idb_helper\";\nimport { LogHelper } from \"../log_helper\";\nimport { Error_Type, Occurence, WhereQryOption } from \"../enums\";\nimport { Column } from \"../model/column\";\nimport { Util } from \"../util\";\n\nexport class Base extends BaseHelper {\n    _error: IError;\n    _errorOccured: boolean = false;\n    _errorCount = 0;\n    _rowAffected = 0;\n    _onSuccess: (result?) => void;\n    _onError: (err: IError) => void;\n    _objectStore: IDBObjectStore;\n    _query;\n    _whereChecker: WhereChecker;\n    _tableName: string;\n    _isTransaction: boolean;\n    _cursorOpenRequest: IDBRequest;\n\n    protected onErrorOccured(e, customError = false) {\n        ++this._errorCount;\n        if (this._errorCount === 1) {\n            if (this._onError != null) {\n                if (!customError) {\n                    var error = new LogHelper((e as any).target.error.name);\n                    error._message = (e as any).target.error.message;\n                    error.logError();\n                    this._onError(error);\n                }\n                else {\n                    this._onError(e);\n                    e.logError(e);\n                }\n            }\n        }\n    }\n\n    protected onExceptionOccured(ex: DOMException, info) {\n        switch (ex.name) {\n            case 'NotFoundError':\n                var error = new LogHelper(Error_Type.TableNotExist, info);\n                this.onErrorOccured(error.get(), true);\n                break;\n            default: console.error(ex);\n        }\n    }\n\n    protected getColumnInfo(columnName) {\n        var column_info: Column;\n        this.getTable(this._tableName)._columns.every((column) => {\n            if (column._name === columnName) {\n                column_info = column;\n                return false;\n            }\n            return true;\n        });\n        return column_info;\n    }\n\n    protected addGreatAndLessToNotOp() {\n        var where_query = this._query.where,\n            value;\n        if (this.containsNot(where_query)) {\n            var query_keys = Object.keys(where_query);\n            if (query_keys.length === 1) {\n                query_keys.forEach((prop) => {\n                    value = where_query[prop];\n                    if (value['!=']) {\n                        where_query[prop]['>'] = value['!='];\n                        if (where_query['Or'] === undefined) {\n                            where_query['Or'] = {};\n                            where_query['Or'][prop] = {};\n                        }\n                        else if (where_query['Or'][prop] === undefined) {\n                            where_query['Or'][prop] = {};\n                        }\n                        where_query['Or'][prop]['<'] = value['!='];\n                        delete where_query[prop]['!='];\n                    }\n                });\n                this._query.where = where_query;\n            }\n            else {\n                var where_tmp = [];\n                query_keys.forEach((prop) => {\n                    value = where_query[prop];\n                    var tmp_qry = {};\n                    if (value['!=']) {\n                        tmp_qry[prop] = {\n                            '>': value['!='],\n                            'Or': {\n\n                            }\n                        };\n                        tmp_qry[prop]['Or'][prop] = {};\n                        tmp_qry[prop]['Or'][prop]['<'] = value['!='];\n                    }\n                    else {\n                        tmp_qry[prop] = value;\n                    }\n                    where_tmp.push(tmp_qry);\n                });\n                this._query.where = where_tmp;\n            }\n        }\n    }\n\n    protected goToWhereLogic = function () {\n        var column_name = Util.getObjectFirstKey(this._query.where);\n        if (this._query.IgnoreCase === true) {\n            this._query.where = this.makeQryInCaseSensitive(this._query.where);\n        }\n        if (this._objectStore.indexNames.contains(column_name)) {\n            var value = this._query.where[column_name];\n            if (typeof value === 'object') {\n                this._checkFlag = Boolean(\n                    Object.keys(value).length > 1 ||\n                    Object.keys(this._query.where).length > 1\n                );\n                if (this._checkFlag === true) {\n                    this._whereChecker = new WhereChecker(this._query.where);\n                }\n                var key = Util.getObjectFirstKey(value);\n                switch (key) {\n                    case 'Like': {\n                        var filter_values = value.Like.split('%'),\n                            filter_value: string,\n                            occurence: Occurence;\n                        if (filter_values[1]) {\n                            filter_value = filter_values[1];\n                            occurence = filter_values.length > 2 ? Occurence.Any : Occurence.Last;\n                        }\n                        else {\n                            filter_value = filter_values[0];\n                            occurence = Occurence.First;\n                        }\n                        if (occurence === Occurence.First) {\n                            this.getAllCombinationOfWord(filter_value).forEach(function (item) {\n                                this.executeWhereLogic(column_name,\n                                    { '-': { Low: item, High: item + '\\uffff' } },\n                                    '-');\n                            }, this);\n                            delete this._query.where[column_name]['Like'];\n                        }\n                        else {\n                            this.executeLikeLogic(column_name, filter_value, occurence);\n                        }\n                    } break;\n                    case 'In':\n                        this.executeInLogic(column_name, value['In']);\n                        break;\n                    case '-':\n                    case '>':\n                    case '<':\n                    case '>=':\n                    case '<=':\n                        this.executeWhereLogic(column_name, value, key);\n                        break;\n                    case 'Aggregate': break;\n                    default: this.executeWhereLogic(column_name, value);\n                }\n            }\n            else {\n                this._checkFlag = Boolean(Object.keys(this._query.where).length > 1);\n                if (this._checkFlag === true) {\n                    this._whereChecker = new WhereChecker(this._query.where);\n                }\n                this.executeWhereLogic(column_name, value);\n            }\n        }\n        else {\n            this._errorOccured = true;\n            var column: Column = this.getColumnInfo(column_name),\n                error;\n            if (column == null) {\n                error = new LogHelper(Error_Type.ColumnNotExist, { ColumnName: column_name }).get();\n            }\n            else {\n                error = new LogHelper(Error_Type.EnableSearchOff, { ColumnName: column_name }).get();\n            }\n            this.onErrorOccured(error, true);\n        }\n    };\n\n    protected makeQryInCaseSensitive(qry) {\n        var results = [],\n            column_value,\n            key_value;\n        for (var column in qry) {\n            column_value = qry[column];\n            if (typeof column_value === 'object') {\n                for (var key in column_value) {\n                    key_value = column_value[key];\n                    switch (key) {\n                        case WhereQryOption.In:\n                            results = results.concat(this.getAllCombinationOfWord(key_value, true));\n                            break;\n                        case WhereQryOption.Like:\n                            break;\n                        default:\n                            results = results.concat(this.getAllCombinationOfWord(key_value));\n                    }\n                }\n                qry[column]['In'] = results;\n            }\n            else {\n                results = results.concat(this.getAllCombinationOfWord(column_value));\n                qry[column] = {\n                    In: results\n                };\n            }\n        }\n        return qry;\n    }\n}"]}