{"version":3,"file":"where.js","sourceRoot":"","sources":["../../../../web_worker/business/update/where.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B;IAA2B,yBAAI;IAA/B;;IAwCA,CAAC;IAvCW,iCAAiB,GAAzB,UAA0B,MAAM,EAAE,KAAK,EAAE,EAAE;QACvC,IAAI,MAA0B,EAC1B,cAAc,CAAC;QACnB,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/B,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;QACzF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;oBACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QAED,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IACL,YAAC;AAAD,CAAC,AAxCD,CAA2B,IAAI,GAwC9B","sourcesContent":["import { updateValue } from \"./base_update\";\nimport { Like } from \"./like\";\n\nexport class Where extends Like {\n    private executeWhereLogic(column, value, op) {\n        var cursor: IDBCursorWithValue,\n            cursor_request;\n        value = op ? value[op] : value;\n        cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\n        if (this._checkFlag) {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this._whereChecker.check(cursor.value)) {\n                        cursor.update(updateValue(this._query.Set, cursor.value));\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    cursor.update(updateValue(this._query.Set, cursor.value));\n                    ++this._rowAffected;\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n\n        cursor_request.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n    }\n}"]}