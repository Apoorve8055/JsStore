{"version":3,"file":"like.js","sourceRoot":"","sources":["../../../../web_worker/business/update/like.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAAE,EAAE,EAAE,MAAM,MAAM,CAAC;AAC1B,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C;IAA0B,wBAAE;IAA5B;;IAiDA,CAAC;IA5Ca,+BAAgB,GAA1B,UAA2B,MAAM,EAAE,KAAK,EAAE,MAAiB;QACvD,IAAI,MAA0B,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAI,KAAgB,CAAC,WAAW,EAAE,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;QACvE,mBAAmB,CAAC,OAAO,GAAG,UAAU,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEb,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,mBAAmB,CAAC,SAAS,GAAG,UAAU,CAAC;gBACvC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;wBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YAEL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,mBAAmB,CAAC,SAAS,GAAG,UAAU,CAAC;gBACvC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IACL,WAAC;AAAD,CAAC,AAjDD,CAA0B,EAAE,GAiD3B","sourcesContent":["import { Occurence } from \"../../enums\";\nimport { In } from \"./in\";\nimport { updateValue } from \"./base_update\";\n\nexport class Like extends In {\n    _compSymbol: Occurence;\n    _compValue;\n    _compValueLength: number;\n\n    protected executeLikeLogic(column, value, symbol: Occurence) {\n        var cursor: IDBCursorWithValue;\n        this._compValue = (value as string).toLowerCase();\n        this._compValueLength = this._compValue.length;\n        this._compSymbol = symbol;\n        var cursor_open_request = this._objectStore.index(column).openCursor();\n        cursor_open_request.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n\n        if (this._checkFlag) {\n            cursor_open_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key) &&\n                        this._whereChecker.check(cursor.value)) {\n                        cursor.update(updateValue(this._query.Set, cursor.value));\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n\n            }.bind(this);\n        }\n        else {\n            cursor_open_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key)) {\n                        cursor.update(updateValue(this._query.Set, cursor.value));\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n}\n"]}