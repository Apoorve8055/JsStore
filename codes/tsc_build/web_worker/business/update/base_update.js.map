{"version":3,"file":"base_update.js","sourceRoot":"","sources":["../../../../web_worker/business/update/base_update.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C,MAAM,CAAC,IAAI,WAAW,GAAG,UAAC,aAAa,EAAE,WAAW;IAChD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC;QAC5B,EAAE,CAAC,CAAC,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;YACzC,WAAW,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,CAAC,EAAS,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG;wBAAE,WAAW,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAC,KAAK,CAAC;oBAC5D,KAAK,GAAG;wBAAE,WAAW,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAC,KAAK,CAAC;oBAC5D,KAAK,GAAG;wBAAE,WAAW,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAC,KAAK,CAAC;oBAC5D,KAAK,GAAG;wBAAE,WAAW,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAC,KAAK,CAAC;oBAC5D,SAAS,WAAW,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;gBACnD,CAAC;gBACD,KAAK,CAAC;YACV,CAAC;QACL,CAAC;IACL,CAAC;IACD,MAAM,CAAC,WAAW,CAAC;AACvB,CAAC,CAAC;AAEF;IAAgC,8BAAI;IAApC;QAAA,qEAkBC;QAjBG,gBAAU,GAAG,KAAK,CAAC;;IAiBvB,CAAC;IAhBa,oCAAe,GAAzB;QACI,SAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC3E,CAAC;IAES,oCAAe,GAAzB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;IACL,CAAC;IAEO,2CAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IACL,iBAAC;AAAD,CAAC,AAlBD,CAAgC,IAAI,GAkBnC","sourcesContent":["import { Base } from \"../base\";\nimport { IdbHelper } from \"../idb_helper\";\n\nexport var updateValue = (suppliedValue, storedValue) => {\n    for (var key in suppliedValue) {\n        if (typeof suppliedValue[key] !== 'object') {\n            storedValue[key] = suppliedValue[key];\n        }\n        else {\n            for (var op in suppliedValue[key]) {\n                switch (op as any) {\n                    case '+': storedValue[key] += suppliedValue[key][op]; break;\n                    case '-': storedValue[key] -= suppliedValue[key][op]; break;\n                    case '*': storedValue[key] *= suppliedValue[key][op]; break;\n                    case '/': storedValue[key] /= suppliedValue[key][op]; break;\n                    default: storedValue[key] = suppliedValue[key];\n                }\n                break;\n            }\n        }\n    }\n    return storedValue;\n};\n\nexport class BaseUpdate extends Base {\n    _checkFlag = false;\n    protected initTransaction() {\n        IdbHelper.createTransaction([this._query.in], this.onTransactionCompleted.bind(this));\n        this._objectStore = IdbHelper._transaction.objectStore(this._query.in);\n    }\n\n    protected onQueryFinished() {\n        if (this._isTransaction === true) {\n            this.onTransactionCompleted();\n        }\n    }\n\n    private onTransactionCompleted() {\n        if (this._errorOccured === false) {\n            this._onSuccess(this._rowAffected);\n        }\n    }\n}\n"]}