{"version":3,"file":"not_where.js","sourceRoot":"","sources":["../../../../web_worker/business/select/not_where.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseSelect } from \"./base_select\";\nimport { LogHelper } from \"../../log_helper\";\nimport { Error_Type } from \"../../enums\";\n\nexport class NotWhere extends BaseSelect {\n    protected executeWhereUndefinedLogic() {\n        if (this._query.Order && this._query.Order.By) {\n            if (this._objectStore.indexNames.contains(this._query.Order.By)) {\n                var order_type: IDBCursorDirection = this._query.Order.Type &&\n                    this._query.Order.Type.toLowerCase() === 'desc' ? 'prev' : 'next';\n                this._sorted = true;\n                this._cursorOpenRequest = this._objectStore.index(this._query.Order.By).\n                    openCursor(null, order_type);\n            }\n            else {\n                var error = new LogHelper(Error_Type.ColumnNotExist, { ColumnName: this._query.Order.By });\n                error.throw();\n            }\n        }\n        else {\n            this._cursorOpenRequest = this._objectStore.openCursor();\n        }\n\n        if (this._skipRecord && this._limitRecord) {\n            this.executeSkipAndLimitForNoWhere();\n        }\n        else if (this._skipRecord) {\n            this.executeSkipForNoWhere();\n        }\n        else if (this._limitRecord) {\n            this.executeLimitForNotWhere();\n        }\n        else {\n            this.executeSimpleForNotWhere();\n        }\n\n        this._cursorOpenRequest.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n\n    }\n\n    private executeSkipAndLimitForNoWhere() {\n        var record_skipped = false,\n            cursor: IDBCursorWithValue;\n        this._cursorOpenRequest.onsuccess = (e) => {\n            cursor = (e as any).target.result;\n            if (cursor) {\n                if (record_skipped && this._results.length !== this._limitRecord) {\n                    this._results.push(cursor.value);\n                    cursor.continue();\n                }\n                else {\n                    record_skipped = true;\n                    cursor.advance(this._skipRecord);\n                }\n            } else {\n                this.onQueryFinished();\n            }\n        };\n    }\n\n    private executeSkipForNoWhere() {\n        var record_skipped = false,\n            cursor;\n        this._cursorOpenRequest.onsuccess = function (e) {\n            cursor = e.target.result;\n            if (cursor) {\n                if (record_skipped) {\n                    this._results.push(cursor.value);\n                    cursor.continue();\n                }\n                else {\n                    record_skipped = true;\n                    cursor.advance(this._skipRecord);\n                }\n            } else {\n                this.onQueryFinished();\n            }\n        }.bind(this);\n    }\n\n    private executeSimpleForNotWhere() {\n        var cursor;\n        this._cursorOpenRequest.onsuccess = function (e) {\n            cursor = e.target.result;\n            if (cursor) {\n                this._results.push(cursor.value);\n                (cursor as any).continue();\n            }\n            else {\n                this.onQueryFinished();\n            }\n        }.bind(this);\n    }\n\n    private executeLimitForNotWhere() {\n        var cursor;\n        this._cursorOpenRequest.onsuccess = function (e) {\n            cursor = e.target.result;\n            if (cursor && this._results.length !== this._limitRecord) {\n                this._results.push(cursor.value);\n                cursor.continue();\n            } else {\n                this.onQueryFinished();\n            }\n        }.bind(this);\n    }\n}\n"]}