{"version":3,"file":"join.js","sourceRoot":"","sources":["../../../../web_worker/business/select/join.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseSelect } from \"./base_select\";\nimport { ISelectJoin, ITableJoin, IError, IJoin, ISelect } from \"../../interfaces\";\nimport * as Select from './instance';\n\nexport class Join extends BaseSelect {\n    _query: ISelectJoin;\n    _queryStack: ITableJoin[] = [];\n    _currentQueryStackIndex = 0;\n\n    constructor(query: ISelectJoin, onSuccess: (results: any[]) => void, onError: (err: IError) => void) {\n        super();\n        this._onSuccess = onSuccess;\n        this._onError = onError;\n        this._query = query;\n        var table_list = []; // used to open the multiple object store\n\n        var convertQueryIntoStack = function (qry) {\n            if (qry.hasOwnProperty('Table1')) {\n                qry.Table2['JoinType'] = (qry as IJoin).join === undefined ?\n                    'inner' : (qry as IJoin).join.toLowerCase();\n                this._queryStack.push(qry.Table2);\n                if (this._queryStack.length % 2 === 0) {\n                    this._queryStack[this._queryStack.length - 1].NextJoin = qry.NextJoin;\n                }\n                table_list.push(qry.Table2.Table);\n                return convertQueryIntoStack(qry.Table1);\n            }\n            else {\n                this._queryStack.push(qry);\n                table_list.push(qry.Table);\n                return;\n            }\n        }.bind(this);\n        convertQueryIntoStack(query.from);\n        this._queryStack.reverse();\n        // get the data for first table\n        if (!this._errorOccured) {\n            var select_object = new Select.Instance({\n                from: this._queryStack[0].table,\n                where: this._queryStack[0].where\n            } as ISelect, function (results) {\n                var table_name = this._queryStack[0].Table;\n                results.forEach(function (item, index) {\n                    this._results[index] = {};\n                    this._results[index][table_name] = item;\n                }, this);\n                this.startExecutionJoinLogic();\n            }.bind(this), this.onErrorOccured.bind(this));\n            select_object.execute();\n        }\n    }\n\n    private onTransactionCompleted(e) {\n        if (this._onSuccess != null && (this._queryStack.length === this._currentQueryStackIndex + 1)) {\n            if (this._query['Count']) {\n                this._onSuccess(this._results.length);\n            }\n            else {\n                if (this._query['Skip'] && this._query['Limit']) {\n                    this._results.splice(0, this._query['Skip']);\n                    this._results.splice(this._query['Limit'] - 1, this._results.length);\n                }\n                else if (this._query['Skip']) {\n                    this._results.splice(0, this._query['Skip']);\n                }\n                else if (this._query['Limit']) {\n                    this._results.splice(this._query['Limit'] - 1, this._results.length);\n                }\n                this._onSuccess(this._results);\n            }\n\n        }\n    }\n\n    private executeWhereJoinLogic(joinQuery: ITableJoin, query: ITableJoin) {\n        var results = [],\n            join_index = 0,\n            column = query.column,\n            tmp_results = this._results,\n            item,\n            result_length = tmp_results.length;\n\n        // get the data from query table\n        var select_object = new Select.Instance({\n            from: query.table,\n            order: query.order,\n            where: query.where\n        } as ISelect, function (selectResults) {\n            // perform join\n            selectResults.forEach((value, index) => {\n                // search item through each global result\n                for (var i = 0; i < result_length; i++) {\n                    item = tmp_results[i][joinQuery.table][joinQuery.column];\n                    doJoin(item, value, i);\n                }\n            });\n            this._results = results;\n            // check if further execution needed\n            if (this._queryStack.length > this._currentQueryStackIndex + 1) {\n                this.startExecutionJoinLogic();\n            }\n            else {\n                this.onTransactionCompleted(null);\n            }\n\n        }.bind(this), this.onErrorOccured.bind(this));\n        select_object.execute();\n\n        var doJoin = function (value1, value2, itemIndex) {\n            results[join_index] = {};\n            if (value1 === value2[query.column]) {\n                results[join_index][query.table] = value2;\n                // copy other relative data into current result\n                for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                    results[join_index][this._queryStack[j].Table] =\n                        tmp_results[itemIndex][this._queryStack[j].Table];\n                }\n                ++join_index;\n            }\n            else if (query.joinType === 'left') {\n                // left join\n                results[join_index] = {};\n                results[join_index][query.table] = null;\n                // copy other relative data into current result\n                for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                    results[join_index][this._queryStack[j].Table] =\n                        tmp_results[itemIndex][this._queryStack[j].Table];\n                }\n                // results[JoinIndex][joinQuery.Table] = TmpResults[ItemIndex][joinQuery.Table];\n                ++join_index;\n            }\n        }.bind(this);\n    }\n\n    private executeRightJoin(joinQuery: ITableJoin, query: ITableJoin) {\n        var join_results = [],\n            join_index = 0,\n            column = query.column,\n            tmp_results = this._results,\n            result_length = tmp_results.length,\n            item_index = 0,\n            where = {},\n            onExecutionFinished = function () {\n                this._results = join_results;\n                // check if further execution needed\n                if (this._queryStack.length > this._currentQueryStackIndex + 1) {\n                    this.startExecutionJoinLogic();\n                }\n                else {\n                    this.onTransactionCompleted(null);\n                }\n            }.bind(this),\n            doRightJoin = function (results) {\n                var value_found = false;\n                results.forEach(function (item, index) {\n                    for (item_index = 0; item_index < result_length; item_index++) {\n                        if (item[query.column] ===\n                            tmp_results[item_index][joinQuery.table][joinQuery.column]) {\n                            value_found = true;\n                            break;\n                        }\n                    }\n                    join_results[index] = {};\n                    join_results[index][query.table] = item;\n                    if (value_found) {\n                        value_found = false;\n                        for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                            join_results[index][this._queryStack[j].Table] =\n                                tmp_results[item_index][this._queryStack[j].Table];\n                        }\n                    }\n                    else {\n                        for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                            join_results[index][this._queryStack[j].Table] = null;\n                        }\n                    }\n                }, this);\n            }.bind(this),\n            executeLogic = () => {\n                var select_object = new Select.Instance({\n                    from: query.table,\n                    order: query.order,\n                    where: query.where\n                } as ISelect, (results) => {\n                    doRightJoin(results);\n                    onExecutionFinished();\n                }, this.onErrorOccured.bind(this));\n                select_object.execute();\n            };\n        executeLogic();\n    }\n\n    private executeWhereUndefinedLogicForJoin(joinQuery: ITableJoin, query: ITableJoin) {\n        var join_results = [],\n            join_index = 0,\n            column = query.column,\n            tmp_results = this._results,\n            // Item,\n            result_length = tmp_results.length,\n            item_index = 0,\n            where = {},\n            onExecutionFinished = function () {\n                this._results = join_results;\n                // check if further execution needed\n                if (this._queryStack.length > this._currentQueryStackIndex + 1) {\n                    this.startExecutionJoinLogic();\n                }\n                else {\n                    this.onTransactionCompleted(null);\n                }\n            }.bind(this),\n            doJoin = function (results) {\n                if (results.length > 0) {\n                    results.forEach(function (value) {\n                        join_results[join_index] = {};\n                        join_results[join_index][query.table] = value;\n                        // copy other relative data into current result\n                        for (var k = 0; k < this._currentQueryStackIndex; k++) {\n                            join_results[join_index][this._queryStack[k].Table] =\n                                tmp_results[item_index][this._queryStack[k].Table];\n                        }\n                        ++join_index;\n                    }, this);\n                }\n                else if (query.joinType === 'left') {\n                    // left join\n                    join_results[join_index] = {};\n                    join_results[join_index][query.table] = null;\n                    // copy other relative data into current result\n                    for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                        join_results[join_index][this._queryStack[j].Table] =\n                            tmp_results[item_index][this._queryStack[j].Table];\n                    }\n                    ++join_index;\n                }\n            }.bind(this),\n            executeLogic = function () {\n                if (item_index < result_length) {\n                    if (!this._errorOccured) {\n                        where[query.column] = tmp_results[item_index][joinQuery.table][joinQuery.column];\n                        var select_object = new Select.Instance({\n                            from: query.table,\n                            order: query.order,\n                            where: where\n                        } as ISelect, (results) => {\n                            doJoin(results);\n                            ++item_index;\n                            executeLogic();\n                        }, this.onErrorOccured.bind(this));\n                        select_object.execute();\n                    }\n                }\n                else {\n                    onExecutionFinished();\n                }\n            }.bind(this);\n        executeLogic();\n    }\n\n    private startExecutionJoinLogic() {\n        var join_query;\n        if (this._currentQueryStackIndex >= 1 && this._currentQueryStackIndex % 2 === 1) {\n            join_query = {\n                column: this._queryStack[this._currentQueryStackIndex].nextJoin.column,\n                table: this._queryStack[this._currentQueryStackIndex].nextJoin.table\n            } as ITableJoin;\n            this._currentQueryStackIndex++;\n        }\n        else {\n            join_query = this._queryStack[this._currentQueryStackIndex++];\n        }\n\n        var query = this._queryStack[this._currentQueryStackIndex];\n        if (query.joinType === 'right') {\n            this.executeRightJoin(join_query, query);\n        }\n        else if (query.where) {\n            this.executeWhereJoinLogic(join_query, query);\n        }\n        else {\n            this.executeWhereUndefinedLogicForJoin(join_query, query);\n        }\n    }\n}"]}