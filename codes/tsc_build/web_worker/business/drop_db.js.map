{"version":3,"file":"drop_db.js","sourceRoot":"","sources":["../../../web_worker/business/drop_db.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,QAAQ,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAGzC,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C;IAII,gBAAY,SAAqB,EAAE,OAA8B;QAC7D,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC;IAC7C,CAAC;IAED,+BAAc,GAAd;QAAA,iBAgBC;QAfG,QAAQ,CAAC,MAAM,CAAC,aAAW,IAAI,CAAC,OAAO,gBAAa,CAAC,CAAC;QACtD,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAY;YAC7C,QAAQ,CAAC,MAAM,CAAC,aAAW,KAAI,CAAC,OAAO,SAAI,KAAK,CAAC,KAAK,aAAU,CAAC,CAAC;YAClE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,MAAc;gBAC3C,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;oBACxB,QAAQ,CAAC,MAAM,CAAC,aAAW,IAAI,CAAC,OAAO,SAAI,KAAK,CAAC,KAAK,SAAI,MAAM,CAAC,KAAK,WAAQ,CAAC,CAAC;gBACpF,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,6BAA6B;QAC7B,SAAS,CAAC,SAAS,CAAC,UAAC,MAAM;YACvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/C,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,MAAM,CAAC,aAAW,IAAI,CAAC,OAAO,YAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACvE,CAAC;IAED,yBAAQ,GAAR;QAAA,iBAkBC;QAjBG,UAAU,CAAC;YACP,IAAI,eAAe,GAAG,SAAS,CAAC,cAAc,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC7D,eAAe,CAAC,SAAS,GAAG;gBACxB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC7D,CAAC;YACL,CAAC,CAAC;YACF,eAAe,CAAC,OAAO,GAAG,UAAC,CAAC;gBACxB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,QAAQ,CAAE,KAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC/C,CAAC;YACL,CAAC,CAAC;YACF,eAAe,CAAC,SAAS,GAAG;gBACxB,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,iBAAiB,CAAC,MAAM,CAAC;gBACzD,KAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC,CAAC;QACN,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IACL,aAAC;AAAD,CAAC,AA/CD,IA+CC","sourcesContent":["import { IError } from \"../interfaces\";\r\nimport * as KeyStore from \"../keystore/index\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\nimport { Table } from \"../model/table\";\r\nimport { Column } from \"../model/column\";\r\nimport { Connection_Status, Error_Type } from \"../enums\";\r\nimport { LogHelper } from \"../log_helper\";\r\n\r\nexport class DropDb {\r\n    _onSuccess: () => void;\r\n    _onError: (err: IError) => void;\r\n    _dbName: string;\r\n    constructor(onSuccess: () => void, onError: (err: IError) => void) {\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n        this._dbName = IdbHelper._activeDb._name;\r\n    }\r\n\r\n    deleteMetaData() {\r\n        KeyStore.remove(`JsStore_${this._dbName}_Db_Version`);\r\n        IdbHelper._activeDb._tables.forEach((table: Table) => {\r\n            KeyStore.remove(`JsStore_${this._dbName}_${table._name}_Version`);\r\n            table._columns.forEach(function (column: Column) {\r\n                if (column._autoIncrement) {\r\n                    KeyStore.remove(`JsStore_${this._dbName}_${table._name}_${column._name}_Value`);\r\n                }\r\n            });\r\n        });\r\n        // remove from database_list \r\n        IdbHelper.getDbList((result) => {\r\n            result.splice(result.indexOf(this._dbName), 1);\r\n            IdbHelper.setDbList(result);\r\n        });\r\n        KeyStore.remove(`JsStore_${this._dbName}_Schema`, this._onSuccess);\r\n    }\r\n\r\n    deleteDb() {\r\n        setTimeout(() => {\r\n            var db_drop_request = indexedDB.deleteDatabase(this._dbName);\r\n            db_drop_request.onblocked = () => {\r\n                if (this._onError != null) {\r\n                    this._onError(new LogHelper(Error_Type.DbBlocked).get());\r\n                }\r\n            };\r\n            db_drop_request.onerror = (e) => {\r\n                if (this._onError != null) {\r\n                    this._onError((event as any).target.error);\r\n                }\r\n            };\r\n            db_drop_request.onsuccess = () => {\r\n                IdbHelper._dbStatus.ConStatus = Connection_Status.Closed;\r\n                this.deleteMetaData();\r\n            };\r\n        }, 100);\r\n    }\r\n}\r\n"]}