{"version":3,"file":"idb_helper.js","sourceRoot":"","sources":["../../../web_worker/business/idb_helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Connection_Status, Error_Type } from \"../enums\";\r\nimport * as KeyStore from \"../keystore/index\";\r\nimport { IDbStatus } from \"../interfaces\";\r\nimport { DataBase } from \"../model/database\";\r\nimport { DropDb } from \"./drop_db\";\r\n\r\nexport class IdbHelper {\r\n\r\n    static _onDbDroppedByBrowser: () => void;\r\n    static _transaction: IDBTransaction = null;\r\n    static _isDbDeletedByBrowser: boolean;\r\n    static _dbConnection: IDBDatabase;\r\n    static _activeDb: DataBase;\r\n    static _dbVersion: number = 0;\r\n    static _dbStatus: IDbStatus = {\r\n        ConStatus: Connection_Status.NotStarted,\r\n        LastError: null\r\n    };\r\n\r\n    static callDbDroppedByBrowser(deleteMetaData?: boolean) {\r\n        if (this._dbStatus.ConStatus === Connection_Status.Connected) {\r\n            this._isDbDeletedByBrowser = true;\r\n            if (deleteMetaData === true) {\r\n                var drop_db_object = new DropDb(this._onDbDroppedByBrowser, null);\r\n                drop_db_object.deleteMetaData();\r\n            }\r\n        }\r\n    }\r\n\r\n    static createTransaction(tableNames, callBack: () => void, mode?) {\r\n        if (this._transaction === null) {\r\n            mode = mode ? mode : \"readwrite\";\r\n            this._transaction = this._dbConnection.transaction(tableNames, mode);\r\n            this._transaction.oncomplete = () => {\r\n                this._transaction = null;\r\n                callBack();\r\n            };\r\n            (this._transaction as any).ontimeout = () => {\r\n                this._transaction = null;\r\n                console.error('transaction timed out');\r\n            };\r\n        }\r\n    }\r\n\r\n    static setDbList(list: string[]) {\r\n        KeyStore.set('database_list', list);\r\n    }\r\n\r\n    static updateDbStatus(status: Connection_Status, err?: Error_Type) {\r\n        if (err === undefined) {\r\n            this._dbStatus.ConStatus = status;\r\n        }\r\n        else {\r\n            this._dbStatus = {\r\n                ConStatus: status,\r\n                LastError: err\r\n            };\r\n        }\r\n    }\r\n\r\n    static getDbList(callback: (dbList: string[]) => void) {\r\n        KeyStore.get('Database_List', (result) => {\r\n            result = result == null ? [] : result;\r\n            callback(result);\r\n        });\r\n    }\r\n\r\n    static getDbVersion(dbName: string, callback: (version: number) => void) {\r\n        KeyStore.get(`JsStore_${dbName}_Db_Version`, function (dbVersion) {\r\n            callback.call(this, Number(dbVersion));\r\n        }.bind(this));\r\n    }\r\n\r\n    static getDbSchema(dbName: string, callback: (any) => void) {\r\n        KeyStore.get(`JsStore_${dbName}_Schema`, (result) => {\r\n            if (result) {\r\n                if (result._name) {\r\n                    callback(result);\r\n                }\r\n                else {\r\n                    var db_schema = new DataBase(result);\r\n                    KeyStore.set(`JsStore_${dbName}_Schema`, db_schema);\r\n                    callback(db_schema);\r\n                }\r\n            }\r\n            else {\r\n                callback(result);\r\n            }\r\n        });\r\n    }\r\n}"]}