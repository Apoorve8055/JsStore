{"version":3,"file":"table_helper.js","sourceRoot":"","sources":["../../../web_worker/model/table_helper.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,QAAQ,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAEnD;IAWI,qBAAY,KAAY;QATxB,aAAQ,GAAa,EAAE,CAAC;QAKxB,mBAAc,GAAY,KAAK,CAAC;QAChC,qBAAgB,GAAY,KAAK,CAAC;QAI9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEM,oCAAc,GAArB,UAAsB,MAAc,EAAE,QAAoB;QACtD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAEO,mCAAa,GAArB;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,IAAI;YAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAEO,sCAAgB,GAAxB,UAAyB,MAAc;QACnC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAAG,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,EAAE,UAAU,YAAY;YACpF,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YACjC,CAAC;YAED,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC/B,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC;IAEO,kCAAY,GAApB,UAAqB,MAAc;QAC/B,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;QACnG,qBAAqB;QACrB,QAAQ,CAAC,GAAG,CAAC,aAAW,MAAM,gBAAa,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;QACnE,wBAAwB;QACxB,QAAQ,CAAC,GAAG,CAAC,aAAW,MAAM,SAAI,IAAI,CAAC,KAAK,aAAU,EAAE,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC;IACzC,CAAC;IACL,kBAAC;AAAD,CAAC,AAnDD,IAmDC","sourcesContent":["import { Table } from \"./table\";\nimport { Column } from \"./column\";\nimport * as KeyStore from \"../keystore/index\";\nimport { IdbHelper } from \"../business/idb_helper\";\n\nexport class TableHelper {\n    _name: string;\n    _columns: Column[] = [];\n\n    // internal Members\n    _primaryKey: string;\n    _version: number;\n    _requireDelete: boolean = false;\n    _requireCreation: boolean = false;\n    _callback: () => void;\n\n    constructor(table: Table) {\n        this._name = table._name;\n        this._version = table._version;\n        this._columns = table._columns;\n        this.setPrimaryKey();\n    }\n\n    public createMetaData(dbName: string, callBack: () => void) {\n        this._callback = callBack;\n        this.setRequireDelete(dbName);\n        this.setDbVersion(dbName);\n    }\n\n    private setPrimaryKey() {\n        this._columns.every(function (item) {\n            this._primaryKey = item._primaryKey ? item._name : \"\";\n            return !item._primaryKey;\n        }, this);\n    }\n\n    private setRequireDelete(dbName: string) {\n        KeyStore.get(\"JsStore_\" + dbName + \"_\" + this._name + \"_Version\", function (tableVersion) {\n            if (tableVersion == null) {\n                this._requireCreation = true;\n            }\n            // mark only table which has version greater than store version\n            else if (tableVersion < this._version) {\n                this._requireDelete = true;\n            }\n        }.bind(this));\n    }\n\n    private setDbVersion(dbName: string) {\n        IdbHelper._dbVersion = IdbHelper._dbVersion > this._version ? IdbHelper._dbVersion : this._version;\n        // setting db version\n        KeyStore.set(`JsStore_${dbName}_Db_Version`, IdbHelper._dbVersion);\n        // setting table version\n        KeyStore.set(`JsStore_${dbName}_${this._name}_Version`, IdbHelper._dbVersion, this._callback);\n        this._version = IdbHelper._dbVersion;\n    }\n}"]}