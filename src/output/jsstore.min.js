/*!
 * @license :jsstore - V2.0.0 - 30/04/2018
 * https://github.com/ujjwalguptaofficial/JsStore
 * Copyright (c) 2018 @Ujjwal Gupta; Licensed MIT
 */
var JsStore=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var r,o,i;n.r(t),function(e){e.WorkerNotSupplied="worker_not_supplied",e.IndexedDbUndefined="indexeddb_undefined"}(r||(r={})),function(e){e.Registered="registerd",e.Failed="failed",e.NotStarted="not_started"}(o||(o={})),function(e){e.String="string",e.Object="object",e.Array="array",e.Number="number",e.Boolean="boolean",e.Null="null"}(i||(i={}));var u,s=function(){function e(){}return e._isLogEnabled=!1,e}(),p=function(){function e(e,t){void 0===t&&(t=null),this.type=e,this._info=t,this.message=this.getMsg()}return e.prototype.throw=function(){throw this.get()},e.log=function(e){s._isLogEnabled&&console.log(e)},e.prototype.logError=function(){console.error(this.get())},e.prototype.logWarning=function(){console.warn(this.get())},e.prototype.get=function(){return{message:this.message,type:this.type}},e.prototype.getMsg=function(){var e;switch(this.type){case r.WorkerNotSupplied:e="Worker object is not passed in instance constructor";break;case r.IndexedDbUndefined:e="Browser does not support indexeddb";break;default:e=this.message}return e},e}(),c=function(){function e(e){(this.isDbOpened_=!1,this.requestQueue_=[],this.isCodeExecuting_=!1,this.whiteListApi_=["create_db","is_db_exist","get_db_version","get_db_list","open_db"],e)?(this.worker_=e,this.worker_.onmessage=this.onMessageFromWorker_.bind(this)):new p(r.WorkerNotSupplied).throw()}return e.prototype.onMessageFromWorker_=function(e){this.processFinishedQuery_(e.data)},e.prototype.processFinishedQuery_=function(e){var t=this.requestQueue_.shift();if(t){if(p.log("request finished : "+t.name),e.errorOccured)t.onError&&t.onError(e.errorDetails);else if(t.onSuccess){["open_db","create_db"].indexOf(t.name)>=0&&(this.isDbOpened_=!0),t.onSuccess(e.returnedValue)}this.isCodeExecuting_=!1,this.executeQry_()}},e.prototype.pushApi=function(e){var t=this;return new Promise(function(n,r){e.onSuccess=function(e){n(e)},e.onError=function(e){r(e)},t.prcoessExecutionOfQry_(e)})},e.prototype.prcoessExecutionOfQry_=function(e){this.requestQueue_.push(e),this.executeQry_(),p.log("request pushed: "+e.name)},e.prototype.executeQry_=function(){var e=this;if(!this.isCodeExecuting_&&this.requestQueue_.length>0){if(this.isDbOpened_)return void this.sendRequestToWorker_(this.requestQueue_[0]);var t=-1;this.requestQueue_.every(function(n,r){return!(e.whiteListApi_.indexOf(n.name)>=0)||(t=r,!1)}),t>=0&&(this.requestQueue_.splice(0,0,this.requestQueue_.splice(t,1)[0]),this.sendRequestToWorker_(this.requestQueue_[0]))}},e.prototype.sendRequestToWorker_=function(e){this.isCodeExecuting_=!0;var t={name:e.name,query:e.query};p.log("request executing : "+e.name),this.worker_.postMessage(t)},e}(),a=(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}u(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),h=function(e){function t(t){return e.call(this,t)||this}return a(t,e),t.prototype.openDb=function(e){return this.pushApi({name:"open_db",query:e})},t.prototype.createDb=function(e){return this.pushApi({name:"create_db",query:e})},t.prototype.dropDb=function(){return this.pushApi({name:"drop_db",query:null})},t.prototype.select=function(e){return this.pushApi({name:"select",query:e})},t.prototype.count=function(e){return this.pushApi({name:"count",query:e})},t.prototype.insert=function(e){return this.pushApi({name:"insert",query:e})},t.prototype.update=function(e){return this.pushApi({name:"update",query:e})},t.prototype.remove=function(e){return this.pushApi({name:"remove",query:e})},t.prototype.clear=function(e){return this.pushApi({name:"clear",query:e})},t.prototype.bulkInsert=function(e){return this.pushApi({name:"bulk_insert",query:e})},t.prototype.exportJson=function(e){var t=this;return new Promise(function(n,r){t.pushApi({name:"export_json",query:e}).then(function(t){!function(t){var n=document.createElement("a");n.href=t,n.download=e.from+".json",n.click()}(t),n()}).catch(function(e){r(e)})})},t.prototype.setLogStatus=function(e){s._isLogEnabled=e||s._isLogEnabled,this.pushApi({name:"enable_log",query:s._isLogEnabled})},t.prototype.getDbVersion=function(e){return this.pushApi({name:"get_db_version",query:e})},t.prototype.isDbExist=function(e){return this.pushApi({name:"is_db_exist",query:e})},t.prototype.getDbList=function(){return this.pushApi({name:"get_db_list",query:null})},t.prototype.getDbSchema=function(e){return this.pushApi({name:"get_db_schema",query:e})},t}(c),f=function(){s._isLogEnabled=!0};n.d(t,"Instance",function(){return h}),n.d(t,"ERROR_TYPE",function(){return r}),n.d(t,"WORKER_STATUS",function(){return o}),n.d(t,"DATA_TYPE",function(){return i}),n.d(t,"Config",function(){return s}),n.d(t,"enableLog",function(){return f})}]);