{"version":3,"sources":["webpack://JsStore/webpack/bootstrap","webpack://JsStore/./codes/main/config.ts","webpack://JsStore/./codes/main/enums.ts","webpack://JsStore/./codes/main/helper.ts","webpack://JsStore/./codes/main/index.ts","webpack://JsStore/./codes/main/instance.ts","webpack://JsStore/./codes/main/instance_helper.ts","webpack://JsStore/./codes/main/log_helper.ts"],"names":[],"mappings":"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","file":"jsstore.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./codes/main/index.ts\");\n","export class Config {\r\n    static _isLogEnabled = false;\r\n}","export enum Error_Type {\r\n    WorkerNotSupplied = \"worker_not_supplied\",\r\n    IndexedDbUndefined = \"indexeddb_undefined\"\r\n}\r\n\r\nexport enum WebWorker_Status {\r\n    Registered = \"registerd\",\r\n    Failed = \"failed\",\r\n    NotStarted = \"not_started\"\r\n}\r\n\r\nexport enum Data_Type {\r\n    String = \"string\",\r\n    Object = \"object\",\r\n    Array = \"array\",\r\n    Number = \"number\",\r\n    Boolean = \"boolean\",\r\n    Null = \"null\"\r\n}\r\n","import { Config } from \"./config\";\r\n\r\n/**\r\n * Enable log\r\n * \r\n */\r\nexport var enableLog = () => {\r\n    Config._isLogEnabled = true;\r\n};","export * from './instance';\r\nexport * from './enums';\r\nexport * from './config';\r\nexport * from './helper';","import { LogHelper } from \"./log_helper\";\r\nimport { Error_Type } from \"./enums\";\r\nimport { InstanceHelper } from \"./instance_helper\";\r\nimport { IDataBase, ISelect, ICount, IInsert, IUpdate, IRemove, IDbInfo } from \"./interfaces\";\r\nimport { Config } from \"./config\";\r\n\r\nexport class Instance extends InstanceHelper {\r\n\r\n    constructor(worker: Worker) {\r\n        super(worker);\r\n    }\r\n\r\n    /**\r\n     *  open database\r\n     * \r\n     * @param {string} dbName \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    openDb(dbName: string) {\r\n        return this.pushApi<null>({\r\n            name: 'open_db',\r\n            query: dbName\r\n        });\r\n    }\r\n\r\n    /**\r\n     * creates DataBase\r\n     * \r\n     * @param {IDataBase} dataBase \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    createDb(dataBase: IDataBase) {\r\n        return this.pushApi<string[]>({\r\n            name: 'create_db',\r\n            query: dataBase\r\n        });\r\n    }\r\n\r\n    /**\r\n     * drop dataBase\r\n     * \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    dropDb() {\r\n        return this.pushApi<null>({\r\n            name: 'drop_db',\r\n            query: null\r\n        });\r\n    }\r\n\r\n    /**\r\n     * select data from table\r\n     * \r\n     * @template T \r\n     * @param {ISelect} query \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    select<T>(query: ISelect) {\r\n        return this.pushApi<T[]>({\r\n            name: 'select',\r\n            query: query\r\n        });\r\n    }\r\n\r\n    /**\r\n     * get no of record from table\r\n     * \r\n     * @param {ICount} query \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    count(query: ICount) {\r\n        return this.pushApi<number>({\r\n            name: 'count',\r\n            query: query\r\n        });\r\n    }\r\n\r\n    /**\r\n     * insert data into table\r\n     * \r\n     * @param {IInsert} query \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    insert(query: IInsert) {\r\n        return this.pushApi<number>({\r\n            name: 'insert',\r\n            query: query\r\n        });\r\n    }\r\n\r\n    /**\r\n     * update data into table\r\n     * \r\n     * @param {IUpdate} query \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    update(query: IUpdate) {\r\n        return this.pushApi<number>({\r\n            name: 'update',\r\n            query: query\r\n        });\r\n    }\r\n\r\n    /**\r\n     * remove data from table\r\n     * \r\n     * @param {IRemove} query \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    remove(query: IRemove) {\r\n        return this.pushApi<number>({\r\n            name: 'remove',\r\n            query: query\r\n        });\r\n    }\r\n\r\n    /**\r\n     * delete all data from table\r\n     * \r\n     * @param {string} tableName \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    clear(tableName: string) {\r\n        return this.pushApi<null>({\r\n            name: 'clear',\r\n            query: tableName\r\n        });\r\n    }\r\n\r\n    /**\r\n     * insert bulk amount of data\r\n     * \r\n     * @param {IInsert} query \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    bulkInsert(query: IInsert) {\r\n        return this.pushApi<null>({\r\n            name: 'bulk_insert',\r\n            query: query\r\n        });\r\n    }\r\n\r\n    /**\r\n     *  export the result in json file\r\n     * \r\n     * @param {ISelect} query \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    exportJson(query: ISelect) {\r\n        var onSuccess = (url) => {\r\n            var link = document.createElement(\"a\");\r\n            link.href = url;\r\n            link.download = query.from + \".json\";\r\n            link.click();\r\n        };\r\n\r\n        return new Promise<null>((resolve, reject) => {\r\n            this.pushApi({\r\n                name: 'export_json',\r\n                query: query\r\n            }).then(url => {\r\n                onSuccess(url);\r\n                resolve();\r\n            }).catch((err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * set log status\r\n     * \r\n     * @param {boolean} status \r\n     * @memberof Instance\r\n     */\r\n    setLogStatus(status: boolean) {\r\n        Config._isLogEnabled = status ? status : Config._isLogEnabled;\r\n        this.pushApi({\r\n            name: 'enable_log',\r\n            query: Config._isLogEnabled\r\n        });\r\n    }\r\n\r\n    /**\r\n     * get version of database\r\n     * \r\n     * @param {(string | IDbInfo)} dbName \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    getDbVersion(dbName: string | IDbInfo) {\r\n        return this.pushApi<number>({\r\n            name: 'get_db_version',\r\n            query: dbName\r\n        });\r\n    }\r\n\r\n    /**\r\n     * is database exist\r\n     * \r\n     * @param {(IDbInfo | string)} dbInfo \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    isDbExist(dbInfo: IDbInfo | string) {\r\n        return this.pushApi<boolean>({\r\n            name: 'is_db_exist',\r\n            query: dbInfo\r\n        });\r\n    }\r\n\r\n    /**\r\n     * returns list of database created\r\n     * \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    getDbList() {\r\n        return this.pushApi<string[]>({\r\n            name: 'get_db_list',\r\n            query: null\r\n        });\r\n    }\r\n\r\n    /**\r\n     * get Database Schema\r\n     * \r\n     * @param {string} dbName \r\n     * @returns \r\n     * @memberof Instance\r\n     */\r\n    getDbSchema(dbName: string) {\r\n        return this.pushApi<string[]>({\r\n            name: 'get_db_schema',\r\n            query: dbName\r\n        });\r\n    }\r\n\r\n}","import { LogHelper } from \"./log_helper\";\r\nimport { Error_Type } from \"./enums\";\r\nimport { IWebWorkerRequest, IWebWorkerResult } from \"./interfaces\";\r\n\r\nexport class InstanceHelper {\r\n    private _worker: Worker;\r\n    private _isDbOpened: boolean = false;\r\n    private _requestQueue: IWebWorkerRequest[] = [];\r\n    private _isCodeExecuting = false;\r\n    private _whiteListApi = ['create_db', 'is_db_exist', 'get_db_version', 'get_db_list', 'open_db'];\r\n    constructor(worker: Worker) {\r\n        if (worker) {\r\n            this._worker = worker;\r\n            this._worker.onmessage = this.onMessageFromWorker.bind(this);\r\n        }\r\n        else {\r\n            var err = new LogHelper(Error_Type.WorkerNotSupplied);\r\n            err.throw();\r\n        }\r\n    }\r\n\r\n    onMessageFromWorker(msg) {\r\n        this.processFinishedQuery(msg.data);\r\n    }\r\n\r\n    private processFinishedQuery(message: IWebWorkerResult) {\r\n        var finished_request: IWebWorkerRequest = this._requestQueue.shift();\r\n        if (finished_request) {\r\n            LogHelper.log(\"request finished : \" + finished_request.name);\r\n            if (message.errorOccured) {\r\n                if (finished_request.onError) {\r\n                    finished_request.onError(message.errorDetails);\r\n                }\r\n            }\r\n            else {\r\n                if (finished_request.onSuccess) {\r\n                    var open_db_queries = ['open_db', 'create_db'];\r\n                    if (open_db_queries.indexOf(finished_request.name) >= 0) {\r\n                        this._isDbOpened = true;\r\n                    }\r\n                    finished_request.onSuccess(message.returnedValue);\r\n                }\r\n            }\r\n            this._isCodeExecuting = false;\r\n            this.executeQry();\r\n        }\r\n    }\r\n\r\n    protected pushApi<T>(request: IWebWorkerRequest): Promise<T> {\r\n        return new Promise((resolve, reject) => {\r\n            request.onSuccess = (result) => {\r\n                resolve(result as T);\r\n            };\r\n            request.onError = (error) => {\r\n                reject(error);\r\n            };\r\n            this.prcoessExecutionOfQry(request);\r\n        });\r\n    }\r\n\r\n    private prcoessExecutionOfQry(request: IWebWorkerRequest) {\r\n        this._requestQueue.push(request);\r\n        this.executeQry();\r\n        LogHelper.log(\"request pushed: \" + request.name);\r\n    }\r\n\r\n    private executeQry() {\r\n        if (!this._isCodeExecuting && this._requestQueue.length > 0) {\r\n            if (this._isDbOpened) {\r\n                this.sendRequestToWorker(this._requestQueue[0]);\r\n                return;\r\n            }\r\n            var allowed_query_index = -1;\r\n            this._requestQueue.every((item, index) => {\r\n                if (this._whiteListApi.indexOf(item.name) >= 0) {\r\n                    allowed_query_index = index;\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            // shift allowed query to zeroth index\r\n            if (allowed_query_index >= 0) {\r\n                this._requestQueue.splice(0, 0, this._requestQueue.splice(allowed_query_index, 1)[0]);\r\n                this.sendRequestToWorker(this._requestQueue[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private sendRequestToWorker(firsrtRequest: IWebWorkerRequest) {\r\n        this._isCodeExecuting = true;\r\n        var request = {\r\n            name: firsrtRequest.name,\r\n            query: firsrtRequest.query\r\n        } as IWebWorkerRequest;\r\n        LogHelper.log(\"request executing : \" + firsrtRequest.name);\r\n        this._worker.postMessage(request);\r\n    }\r\n}","import { IError } from \"./interfaces\";\r\nimport { Error_Type } from \"./enums\";\r\nimport { Config } from \"./config\";\r\n\r\nexport class LogHelper implements IError {\r\n    type: Error_Type;\r\n    message: string;\r\n    private _info: any;\r\n\r\n    constructor(type: Error_Type, info: any = null) {\r\n        this.type = type;\r\n        this._info = info;\r\n        this.message = this.getMsg();\r\n    }\r\n\r\n    public throw() {\r\n        throw this.get();\r\n    }\r\n\r\n    static log(msg) {\r\n        if (Config._isLogEnabled) {\r\n            console.log(msg);\r\n        }\r\n    }\r\n\r\n    logError() {\r\n        console.error(this.get());\r\n    }\r\n\r\n    logWarning() {\r\n        console.warn(this.get());\r\n    }\r\n\r\n    public get() {\r\n        return {\r\n            message: this.message,\r\n            type: this.type\r\n        } as IError;\r\n    }\r\n\r\n    private getMsg() {\r\n        var err_msg: string;\r\n        switch (this.type) {\r\n            case Error_Type.WorkerNotSupplied:\r\n                err_msg = \"Worker object is not passed in instance constructor\";\r\n                break;\r\n            case Error_Type.IndexedDbUndefined:\r\n                err_msg = \"Browser does not support indexeddb\";\r\n                break;\r\n            default:\r\n                err_msg = this.message;\r\n                break;\r\n        }\r\n        return err_msg;\r\n    }\r\n}"],"sourceRoot":""}