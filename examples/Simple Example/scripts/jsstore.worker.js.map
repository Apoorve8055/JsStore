{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./web_worker/business/base.ts","webpack:///./web_worker/business/base_helper.ts","webpack:///./web_worker/business/bulk_insert.ts","webpack:///./web_worker/business/clear.ts","webpack:///./web_worker/business/count/base_count.ts","webpack:///./web_worker/business/count/in_logic.ts","webpack:///./web_worker/business/count/index.ts","webpack:///./web_worker/business/count/instance.ts","webpack:///./web_worker/business/count/like_logic.ts","webpack:///./web_worker/business/count/not_where.ts","webpack:///./web_worker/business/count/where.ts","webpack:///./web_worker/business/create_db.ts","webpack:///./web_worker/business/drop_db.ts","webpack:///./web_worker/business/idb_helper.ts","webpack:///./web_worker/business/insert/index.ts","webpack:///./web_worker/business/insert/instance.ts","webpack:///./web_worker/business/insert/value_checker.ts","webpack:///./web_worker/business/insert/values_checker.ts","webpack:///./web_worker/business/open_db.ts","webpack:///./web_worker/business/remove/base_remove.ts","webpack:///./web_worker/business/remove/in.ts","webpack:///./web_worker/business/remove/index.ts","webpack:///./web_worker/business/remove/instance.ts","webpack:///./web_worker/business/remove/like.ts","webpack:///./web_worker/business/remove/not_where.ts","webpack:///./web_worker/business/remove/where.ts","webpack:///./web_worker/business/select/base_select.ts","webpack:///./web_worker/business/select/group_by_helper.ts","webpack:///./web_worker/business/select/helper.ts","webpack:///./web_worker/business/select/in.ts","webpack:///./web_worker/business/select/index.ts","webpack:///./web_worker/business/select/instance.ts","webpack:///./web_worker/business/select/join.ts","webpack:///./web_worker/business/select/like.ts","webpack:///./web_worker/business/select/not_where.ts","webpack:///./web_worker/business/select/where.ts","webpack:///./web_worker/business/update/base_update.ts","webpack:///./web_worker/business/update/in.ts","webpack:///./web_worker/business/update/index.ts","webpack:///./web_worker/business/update/instance.ts","webpack:///./web_worker/business/update/like.ts","webpack:///./web_worker/business/update/not_where.ts","webpack:///./web_worker/business/update/schema_checker.ts","webpack:///./web_worker/business/update/where.ts","webpack:///./web_worker/business/where_checker.ts","webpack:///./web_worker/config.ts","webpack:///./web_worker/enums.ts","webpack:///./web_worker/index.ts","webpack:///./web_worker/keystore/business/base_logic.ts","webpack:///./web_worker/keystore/business/get_logic.ts","webpack:///./web_worker/keystore/business/idb_helper.ts","webpack:///./web_worker/keystore/business/init_db_logic.ts","webpack:///./web_worker/keystore/business/main_logic.ts","webpack:///./web_worker/keystore/business/remove_logic.ts","webpack:///./web_worker/keystore/business/set_logic.ts","webpack:///./web_worker/keystore/enums.ts","webpack:///./web_worker/keystore/index.ts","webpack:///./web_worker/keystore/instance.ts","webpack:///./web_worker/keystore/query_executor.ts","webpack:///./web_worker/keystore/utils_logic.ts","webpack:///./web_worker/log_helper.ts","webpack:///./web_worker/model/column.ts","webpack:///./web_worker/model/database.ts","webpack:///./web_worker/model/db_helper.ts","webpack:///./web_worker/model/table.ts","webpack:///./web_worker/model/table_helper.ts","webpack:///./web_worker/query_executor.ts","webpack:///./web_worker/start.ts","webpack:///./web_worker/util.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnE2C;AAEI;AAEL;AACuB;AAElC;AAE/B;IAA0B,wBAAU;IAApC;QAAA,qEAiNC;QA/MG,mBAAa,GAAY,KAAK,CAAC;QAC/B,iBAAW,GAAG,CAAC,CAAC;QAChB,kBAAY,GAAG,CAAC,CAAC;QAkGP,oBAAc,GAAG;YACvB,IAAI,WAAW,GAAG,0CAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACvE,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACrD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBAC3C,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,UAAU,GAAG,OAAO,CACrB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC;wBAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAC5C,CAAC;oBACF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,2DAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC7D,CAAC;oBACD,IAAI,GAAG,GAAG,0CAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;oBACxC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACV,KAAK,MAAM;4BAAE,CAAC;gCACV,IAAI,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EACrC,YAAoB,EACpB,SAAoB,CAAC;gCACzB,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACnB,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;oCAChC,SAAS,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,gDAAS,CAAC,GAAG,CAAC,CAAC,CAAC,gDAAS,CAAC,IAAI,CAAC;gCAC1E,CAAC;gCACD,IAAI,CAAC,CAAC;oCACF,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;oCAChC,SAAS,GAAG,gDAAS,CAAC,KAAK,CAAC;gCAChC,CAAC;gCACD,EAAE,CAAC,CAAC,SAAS,KAAK,gDAAS,CAAC,KAAK,CAAC,CAAC,CAAC;oCAChC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI;wCAC7D,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAC9B,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,QAAQ,EAAE,EAAE,EAC7C,GAAG,CAAC,CAAC;oCACb,CAAC,EAAE,IAAI,CAAC,CAAC;oCACT,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC;gCAClD,CAAC;gCACD,IAAI,CAAC,CAAC;oCACF,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;gCAChE,CAAC;4BACL,CAAC;4BAAC,KAAK,CAAC;wBACR,KAAK,IAAI;4BACL,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;4BAC9C,KAAK,CAAC;wBACV,KAAK,GAAG,CAAC;wBACT,KAAK,GAAG,CAAC;wBACT,KAAK,GAAG,CAAC;wBACT,KAAK,IAAI,CAAC;wBACV,KAAK,IAAI;4BACL,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;4BAChD,KAAK,CAAC;wBACV,KAAK,WAAW,EAAE,KAAK,CAAC;wBACxB,SAAS,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;oBACxD,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACrE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,2DAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC7D,CAAC;oBACD,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBAC/C,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,MAAM,GAAW,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAChD,KAAK,CAAC;gBACV,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;oBACjB,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,cAAc,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;gBACxF,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,eAAe,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;gBACzF,CAAC;gBACD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACrC,CAAC;QACL,CAAC,CAAC;;IAgCN,CAAC;IAnMa,6BAAc,GAAxB,UAAyB,CAAC,EAAE,WAAmB;QAAnB,iDAAmB;QAC3C,EAAE,IAAI,CAAC,WAAW,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;gBACxB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;oBACf,IAAI,KAAK,GAAG,IAAI,qDAAS,CAAE,CAAS,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACxD,KAAK,CAAC,QAAQ,GAAI,CAAS,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;oBACjD,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACzB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACjB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAES,iCAAkB,GAA5B,UAA6B,EAAgB,EAAE,IAAI;QAC/C,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,KAAK,eAAe;gBAChB,IAAI,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;gBAC1D,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;gBACvC,KAAK,CAAC;YACV,SAAS,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC;IAES,4BAAa,GAAvB,UAAwB,UAAU;QAC9B,IAAI,WAAmB,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAC,MAAM;YACjD,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC9B,WAAW,GAAG,MAAM,CAAC;gBACrB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAES,qCAAsB,GAAhC;QACI,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAC/B,KAAK,CAAC;QACV,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1B,UAAU,CAAC,OAAO,CAAC,UAAC,IAAI;oBACpB,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;oBAC1B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACd,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;wBACrC,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;4BAClC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BACvB,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;wBACjC,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;4BAC7C,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;wBACjC,CAAC;wBACD,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;wBAC3C,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;oBACnC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC;YACpC,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,SAAS,GAAG,EAAE,CAAC;gBACnB,UAAU,CAAC,OAAO,CAAC,UAAC,IAAI;oBACpB,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;oBAC1B,IAAI,OAAO,GAAG,EAAE,CAAC;oBACjB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACd,OAAO,CAAC,IAAI,CAAC,GAAG;4BACZ,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC;4BAChB,IAAI,EAAE,EAEL;yBACJ,CAAC;wBACF,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;wBAC/B,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;oBACjD,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;oBAC1B,CAAC;oBACD,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;YAClC,CAAC;QACL,CAAC;IACL,CAAC;IA+ES,qCAAsB,GAAhC,UAAiC,GAAG;QAChC,IAAI,OAAO,GAAG,EAAE,EACZ,YAAY,EACZ,SAAS,CAAC;QACd,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;YACrB,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACnC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;oBAC3B,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;oBAC9B,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACV,KAAK,qDAAc,CAAC,EAAE;4BAClB,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;4BACxE,KAAK,CAAC;wBACV,KAAK,qDAAc,CAAC,IAAI;4BACpB,KAAK,CAAC;wBACV;4BACI,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC1E,CAAC;gBACL,CAAC;gBACD,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;YAChC,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrE,GAAG,CAAC,MAAM,CAAC,GAAG;oBACV,EAAE,EAAE,OAAO;iBACd,CAAC;YACN,CAAC;QACL,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL,WAAC;AAAD,CAAC,CAjNyB,uDAAU,GAiNnC;;;;;;;;;;;;;;;;;;AC1NoC;AACI;AAGzC;IAAA;QAcc,sBAAiB,GAAG,UAAU,KAAK;YACzC,IAAI,KAAK,GAAG,KAAK,CAAC;YAClB,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YAC5B,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACvB,KAAK,gDAAS,CAAC,GAAG;oBAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC1D,KAAK,GAAG,IAAI,CAAC;oBACjB,CAAC;oBAAC,KAAK,CAAC;gBACR,KAAK,gDAAS,CAAC,KAAK;oBAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC7D,KAAK,GAAG,IAAI,CAAC;oBACjB,CAAC;oBAAC,KAAK,CAAC;gBACR,KAAK,gDAAS,CAAC,IAAI;oBACf,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBAC9E,KAAK,GAAG,IAAI,CAAC;oBACjB,CAAC;oBAAC,KAAK,CAAC;gBACZ,SAAS,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACrC,KAAK,GAAG,IAAI,CAAC;gBACjB,CAAC;YACL,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC,CAAC;IA2GN,CAAC;IA3Ia,gCAAW,GAArB,UAAsB,QAAgB;QAClC,IAAI,MAAM,GAAG,KAAK,EACd,KAAK,CAAC;QACV,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YAC5B,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACd,MAAM,GAAG,IAAI,CAAC;YAClB,CAAC;YACD,MAAM,CAAC,CAAC,MAAM,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAuBS,iCAAY,GAAtB,UAAuB,SAAiB;QACpC,IAAI,QAAQ,GAAY,KAAK,CAAC;QAC9B,qDAAS,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,UAAC,KAAK;YACpC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,QAAQ,GAAG,IAAI,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAES,6BAAQ,GAAlB,UAAmB,SAAiB;QAChC,IAAI,aAAoB,CAAC;QACzB,qDAAS,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,UAAC,KAAK;YACpC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC5B,aAAa,GAAG,KAAK,CAAC;gBACtB,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,aAAa,CAAC;IACzB,CAAC;IAES,gCAAW,GAArB,UAAsB,KAAK,EAAE,EAAE;QAC3B,IAAI,SAAsB,CAAC;QAC3B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACT,KAAK,GAAG;gBAAE,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC;YACpF,KAAK,GAAG;gBAAE,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAAC,KAAK,CAAC;YACjE,KAAK,IAAI;gBAAE,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC;YAC5D,KAAK,GAAG;gBAAE,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAAC,KAAK,CAAC;YACjE,KAAK,IAAI;gBAAE,SAAS,GAAG,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC;YAC5D;gBAAS,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAAC,KAAK,CAAC;QACxD,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAES,kCAAa,GAAvB,UAAwB,SAAS;QAC7B,IAAI,WAAW,GAAY,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAW,CAAC,WAAW,CAAC;QAC1E,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;IAES,+BAAU,GAApB,UAAqB,SAAS;QAC1B,IAAI,WAAW,GAAmB,qDAAS,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,EAC1F,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACtD,MAAM,CAAC,YAAY,CAAC,OAAiB,CAAC;IAC1C,CAAC;IAES,oCAAe,GAAzB,UAA0B,MAAM;QAC5B,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACb,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAES,qCAAgB,GAA1B,UAA2B,MAAM;QAC7B,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACb,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAES,sCAAiB,GAA3B,UAA4B,MAAM;QAC9B,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACb,MAAM,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAES,uCAAkB,GAA5B,UAA6B,MAAM;QAC/B,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACb,MAAM,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAES,4CAAuB,GAAjC,UAAkC,IAAY,EAAE,OAAiB;QAC7D,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpD,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,CAAC;YACD,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;IACL,CAAC;IAEO,mCAAc,GAAtB,UAAuB,IAAY;QAC/B,IAAI,OAAO,GAAG,EAAE,EACZ,oBAAoB,GAAG,UAAC,OAAe,EAAE,KAAK,EAAE,KAAa;YACzD,EAAE,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC/B,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC;gBAChC,oBAAoB,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;gBAChD,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC;gBAChC,oBAAoB,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;YACpD,CAAC;QACL,CAAC,CAAC;QACN,oBAAoB,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChJ6B;AAEQ;AACI;AACD;AAEzC;IAAgC,8BAAI;IAGhC,oBAAY,KAAc,EAAE,SAAqB,EAAE,OAA8B;QAAjF,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;IAC5B,CAAC;IAED,4BAAO,GAAP;QACI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,CACf,IAAI,qDAAS,CAAC,iDAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EACxC,IAAI,CACP,CAAC;QACN,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC;gBACD,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC;YACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;YACjE,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;YACrF,KAAK,CAAC,KAAK,EAAE,CAAC;QAClB,CAAC;IACL,CAAC;IAEO,mCAAc,GAAtB;QAAA,iBAQC;QAPG,qDAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC5C,KAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,KAAK;YACtC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IACL,iBAAC;AAAD,CAAC,CAxC+B,0CAAI,GAwCnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9C6B;AAEW;AAEK;AAE9C;IAA2B,yBAAI;IAC3B,eAAY,SAAiB,EAAE,SAAqB,EAAE,OAA8B;QAApF,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;IAC5B,CAAC;IAED,uBAAO,GAAP;QAAA,iBAoBC;QAnBG,qDAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACvC,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC/B,KAAI,CAAC,UAAU,EAAE,CAAC;YACtB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,GAAe,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;QACxF,aAAa,CAAC,SAAS,GAAG,UAAC,CAAC;YACxB,IAAI,aAAa,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC/C,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,MAAc;gBAC1C,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;oBACxB,mDAAY,CAAC,aAAW,qDAAS,CAAC,SAAS,CAAC,KAAK,SAAI,KAAI,CAAC,MAAM,SAAI,MAAM,CAAC,KAAK,WAAQ,EAAE,CAAC,CAAC,CAAC;gBACjG,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;YACtB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC;IACN,CAAC;IACL,YAAC;AAAD,CAAC,CA7B0B,0CAAI,GA6B9B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnC8B;AAE/B;IAA+B,6BAAI;IAAnC;QAAA,qEAKC;QAJG,kBAAY,GAAW,CAAC,CAAC;QAGzB,gBAAU,GAAG,KAAK,CAAC;;IACvB,CAAC;IAAD,gBAAC;AAAD,CAAC,CAL8B,0CAAI,GAKlC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPsC;AAEvC;IAAwB,sBAAQ;IAAhC;;IAgEA,CAAC;IA/DW,2BAAc,GAAtB,UAAuB,MAAM,EAAE,MAAM;QACjC,IAAI,MAA0B,EAC1B,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,EAC9C,cAAc,EACd,aAAa,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCACzC,EAAE,IAAI,CAAC,YAAY,CAAC;4BACxB,CAAC;4BACD,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;wBACtB,cAAc,GAAG,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;4BAClC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;4BACrC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;gCACnB,IAAI,CAAC,eAAe,EAAE,CAAC;4BAC3B,CAAC;wBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;oBAC3C,CAAC;gBACL,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;wBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;4BAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;4BACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gCACT,EAAE,IAAI,CAAC,YAAY,CAAC;gCACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;4BACtB,CAAC;4BACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;gCACxB,IAAI,CAAC,eAAe,EAAE,CAAC;4BAC3B,CAAC;wBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;oBAC3C,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IACL,SAAC;AAAD,CAAC,CAhEuB,mDAAQ,GAgE/B;;;;;;;;;;;;;;;;;;AClE0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAK;AAEU;AACG;AACJ;AACC;AAE1C;IAA8B,4BAAK;IAE/B,kBAAY,KAAa,EAAE,SAAuC,EAAE,OAAgC;QAApG,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;IACxB,CAAC;IAED,0BAAO,GAAP;QAAA,iBAkCC;QAjCG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC;gBACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC3D,IAAI,aAAa,GAAG,IAAI,sDAAe,CAAC,IAAI,CAAC,MAAa,EACtD,UAAC,OAAO;4BACJ,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;4BACnC,KAAI,CAAC,sBAAsB,EAAE,CAAC;wBAClC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACtB,aAAa,CAAC,OAAO,EAAE,CAAC;oBAC5B,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,eAAe,EAAE,CAAC;wBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC1B,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBACtC,CAAC;YACL,CAAC;YACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;YACjE,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CACf,IAAI,qDAAS,CAAC,iDAAU,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,EAC9E,IAAI,CACP,CAAC;QACN,CAAC;IACL,CAAC;IAEO,kCAAe,GAAvB;QACI,qDAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;QACpG,IAAI,CAAC,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7E,CAAC;IAEO,kCAAe,GAAvB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;IACL,CAAC;IAEO,yCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IACL,eAAC;AAAD,CAAC,CA7D6B,4CAAK,GA6DlC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpE+B;AAGhC;IAA0B,wBAAE;IAA5B;;IA6CA,CAAC;IAxCa,+BAAgB,GAA1B,UAA2B,MAAM,EAAE,KAAK,EAAE,MAAiB;QACvD,IAAI,MAA0B,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAI,KAAgB,CAAC,WAAW,EAAE,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;QAClE,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;wBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IACL,WAAC;AAAD,CAAC,CA7CyB,4CAAE,GA6C3B;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDwC;AAEzC;IAA8B,4BAAS;IAAvC;;IAgCA,CAAC;IA/Ba,6CAA0B,GAApC;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC9C,aAAa,CAAC,SAAS,GAAG;gBACtB,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC;gBACzC,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACb,aAAa,CAAC,OAAO,GAAG,UAAU,CAAC;gBAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,MAAM,EACN,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;YACpD,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,IAAI,CAAC,YAAY,CAAC;oBACnB,MAAc,CAAC,QAAQ,EAAE,CAAC;gBAC/B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACb,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;gBAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IACL,eAAC;AAAD,CAAC,CAhC6B,qDAAS,GAgCtC;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCmC;AAEpC;IAA2B,yBAAI;IAA/B;;IA+CA,CAAC;IA9CW,iCAAiB,GAAzB,UAA0B,MAAM,EAAE,KAAK,EAAE,EAAE;QACvC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/B,IAAI,cAAc,EACd,MAA0B,CAAC;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;YACzF,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1B,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;gBACpF,cAAc,CAAC,SAAS,GAAG;oBACvB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,MAAM,CAAC;oBAC1C,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;gBACzF,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;oBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACT,EAAE,IAAI,CAAC,YAAY,CAAC;wBACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,eAAe,EAAE,CAAC;oBAC3B,CAAC;gBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC;QACL,CAAC;QACD,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IACL,YAAC;AAAD,CAAC,CA/C0B,gDAAI,GA+C9B;;;;;;;;;;;;;;;;;;;AC/CwC;AACgB;AAEX;AAE9C;IAEI,kBAAY,cAA6B,EAAE,SAA2B,EAAE,OAA8B;QAAtG,iBAkGC;QAjGG,IAAI,CAAC,OAAO,GAAG,qDAAS,CAAC,SAAS,CAAC,KAAK,CAAC;QACzC,IAAI,kBAAkB,GAAG,EAAE,EACvB,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,qDAAS,CAAC,UAAU,CAAC,CAAC;QAEpE,UAAU,CAAC,OAAO,GAAG,UAAC,KAAK;YACvB,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBAClB,OAAO,CAAE,KAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACzC,CAAC;QACL,CAAC,CAAC;QAEF,UAAU,CAAC,SAAS,GAAG,UAAC,KAAK;YACzB,qDAAS,CAAC,SAAS,CAAC,SAAS,GAAG,wDAAiB,CAAC,SAAS,CAAC;YAC5D,qDAAS,CAAC,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;YAC3C,qDAAS,CAAC,aAAqB,CAAC,OAAO,GAAG,UAAC,CAAC;gBACzC,qDAAS,CAAC,sBAAsB,EAAE,CAAC;gBACnC,qDAAS,CAAC,cAAc,CAAC,wDAAiB,CAAC,MAAM,EAAE,iDAAU,CAAC,gBAAgB,CAAC,CAAC;YACpF,CAAC,CAAC;YAEF,qDAAS,CAAC,aAAa,CAAC,eAAe,GAAG,UAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;oBACvB,CAAC,CAAC,MAAc,CAAC,KAAK,EAAE,CAAC,CAAC,0CAA0C;oBACrE,qDAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;oBACvC,qDAAS,CAAC,cAAc,CAAC,wDAAiB,CAAC,MAAM,EAAE,iDAAU,CAAC,gBAAgB,CAAC,CAAC;gBACpF,CAAC;YACL,CAAC,CAAC;YAEF,qDAAS,CAAC,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;gBAChC,qDAAS,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,+BAA+B,GAAI,CAAC,CAAC,MAAc,CAAC,MAAM,CAAQ,CAAC;YACxG,CAAC,CAAC;YAEF,qDAAS,CAAC,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;gBAChC,qDAAS,CAAC,SAAS,GAAG;oBAClB,SAAS,EAAE,wDAAiB,CAAC,MAAM;oBACnC,SAAS,EAAE,iDAAU,CAAC,iBAAiB;iBAC1C,CAAC;YACN,CAAC,CAAC;YAEF,wBAAwB;YACxB,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;gBACpB,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAClC,CAAC;QACL,CAAC,CAAC;QAEF,UAAU,CAAC,eAAe,GAAG,UAAC,KAAK;YAC/B,IAAI,aAAa,GAAI,KAAa,CAAC,MAAM,CAAC,MAAM,CAAC;YACjD,IAAI,iBAAiB,GAAG,UAAC,IAAiB,EAAE,KAAK;gBAC7C,IAAI,CAAC;oBACD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC9B,qDAAS,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;wBAClE,IAAI,KAAK,GAAG,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE;4BACpD,OAAO,EAAE,IAAI,CAAC,WAAW;yBAC5B,CAAC,CAAC;wBACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,MAAc;4BACjC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;gCAChC,IAAI,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC;gCACjF,OAAO,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC;gCAC3C,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;gCACvD,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;oCACxB,mDAAY,CAAC,aAAW,KAAI,CAAC,OAAO,SAAI,IAAI,CAAC,KAAK,SAAI,MAAM,CAAC,KAAK,WAAQ,EAAE,CAAC,CAAC,CAAC;gCACnF,CAAC;4BACL,CAAC;wBACL,CAAC,CAAC,CAAC;oBACP,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,KAAK,GAAG,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE;4BACpD,aAAa,EAAE,IAAI;yBACtB,CAAC,CAAC;wBACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,MAAc;4BACjC,IAAI,OAAO,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,UAAU,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC;4BACzE,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;4BACvD,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;gCACxB,mDAAY,CAAC,aAAW,KAAI,CAAC,OAAO,SAAI,IAAI,CAAC,KAAK,SAAI,MAAM,CAAC,KAAK,WAAQ,EAAE,CAAC,CAAC,CAAC;4BACnF,CAAC;wBACL,CAAC,CAAC,CAAC;oBACP,CAAC;oBACD,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACpC,4BAA4B;oBAC5B,mDAAY,CAAC,aAAW,KAAI,CAAC,OAAO,SAAI,IAAI,CAAC,KAAK,aAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACjF,CAAC;gBACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACP,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACrB,CAAC;YACL,CAAC,CAAC;YACF,cAAc,CAAC,OAAO,CAAC,UAAC,IAAiB,EAAE,KAAK;gBAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACtB,gCAAgC;oBAChC,EAAE,CAAC,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtD,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAChD,CAAC;oBACD,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACnC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAC7B,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACnC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;IACN,CAAC;IAEO,6BAAU,GAAlB;QAAA,iBAOC;QANG,qDAAS,CAAC,SAAS,CAAC,UAAC,MAAM;YACvB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBAC1B,qDAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACpH6C;AACL;AAGgB;AACf;AAE1C;IAII,gBAAY,SAAqB,EAAE,OAA8B;QAC7D,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,qDAAS,CAAC,SAAS,CAAC,KAAK,CAAC;IAC7C,CAAC;IAED,+BAAc,GAAd;QAAA,iBAgBC;QAfG,sDAAe,CAAC,aAAW,IAAI,CAAC,OAAO,gBAAa,CAAC,CAAC;QACtD,qDAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAY;YAC7C,sDAAe,CAAC,aAAW,KAAI,CAAC,OAAO,SAAI,KAAK,CAAC,KAAK,aAAU,CAAC,CAAC;YAClE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,MAAc;gBAC3C,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;oBACxB,sDAAe,CAAC,aAAW,IAAI,CAAC,OAAO,SAAI,KAAK,CAAC,KAAK,SAAI,MAAM,CAAC,KAAK,WAAQ,CAAC,CAAC;gBACpF,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,6BAA6B;QAC7B,qDAAS,CAAC,SAAS,CAAC,UAAC,MAAM;YACvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/C,qDAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,sDAAe,CAAC,aAAW,IAAI,CAAC,OAAO,YAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACvE,CAAC;IAED,yBAAQ,GAAR;QAAA,iBAkBC;QAjBG,UAAU,CAAC;YACP,IAAI,eAAe,GAAG,SAAS,CAAC,cAAc,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC7D,eAAe,CAAC,SAAS,GAAG;gBACxB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,QAAQ,CAAC,IAAI,qDAAS,CAAC,iDAAU,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC7D,CAAC;YACL,CAAC,CAAC;YACF,eAAe,CAAC,OAAO,GAAG,UAAC,CAAC;gBACxB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,QAAQ,CAAE,KAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC/C,CAAC;YACL,CAAC,CAAC;YACF,eAAe,CAAC,SAAS,GAAG;gBACxB,qDAAS,CAAC,SAAS,CAAC,SAAS,GAAG,wDAAiB,CAAC,MAAM,CAAC;gBACzD,KAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC,CAAC;QACN,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACvDwD;AACX;AAED;AACV;AAEnC;IAAA;IAoFA,CAAC;IAvEU,gCAAsB,GAA7B,UAA8B,cAAwB;QAClD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,KAAK,wDAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,EAAE,CAAC,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,IAAI,cAAc,GAAG,IAAI,+CAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;gBAClE,cAAc,CAAC,cAAc,EAAE,CAAC;YACpC,CAAC;QACL,CAAC;IACL,CAAC;IAEM,2BAAiB,GAAxB,UAAyB,UAAU,EAAE,QAAoB,EAAE,IAAK;QAAhE,iBAaC;QAZG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;YAC7B,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG;gBAC3B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,QAAQ,EAAE,CAAC;YACf,CAAC,CAAC;YACD,IAAI,CAAC,YAAoB,CAAC,SAAS,GAAG;gBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC3C,CAAC,CAAC;QACN,CAAC;IACL,CAAC;IAEM,mBAAS,GAAhB,UAAiB,IAAc;QAC3B,mDAAY,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAEM,wBAAc,GAArB,UAAsB,MAAyB,EAAE,GAAgB;QAC7D,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC;QACtC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,SAAS,GAAG;gBACb,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,GAAG;aACjB,CAAC;QACN,CAAC;IACL,CAAC;IAEM,mBAAS,GAAhB,UAAiB,QAAoC;QACjD,mDAAY,CAAC,eAAe,EAAE,UAAC,MAAM;YACjC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;YACtC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sBAAY,GAAnB,UAAoB,MAAc,EAAE,QAAmC;QACnE,mDAAY,CAAC,aAAW,MAAM,gBAAa,EAAE,UAAU,SAAS;YAC5D,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC;IAEM,qBAAW,GAAlB,UAAmB,MAAc,EAAE,QAAuB;QACtD,mDAAY,CAAC,aAAW,MAAM,YAAS,EAAE,UAAC,MAAM;YAC5C,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACf,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACrB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,SAAS,GAAG,IAAI,wDAAQ,CAAC,MAAM,CAAC,CAAC;oBACrC,mDAAY,CAAC,aAAW,MAAM,YAAS,EAAE,SAAS,CAAC,CAAC;oBACpD,QAAQ,CAAC,SAAS,CAAC,CAAC;gBACxB,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,QAAQ,CAAC,MAAM,CAAC,CAAC;YACrB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAhFM,sBAAY,GAAmB,IAAI,CAAC;IAIpC,oBAAU,GAAW,CAAC,CAAC;IACvB,mBAAS,GAAc;QAC1B,SAAS,EAAE,wDAAiB,CAAC,UAAU;QACvC,SAAS,EAAE,IAAI;KAClB,CAAC;IAyEN,gBAAC;CAAA;AApFqB;;;;;;;;;;;;;;;;;ACNK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAI;AAGU;AACI;AACI;AACP;AAE1C;IAA8B,4BAAI;IAK9B,kBAAY,KAAc,EAAE,SAAyC,EAAE,OAA8B;QAArG,YACI,iBAAO,SAKV;QAVD,qBAAe,GAAG,EAAE,CAAC;QAMjB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;;IACvC,CAAC;IAED,0BAAO,GAAP;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc,CACf,IAAI,qDAAS,CAAC,iDAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EACxC,IAAI,CACP,CAAC;QACN,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,IAAI,CAAC;gBACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACxC,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,iBAAiB,GAAG,IAAI,6DAAa,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBACrE,iBAAiB,CAAC,oBAAoB,CAAC,UAAU,OAAO;wBACpD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACV,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBACxD,CAAC;wBACD,IAAI,CAAC,CAAC;4BACF,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;wBAC/C,CAAC;wBACD,iBAAiB,GAAG,SAAS,CAAC;oBAClC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClB,CAAC;gBACD,2BAA2B;gBAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC;YACnC,CAAC;YACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAChE,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,qDAAS,CAAC,iDAAU,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;QACpF,CAAC;IACL,CAAC;IAEO,yCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnF,CAAC;IACL,CAAC;IAEO,kCAAe,GAAvB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;IACL,CAAC;IAEO,6BAAU,GAAlB,UAAmB,MAAM;QACrB,IAAI,WAAW,GAAG,CAAC,EACf,mBAA4C,CAAC;QACjD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACrB,mBAAmB,GAAG,UAAU,KAAK;gBACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,IAAI,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACzC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpD,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC;wBAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACjC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBAC1D,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC;QACN,CAAC;QACD,IAAI,CAAC,CAAC;YACF,mBAAmB,GAAG,UAAU,KAAK;gBACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,IAAI,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACzC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACpD,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC;wBAC9B,EAAE,IAAI,CAAC,YAAY,CAAC;wBACpB,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBAC1D,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC;QACN,CAAC;QACD,qDAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxF,IAAI,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxE,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IACL,eAAC;AAAD,CAAC,CAnG6B,0CAAI,GAmGjC;;;;;;;;;;;;;;;;;;;ACxGiC;AACO;AACI;AAE7C;IAOI,sBAAY,KAAY,EAAE,kBAAkB;QAJ5C,kBAAa,GAAY,KAAK,CAAC;QAE/B,wBAAmB,GAAG,EAAE,CAAC;QAGrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;IAClD,CAAC;IAEM,0CAAmB,GAA1B,UAA2B,KAAK;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,MAAM;YACvC,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC9C,MAAM,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;QAC/B,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEO,8CAAuB,GAA/B,UAAgC,MAAc;QAC1C,wBAAwB;QACxB,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,0CAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,iBAAiB,CAAC,iDAAU,CAAC,SAAS,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/E,CAAC;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,0CAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAChE,0CAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,iBAAiB,CAAC,iDAAU,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QACjF,CAAC;IACL,CAAC;IAEO,gDAAyB,GAAjC,UAAkC,MAAc;QAC5C,8BAA8B;QAC9B,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzE,CAAC;QAED,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,0CAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChD,CAAC;QACD,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAEO,wCAAiB,GAAzB,UAA0B,KAAiB,EAAE,OAAY;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,qDAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IACtD,CAAC;IACL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACtD8C;AACP;AACS;AAEjD;IAOI,uBAAY,KAAY,EAAE,MAAa;QACnC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAEM,4CAAoB,GAA3B,UAA4B,QAAoC;QAAhE,iBAoBC;QAnBG,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAC,GAAG;YACnD,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,gBAAgB,CAAC,OAAO,CAAC,UAAC,MAAM;YAC5B,IAAI,kBAAkB,GAAG,aAAW,gDAAS,CAAC,SAAS,CAAC,KAAK,SAAI,KAAI,CAAC,MAAM,CAAC,KAAK,SAAI,MAAM,CAAC,KAAK,WAAQ,CAAC;YAC3G,mDAAY,CAAC,kBAAkB,EAAE,UAAC,GAAG;gBACjC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;YACxC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,mDAAY,CAAC,UAAU,EAAE,UAAC,GAAG;YACzB,KAAI,CAAC,gBAAgB,GAAG,IAAI,2DAAY,CAAC,KAAI,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;YACvE,KAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,EAAE,UAAC,GAAG;YACH,KAAI,CAAC,MAAM,GAAG,GAAU,CAAC;YACzB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IAEP,CAAC;IAEO,qCAAa,GAArB;QAAA,iBAuBC;QAtBG,IAAI,QAAQ,GAAY,KAAK,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI;YAC7B,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC3D,MAAM,CAAC,CAAC,QAAQ,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACzD,IAAI,kBAAkB,GAAG,aAAW,gDAAS,CAAC,SAAS,CAAC,KAAK,SAAI,IAAI,CAAC,MAAM,CAAC,KAAK,SAAI,IAAI,WAAQ,CAAC;gBACnG,mDAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;YACtF,CAAC;YACD,mDAAY,CAAC,UAAU,EAAE,UAAC,GAAG;gBACzB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,EACG,UAAC,GAAG;gBACA,KAAI,CAAC,MAAM,GAAG,GAAU,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;QACX,CAAC;IACL,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;AChEwC;AAEgB;AACf;AAG1C;IAKI,gBAAY,SAAqB,EAAE,OAA8B;QAC7D,IAAI,CAAC,OAAO,GAAG,qDAAS,CAAC,SAAS,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC5B,CAAC;IAED,wBAAO,GAAP;QAAA,iBA8CC;QA7CG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,qDAAS,CAAC,UAAU,CAAC,CAAC;YAEpE,UAAU,CAAC,OAAO,GAAG,UAAC,KAAK;gBACvB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,QAAQ,CAAE,KAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC/C,CAAC;YACL,CAAC,CAAC;YAEF,UAAU,CAAC,SAAS,GAAG,UAAC,KAAK;gBACzB,qDAAS,CAAC,SAAS,CAAC,SAAS,GAAG,wDAAiB,CAAC,SAAS,CAAC;gBAC5D,qDAAS,CAAC,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;gBAC3C,qDAAS,CAAC,aAAqB,CAAC,OAAO,GAAG,UAAC,CAAC;oBACzC,qDAAS,CAAC,sBAAsB,EAAE,CAAC;oBACnC,qDAAS,CAAC,cAAc,CAAC,wDAAiB,CAAC,MAAM,EAAE,iDAAU,CAAC,gBAAgB,CAAC,CAAC;gBACpF,CAAC,CAAC;gBAEF,qDAAS,CAAC,aAAa,CAAC,eAAe,GAAG,UAAC,CAAC;oBACxC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;wBACxB,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;4BACvB,CAAC,CAAC,MAAc,CAAC,KAAK,EAAE,CAAC,CAAC,0CAA0C;4BACrE,qDAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;4BACvC,qDAAS,CAAC,cAAc,CAAC,wDAAiB,CAAC,MAAM,EAAE,iDAAU,CAAC,gBAAgB,CAAC,CAAC;wBACpF,CAAC;oBACL,CAAC;gBACL,CAAC,CAAC;gBAEF,qDAAS,CAAC,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;oBAChC,qDAAS,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,+BAA+B,GAAI,CAAC,CAAC,MAAc,CAAC,MAAM,CAAQ,CAAC;gBACxG,CAAC,CAAC;gBAEF,qDAAS,CAAC,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;oBAChC,qDAAS,CAAC,SAAS,CAAC,SAAS,GAAG,wDAAiB,CAAC,MAAM,CAAC;oBACzD,qDAAS,CAAC,SAAS,CAAC,SAAS,GAAG,iDAAU,CAAC,iBAAiB,CAAC;gBACjE,CAAC,CAAC;gBACF,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,UAAU,EAAE,CAAC;gBACtB,CAAC;gBACD,KAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC,CAAC;QACN,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,eAAe,CAAC,CAAC;YACtD,KAAK,CAAC,KAAK,EAAE,CAAC;QAClB,CAAC;IACL,CAAC;IAEO,8BAAa,GAArB;QACI,qDAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAY,EAAE,KAAK;YACpD,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAI;gBACrB,qDAAS,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;gBACpF,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzE8B;AAE/B;IAAgC,8BAAI;IAApC;QAAA,qEAOC;QANG,gBAAU,GAAG,KAAK,CAAC;;IAMvB,CAAC;IAJa,oCAAe,GAAzB;QAEI,KAAK;IACT,CAAC;IACL,iBAAC;AAAD,CAAC,CAP+B,0CAAI,GAOnC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTsC;AAEvC;IAAwB,sBAAQ;IAAhC;;IAmDA,CAAC;IAlDW,2BAAc,GAAtB,UAAuB,MAAM,EAAE,MAAM;QACjC,IAAI,MAA0B,EAC1B,cAAc,EACd,aAAa,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;wBAC5C,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCACzC,MAAM,CAAC,MAAM,EAAE,CAAC;gCAChB,EAAE,IAAI,CAAC,YAAY,CAAC;4BACxB,CAAC;4BACD,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;wBAC5C,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM,CAAC,MAAM,EAAE,CAAC;4BAChB,EAAE,IAAI,CAAC,YAAY,CAAC;4BACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IACL,SAAC;AAAD,CAAC,CAnDuB,mDAAQ,GAmD/B;;;;;;;;;;;;;;;;;;ACrD0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAK;AAEU;AACR;AACQ;AAE1C;IAA8B,4BAAK;IAG/B,kBACI,KAAc,EAAE,SAA0C,EAC1D,OAA8B;QAFlC,YAII,iBAAO,SAIV;QAHG,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;IAC5B,CAAC;IAED,0BAAO,GAAP;QACI,IAAI,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAChC,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,YAAY,EAAE,CAAC;gBACxB,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,0BAA0B,EAAE,CAAC;YACtC,CAAC;QAEL,CAAC;QACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;QACjE,CAAC;IACL,CAAC;IAEO,uCAAoB,GAA5B;QACI,IAAI,aAAa,GAAG,IAAI,sDAAe,CAAC,IAAI,CAAC,MAAa,EACtD,UAAU,OAAO;YACb,IAAI,QAAQ,GAAG,EAAE,EACb,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACjD,OAAO,CAAC,OAAO,CAAC,UAAC,IAAI;gBACjB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;YACH,OAAO,GAAG,IAAI,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,aAAa,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IAEO,+BAAY,GAApB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,kCAAe,GAAvB;QACI,qDAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7E,CAAC;IAEO,yCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IAES,kCAAe,GAAzB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;IACL,CAAC;IAEO,iCAAc,GAAtB;QACI,IAAI,GAAG,GAAG,0CAAI,CAAC,iBAAiB,CAAE,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAChE,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,KAAK,CAAC,GAAG,CAAC,GAAI,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAChD,OAAQ,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC;IACL,CAAC;IAEO,iCAAc,GAAtB;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACjB,IAAY,CAAC,OAAO,GAAG;YACpB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;SAChC,CAAC;QAEF,iBAAiB;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;IAChC,CAAC;IACL,eAAC;AAAD,CAAC,CAvG6B,4CAAK,GAuGlC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7GyB;AAG1B;IAA0B,wBAAE;IAA5B;;IAgDA,CAAC;IA3Ca,+BAAgB,GAA1B,UAA2B,MAAM,EAAE,KAAK,EAAE,MAAiB;QACvD,IAAI,MAA0B,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAI,KAAgB,CAAC,WAAW,EAAE,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;QAClE,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEb,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;wBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,MAAM,CAAC,MAAM,EAAE,CAAC;wBAChB,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,MAAM,CAAC,MAAM,EAAE,CAAC;wBAChB,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IACL,WAAC;AAAD,CAAC,CAhDyB,sCAAE,GAgD3B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnD0C;AAE3C;IAA8B,4BAAU;IAAxC;;IAoBA,CAAC;IAnBa,6CAA0B,GAApC;QAAA,iBAkBC;QAjBG,IAAI,MAAM,EACN,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QACpD,cAAc,CAAC,SAAS,GAAG,UAAC,CAAC;YACzB,MAAM,GAAI,CAAS,CAAC,MAAM,CAAC,MAAM,CAAC;YAClC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,MAAM,EAAE,CAAC;gBAChB,EAAE,KAAI,CAAC,YAAY,CAAC;gBACnB,MAAc,CAAC,QAAQ,EAAE,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC;QACF,cAAc,CAAC,OAAO,GAAG,UAAC,CAAC;YACvB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC;IACN,CAAC;IACL,eAAC;AAAD,CAAC,CApB6B,uDAAU,GAoBvC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtB6B;AAE9B;IAA2B,yBAAI;IAA/B;;IAwCA,CAAC;IAvCW,iCAAiB,GAAzB,UAA0B,MAAM,EAAE,KAAK,EAAE,EAAE;QACvC,IAAI,MAA0B,EAC1B,cAAc,CAAC;QACnB,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/B,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;QACzF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,MAAM,CAAC,MAAM,EAAE,CAAC;wBAChB,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChB,EAAE,IAAI,CAAC,YAAY,CAAC;oBACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QAED,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IACL,YAAC;AAAD,CAAC,CAxC0B,0CAAI,GAwC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1C8B;AAE/B;IAAgC,8BAAI;IAApC;QAAA,qEA+BC;QA9BG,cAAQ,GAAG,EAAE,CAAC;QACd,aAAO,GAAY,KAAK,CAAC;QAGzB,gBAAU,GAAG,KAAK,CAAC;;IA0BvB,CAAC;IArBa,qCAAgB,GAA1B;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC1B,sBAAsB;QACtB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YAClB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC;QACD,oBAAoB;QACpB,KAAK,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAES,oCAAe,GAAzB;QAEI,KAAK;IACT,CAAC;IACL,iBAAC;AAAD,CAAC,CA/B+B,0CAAI,GA+BnC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjC+B;AAEhC;IAAmC,iCAAK;IACpC;eACI,iBAAO;IACX,CAAC;IAES,sCAAc,GAAxB;QACI,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAC7B,KAAK,GAAG,IAAI,CAAC,QAAQ,EACrB,WAAW,GAAG,EAAE,CAAC;QACrB,sBAAsB;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;QAChD,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,OAAO,CAAC;YACZ,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClB,OAAO,GAAG,EAAE,CAAC;gBACb,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;oBACzB,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzC,CAAC;gBACD,WAAW,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC;QACL,CAAC;QACD,oBAAoB;QACpB,KAAK,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC;YACpB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAES,+CAAuB,GAAjC;QACI,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAC7B,KAAK,GAAG,IAAI,CAAC,QAAQ,EACrB,WAAW,GAAG,EAAE;QAChB,6CAA6C;QAC7C,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;QAClC,sBAAsB;QACtB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAE1B,IAAI,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC;QACvC,IAAI,kBAAkB,GAAG;YACrB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAa,CAAC,CAAC,CAAC;gBAC7B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACX,KAAK,OAAO;wBACR,IAAI,QAAQ,GAAG;4BACX,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;4BAC7B,gBAAgB;4BAChB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACxD,mCAAmC;4BACnC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3C,MAAM,CAAC,KAAK,CAAC;wBACjB,CAAC,CAAC;wBACF,EAAE,CAAC,CAAC,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC1C,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;4BAClC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,QAAQ,EAAE,CAAC;wBAC5D,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1C,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCACnC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;gCACxC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,QAAQ,EAAE,CAAC;4BAC5D,CAAC;wBACL,CAAC;wBACD,KAAK,CAAC;oBACV,KAAK,KAAK;wBACN,IAAI,MAAM,GAAG;4BACT,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;4BAC7B,gBAAgB;4BAChB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtD,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gCACnD,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClC,0CAA0C;4BAC1C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC;wBACjF,CAAC,CAAC;wBAEF,EAAE,CAAC,CAAC,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC1C,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;4BAClC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;wBACxD,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1C,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCACnC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;gCACxC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;4BACxD,CAAC;wBACL,CAAC;wBACD,KAAK,CAAC;oBACV,KAAK,KAAK;wBACN,IAAI,MAAM,GAAG;4BACT,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;4BAC7B,gBAAgB;4BAChB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BAC7D,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gCACnD,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BACzC,0CAA0C;4BAC1C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC;wBACjF,CAAC,CAAC;wBAEF,EAAE,CAAC,CAAC,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC1C,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;4BAClC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;wBACxD,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1C,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCACnC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;gCACxC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;4BACxD,CAAC;wBACL,CAAC;wBACD,KAAK,CAAC;oBACV,KAAK,KAAK;wBACN,IAAI,MAAM,GAAG;4BACT,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;4BAC7B,gBAAgB;4BAChB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACtD,mCAAmC;4BACnC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACnE,MAAM,CAAC,KAAK,CAAC;wBACjB,CAAC,CAAC;wBACF,EAAE,CAAC,CAAC,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC1C,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;4BAClC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;wBACxD,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1C,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCACnC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;gCACxC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;4BACxD,CAAC;wBACL,CAAC;wBACD,KAAK,CAAC;oBACV,KAAK,KAAK;wBACN,IAAI,MAAM,GAAG;4BACT,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;4BAC7B,oBAAoB;4BACpB,IAAI,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClE,mCAAmC;4BACnC,aAAa,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3E,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,aAAa,CAAC;4BACzD,sBAAsB;4BACtB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACxD,mCAAmC;4BACnC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3C,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,WAAW,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;wBACvD,CAAC,CAAC;wBAEF,EAAE,CAAC,CAAC,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC1C,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;4BAClC,MAAM,EAAE,CAAC;wBACb,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1C,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCACnC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;gCACxC,MAAM,EAAE,CAAC;4BACb,CAAC;wBACL,CAAC;wBACD,KAAK,CAAC;gBACd,CAAC;YACL,CAAC;QACL,CAAC,CAAC;QAEF,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClB,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;gBAChC,kBAAkB,EAAE,CAAC;gBACrB,WAAW,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YACxC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClB,OAAO,GAAG,EAAE,CAAC;gBACb,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;oBACzB,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC7C,CAAC;gBACD,kBAAkB,EAAE,CAAC;gBACrB,WAAW,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YACxC,CAAC;QAEL,CAAC;QACD,oBAAoB;QACpB,KAAK,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC;YACxB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;QACD,qDAAqD;QACrD,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,OAAO,aAAa,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACxC,GAAG,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;oBAClB,IAAI,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC,EAC5D,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;oBACrE,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,GAAG,aAAa,CAAC;oBAC7E,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC5C,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC5D,CAAC;oBACD,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC1C,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;oBAC1D,CAAC;gBACL,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,oBAAoB,GAAG,OAAO,aAAa,CAAC,KAAK,EACjD,kBAAkB,GAAG,OAAO,aAAa,CAAC,KAAK,CAAC;gBACpD,GAAG,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;oBAClB,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;wBACnC,IAAI,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EACtC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,UAAU,GAAG,GAAG,CAAC,EAC7C,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;wBACtD,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,UAAU,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;wBAEtD,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;4BACvB,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;gCACrC,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;4BACrD,CAAC;4BACD,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gCACtD,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;4BACrD,CAAC;wBACL,CAAC;wBAED,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;4BACrB,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC;gCACnC,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;4BACnD,CAAC;4BACD,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gCACpD,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;4BACnD,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IACL,oBAAC;AAAD,CAAC,CAzOkC,4CAAK,GAyOvC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3OiD;AAElD;IAA4B,0BAAa;IAErC;eACI,iBAAO;IACX,CAAC;IAED,+BAAc,GAAd;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC9B,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YACjE,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YAC3D,IAAI,YAAY,GAAG,KAAK,CAAC,EAAE,EACvB,eAAe,GAAG;gBACd,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;oBACpB,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,gBAAgB,GAAG;gBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBAC7B,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,iBAAiB,GAAG;gBAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBAC7B,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;gBACtF,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,kBAAkB,GAAG;gBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBAC7B,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;gBACtF,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACrD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;oBACvB,iBAAiB,EAAE,CAAC;gBACxB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,kBAAkB,EAAE,CAAC;gBACzB,CAAC;YACL,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC1D,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;oBACvB,eAAe,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,gBAAgB,EAAE,CAAC;gBACvB,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAES,oCAAmB,GAA7B;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EACrB,OAAO,GAAG,EAAE,EACZ,mBAAmB,CAAC;QACxB,sBAAsB;QACtB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,KAAK,OAAO;oBACR,IAAI,QAAQ,GAAG;wBACX,IAAI,MAAM,GAAG,CAAC,CAAC;wBACf,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;4BAClB,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpD,CAAC;wBACD,MAAM,CAAC,MAAM,CAAC;oBAClB,CAAC,CAAC;oBACF,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAClD,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAClD,OAAO,CAAC,QAAQ,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,QAAQ,EAAE,CAAC;oBAC/D,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC1C,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;4BACvD,OAAO,CAAC,QAAQ,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,QAAQ,EAAE,CAAC;wBAC/D,CAAC;oBACL,CAAC;oBACD,KAAK,CAAC;gBACV,KAAK,KAAK;oBACN,IAAI,MAAM,GAAG;wBACT,IAAI,MAAM,GAAG,CAAC,CAAC;wBACf,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;4BAClB,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;gCAC7C,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;wBAC/C,CAAC;wBACD,MAAM,CAAC,MAAM,CAAC;oBAClB,CAAC,CAAC;oBACF,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAClD,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAClD,OAAO,CAAC,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;oBAC3D,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC1C,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;4BACvD,OAAO,CAAC,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;wBAC3D,CAAC;oBACL,CAAC;oBACD,KAAK,CAAC;gBACV,KAAK,KAAK;oBACN,IAAI,MAAM,GAAG;wBACT,IAAI,MAAM,GAAG,QAAQ,EAAE,KAAK,GAAG,QAAQ,CAAC;wBACxC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;4BAClB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;gCACnC,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;4BAC7C,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;wBAC7C,CAAC;wBACD,MAAM,CAAC,MAAM,CAAC;oBAClB,CAAC,CAAC;oBACF,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAClD,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAClD,OAAO,CAAC,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;oBAC3D,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC1C,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;4BACvD,OAAO,CAAC,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;wBAC3D,CAAC;oBACL,CAAC;oBACD,KAAK,CAAC;gBACV,KAAK,KAAK;oBACN,IAAI,MAAM,GAAG;wBACT,IAAI,MAAM,GAAG,CAAC,CAAC;wBACf,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;4BAClB,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;wBAC5C,CAAC;wBACD,MAAM,CAAC,MAAM,CAAC;oBAClB,CAAC,CAAC;oBACF,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAClD,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAClD,OAAO,CAAC,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;oBAC3D,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC1C,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;4BACvD,OAAO,CAAC,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;wBAC3D,CAAC;oBACL,CAAC;oBACD,KAAK,CAAC;gBACV,KAAK,KAAK;oBACN,IAAI,MAAM,GAAG;wBACT,IAAI,MAAM,GAAG,CAAC,CAAC;wBACf,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;4BAClB,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;wBAC5C,CAAC;wBACD,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;oBACjC,CAAC,CAAC;oBACF,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAClD,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAClD,OAAO,CAAC,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;oBAC3D,CAAC;oBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC1C,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;4BACvD,OAAO,CAAC,MAAM,GAAG,mBAAmB,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,CAAC;wBAC3D,CAAC;oBACL,CAAC;oBACD,KAAK,CAAC;YACd,CAAC;QACL,CAAC;QAED,2CAA2C;QAC3C,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;YACvB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IACL,aAAC;AAAD,CAAC,CArK2B,8DAAa,GAqKxC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvKsC;AAEvC;IAAwB,sBAAQ;IAAhC;;IAiOA,CAAC;IAhOa,2BAAc,GAAxB,UAAyB,MAAM,EAAE,MAAM;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAEO,qCAAwB,GAAhC,UAAiC,MAAM,EAAE,MAAM;QAC3C,IAAI,MAA0B,EAC1B,IAAI,GAAG,IAAI,CAAC,WAAW,EACvB,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,EAC9C,cAA0B,EAC1B,UAAU,GAAG,UAAU,KAAK;YACxB,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,EAAE,IAAI,CAAC;YACX,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,aAAa,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC;4BACvD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCACzC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BAC7B,CAAC;4BACD,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC;4BACvD,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BACzB,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAEO,6BAAgB,GAAxB,UAAyB,MAAM,EAAE,MAAM;QACnC,IAAI,MAA0B,EAC1B,IAAI,GAAG,IAAI,CAAC,WAAW,EACvB,cAA0B,EAC1B,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,EAC9C,UAAU,GAAG,UAAU,KAAK;YACxB,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,EAAE,IAAI,CAAC;YACX,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,aAAa,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCACzC,UAAU,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;4BAC/B,CAAC;4BACD,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,UAAU,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;4BAC3B,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAEO,8BAAiB,GAAzB,UAA0B,MAAM,EAAE,MAAM;QACpC,IAAI,MAA0B,EAC1B,cAA0B,EAC1B,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,EAC9C,aAAa,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;4BACvD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BACrC,CAAC;4BACD,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;4BACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAEO,+BAAkB,GAA1B,UAA2B,MAAM,EAAE,MAAM;QACrC,IAAI,MAA0B,EAC1B,cAA0B,EAC1B,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,EAC9C,aAAa,GAAG,UAAU,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BACrC,CAAC;4BACD,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;4BACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IACL,SAAC;AAAD,CAAC,CAjOuB,mDAAQ,GAiO/B;;;;;;;;;;;;;;;;;;;;;ACnO0B;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAmB;AACR;AACW;AACX;AACO;AAEzC;IAA8B,4BAAM;IAEhC,kBAAY,KAAc,EAAE,SAAmC,EAAE,OAA8B;QAA/F,YACI,iBAAO,SAOV;QANG,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;QAC9B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;QAChC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;;IACjC,CAAC;IAED,0BAAO,GAAP;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC;gBACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnC,IAAI,CAAC,oBAAoB,EAAE,CAAC;oBAChC,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,YAAY,EAAE,CAAC;oBACxB,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBACtC,CAAC;YACL,CAAC;YACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;YAC5E,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CACf,IAAI,qDAAS,CAAC,iDAAU,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,EAC9E,IAAI,CACP,CAAC;QACN,CAAC;IACL,CAAC;IAEO,uCAAoB,GAA5B;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,cAAc,GAAG,IAAI,EACrB,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAC/B,MAAM,GAAG,EAAE,EAAE,SAAS,EACtB,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAC3C,WAAW,GAAG,UAAC,QAAQ;YACnB,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,KAAK,CAAC,UAAC,IAAI;gBACd,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC1B,QAAQ,GAAG,IAAI,CAAC;oBAChB,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,EACD,SAAS,GAAG;YACR,EAAE,CAAC,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC;gBACtB,IAAI,KAAK,GAAG;oBACR,IAAI,WAAW,GAAG,EAAE,CAAC;oBACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI;wBACvB,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,CAAC;oBACH,MAAM,GAAG,WAAW,CAAC;oBACrB,WAAW,GAAG,IAAI,CAAC;gBACvB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACpB,KAAK,EAAE,CAAC;gBACZ,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC/B,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC3B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,KAAK,EAAE,CAAC;gBACZ,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC7C,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC3B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC3B,CAAC;YACL,CAAC;YACD,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,eAAe,EAAE,CAAC;YACtB,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YAC3B,CAAC;YACD,cAAc,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,eAAe,GAAG;YACd,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;YACxC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9C,SAAS,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC5C,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;gBAC7C,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,SAAS,GAAG,KAAK,CAAC;oBAClB,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;gBAC7C,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,SAAS,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;YAC7C,CAAC;YACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,eAAe,EAAE,CAAC;IACtB,CAAC;IAES,kCAAe,GAAzB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;IACL,CAAC;IAEO,kCAAe,GAAvB;QACI,qDAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;QACnG,IAAI,CAAC,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5E,CAAC;IAEO,+BAAY,GAApB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,yCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACvB,IAAI,QAAQ,GAAG,EAAE,CAAC;gBAClB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC9B,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;oBACrB,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvB,CAAC;gBACD,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAClD,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBAC1C,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;YAChE,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBACxB,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBACnC,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC1B,CAAC;YACL,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IAEO,gCAAa,GAArB;QACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAI,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC;QAC9C,sBAAsB;QACrB,IAAY,CAAC,OAAO,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,iCAAc,GAAtB;QACK,IAAY,CAAC,OAAO,CAAC,OAAO,GAAI,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAI,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,GAAG,GAAG,0CAAI,CAAC,iBAAiB,CAAE,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAChE,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACd,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,KAAK,CAAC,GAAG,CAAC,GAAI,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAChD,OAAQ,IAAY,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;IACL,CAAC;IAEO,iCAAc,GAAtB;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACjB,IAAY,CAAC,OAAO,GAAG;YACpB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC7B,OAAO,EAAE,EAAE;SACd,CAAC;QACF,iBAAiB;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;IAChC,CAAC;IACL,eAAC;AAAD,CAAC,CAxN6B,8CAAM,GAwNnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/N0C;AAEN;AAErC;IAA0B,wBAAU;IAKhC,cAAY,KAAkB,EAAE,SAAmC,EAAE,OAA8B;QAAnG,YACI,iBAAO,SAwCV;QA5CD,iBAAW,GAAiB,EAAE,CAAC;QAC/B,6BAAuB,GAAG,CAAC,CAAC;QAIxB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,UAAU,GAAG,EAAE,CAAC,CAAC,yCAAyC;QAE9D,IAAI,qBAAqB,GAAG,UAAU,GAAG;YACrC,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC/B,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,GAAI,GAAa,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;oBACxD,OAAO,CAAC,CAAC,CAAE,GAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;gBAChD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAClC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;gBAC1E,CAAC;gBACD,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClC,MAAM,CAAC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC7C,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC3B,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC3B,MAAM,CAAC;YACX,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACb,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAClC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC3B,+BAA+B;QAC/B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACtB,IAAI,aAAa,GAAG,IAAI,kDAAe,CAAC;gBACpC,IAAI,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK;gBAC/B,KAAK,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK;aACxB,EAAE,UAAU,OAAO;gBAC3B,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC3C,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,KAAK;oBACjC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;oBAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;gBAC5C,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACnC,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YAC9C,aAAa,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC;;IACL,CAAC;IAEO,qCAAsB,GAA9B,UAA+B,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5F,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC1C,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACzE,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjD,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACzE,CAAC;gBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnC,CAAC;QAEL,CAAC;IACL,CAAC;IAEO,oCAAqB,GAA7B,UAA8B,SAAqB,EAAE,KAAiB;QAClE,IAAI,OAAO,GAAG,EAAE,EACZ,UAAU,GAAG,CAAC,EACd,MAAM,GAAG,KAAK,CAAC,MAAM,EACrB,WAAW,GAAG,IAAI,CAAC,QAAQ,EAC3B,IAAI,EACJ,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC;QAEvC,gCAAgC;QAChC,IAAI,aAAa,GAAG,IAAI,kDAAe,CAAC;YACpC,IAAI,EAAE,KAAK,CAAC,KAAK;YACjB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,KAAK,EAAE,KAAK,CAAC,KAAK;SACV,EAAE,UAAU,aAAa;YACjC,eAAe;YACf,aAAa,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK;gBAC/B,yCAAyC;gBACzC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrC,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oBACzD,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,oCAAoC;YACpC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACnC,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;QAEL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9C,aAAa,CAAC,OAAO,EAAE,CAAC;QAExB,IAAI,MAAM,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE,SAAS;YAC5C,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;YACzB,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAClC,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;gBAC1C,+CAA+C;gBAC/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;oBACpD,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBAC1C,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC1D,CAAC;gBACD,EAAE,UAAU,CAAC;YACjB,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC;gBACjC,YAAY;gBACZ,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;gBACzB,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBACxC,+CAA+C;gBAC/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;oBACpD,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBAC1C,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC1D,CAAC;gBACD,gFAAgF;gBAChF,EAAE,UAAU,CAAC;YACjB,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAEO,+BAAgB,GAAxB,UAAyB,SAAqB,EAAE,KAAiB;QAAjE,iBAwDC;QAvDG,IAAI,YAAY,GAAG,EAAE,EACjB,UAAU,GAAG,CAAC,EACd,MAAM,GAAG,KAAK,CAAC,MAAM,EACrB,WAAW,GAAG,IAAI,CAAC,QAAQ,EAC3B,aAAa,GAAG,WAAW,CAAC,MAAM,EAClC,UAAU,GAAG,CAAC,EACd,KAAK,GAAG,EAAE,EACV,mBAAmB,GAAG;YAClB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;YAC7B,oCAAoC;YACpC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACnC,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,WAAW,GAAG,UAAU,OAAO;YAC3B,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,KAAK;gBACjC,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,aAAa,EAAE,UAAU,EAAE,EAAE,CAAC;oBAC5D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;wBAClB,WAAW,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC7D,WAAW,GAAG,IAAI,CAAC;wBACnB,KAAK,CAAC;oBACV,CAAC;gBACL,CAAC;gBACD,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACzB,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBACxC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;oBACd,WAAW,GAAG,KAAK,CAAC;oBACpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;wBACpD,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4BAC1C,WAAW,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC3D,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;wBACpD,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;oBAC1D,CAAC;gBACL,CAAC;YACL,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,YAAY,GAAG;YACX,IAAI,aAAa,GAAG,IAAI,kDAAe,CAAC;gBACpC,IAAI,EAAE,KAAK,CAAC,KAAK;gBACjB,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,KAAK,EAAE,KAAK,CAAC,KAAK;aACV,EAAE,UAAC,OAAO;gBAClB,WAAW,CAAC,OAAO,CAAC,CAAC;gBACrB,mBAAmB,EAAE,CAAC;YAC1B,CAAC,EAAE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YACnC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC5B,CAAC,CAAC;QACN,YAAY,EAAE,CAAC;IACnB,CAAC;IAEO,gDAAiC,GAAzC,UAA0C,SAAqB,EAAE,KAAiB;QAC9E,IAAI,YAAY,GAAG,EAAE,EACjB,UAAU,GAAG,CAAC,EACd,MAAM,GAAG,KAAK,CAAC,MAAM,EACrB,WAAW,GAAG,IAAI,CAAC,QAAQ;QAC3B,QAAQ;QACR,aAAa,GAAG,WAAW,CAAC,MAAM,EAClC,UAAU,GAAG,CAAC,EACd,KAAK,GAAG,EAAE,EACV,mBAAmB,GAAG;YAClB,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;YAC7B,oCAAoC;YACpC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,uBAAuB,EAAE,CAAC;YACnC,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,MAAM,GAAG,UAAU,OAAO;YACtB,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrB,OAAO,CAAC,OAAO,CAAC,UAAU,KAAK;oBAC3B,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;oBAC9B,YAAY,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;oBAC9C,+CAA+C;oBAC/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;wBACpD,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;4BAC/C,WAAW,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC3D,CAAC;oBACD,EAAE,UAAU,CAAC;gBACjB,CAAC,EAAE,IAAI,CAAC,CAAC;YACb,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC;gBACjC,YAAY;gBACZ,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;gBAC9B,YAAY,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;gBAC7C,+CAA+C;gBAC/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAC;oBACpD,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;wBAC/C,WAAW,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBAC3D,CAAC;gBACD,EAAE,UAAU,CAAC;YACjB,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ,YAAY,GAAG;YACX,EAAE,CAAC,CAAC,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC;gBAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oBACjF,IAAI,aAAa,GAAG,IAAI,kDAAe,CAAC;wBACpC,IAAI,EAAE,KAAK,CAAC,KAAK;wBACjB,KAAK,EAAE,KAAK,CAAC,KAAK;wBAClB,KAAK,EAAE,KAAK;qBACJ,EAAE,UAAC,OAAO;wBAClB,MAAM,CAAC,OAAO,CAAC,CAAC;wBAChB,EAAE,UAAU,CAAC;wBACb,YAAY,EAAE,CAAC;oBACnB,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACnC,aAAa,CAAC,OAAO,EAAE,CAAC;gBAC5B,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,mBAAmB,EAAE,CAAC;YAC1B,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,YAAY,EAAE,CAAC;IACnB,CAAC;IAEO,sCAAuB,GAA/B;QACI,IAAI,UAAU,CAAC;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,IAAI,IAAI,CAAC,uBAAuB,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9E,UAAU,GAAG;gBACT,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC,MAAM;gBACtE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC,KAAK;aACzD,CAAC;YAChB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;QAClE,CAAC;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAC3D,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,iCAAiC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC;IACL,WAAC;AAAD,CAAC,CAvRyB,uDAAU,GAuRnC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3RyB;AAG1B;IAA0B,wBAAE;IAA5B;;IAyKA,CAAC;IApKa,+BAAgB,GAA1B,UAA2B,MAAM,EAAE,KAAa,EAAE,MAAiB;QAC/D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;QACvE,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,UAAU,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;IACL,CAAC;IAEO,kCAAmB,GAA3B;QACI,IAAI,MAA0B,EAC1B,IAAI,GAAG,IAAI,CAAC,WAAW,EACvB,UAAU,GAAG,UAAU,KAAK;YACxB,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,EAAE,IAAI,CAAC;YACX,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC;oBACvD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;wBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC7B,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC;oBACvD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBAC7B,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IAEO,0BAAW,GAAnB;QACI,IAAI,MAA0B,EAC1B,IAAI,GAAG,IAAI,CAAC,WAAW,EACvB,UAAU,GAAG,UAAU,KAAK;YACxB,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,EAAE,IAAI,CAAC;YACX,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;wBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,UAAU,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/B,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,UAAU,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/B,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IAEO,2BAAY,GAApB;QACI,IAAI,MAA0B,CAAC;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC;oBACvD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;wBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACrC,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC;oBACvD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACrC,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IAEO,4BAAa,GAArB;QACI,IAAI,MAA0B,CAAC;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;wBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACrC,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACrC,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IACL,WAAC;AAAD,CAAC,CAzKyB,sCAAE,GAyK3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5K0C;AACE;AACJ;AAEzC;IAA8B,4BAAU;IAAxC;;IAyGA,CAAC;IAxGa,6CAA0B,GAApC;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC9D,IAAI,UAAU,GAAuB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI;oBACvD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;gBACtE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;oBACnE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YACrC,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,cAAc,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC3F,KAAK,CAAC,KAAK,EAAE,CAAC;YAClB,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QAC7D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACzC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,UAAU,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEjB,CAAC;IAEO,gDAA6B,GAArC;QAAA,iBAkBC;QAjBG,IAAI,cAAc,GAAG,KAAK,EACtB,MAA0B,CAAC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAC,CAAC;YAClC,MAAM,GAAI,CAAS,CAAC,MAAM,CAAC,MAAM,CAAC;YAClC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,cAAc,IAAI,KAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBAC/D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,cAAc,GAAG,IAAI,CAAC;oBACtB,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;gBACrC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC;IACN,CAAC;IAEO,wCAAqB,GAA7B;QACI,IAAI,cAAc,GAAG,KAAK,EACtB,MAAM,CAAC;QACX,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;YAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,cAAc,GAAG,IAAI,CAAC;oBACtB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACrC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAEO,2CAAwB,GAAhC;QACI,IAAI,MAAM,CAAC;QACX,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;YAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,MAAc,CAAC,QAAQ,EAAE,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IAEO,0CAAuB,GAA/B;QACI,IAAI,MAAM,CAAC;QACX,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;YAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YACzB,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IACL,eAAC;AAAD,CAAC,CAzG6B,uDAAU,GAyGvC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7G6B;AAE9B;IAA2B,yBAAI;IAA/B;;IA0KA,CAAC;IAzKW,2CAA2B,GAAnC;QACI,IAAI,cAAc,GAAG,KAAK,EACtB,MAAM,CAAC;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC/D,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACrC,CAAC;wBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,cAAc,GAAG,IAAI,CAAC;wBACtB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACrC,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC/D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,cAAc,GAAG,IAAI,CAAC;wBACtB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACrC,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IAEO,mCAAmB,GAA3B;QACI,IAAI,cAAc,GAAG,KAAK,EACtB,MAAM,CAAC;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBACjB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACrC,CAAC;wBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,cAAc,GAAG,IAAI,CAAC;wBACtB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACrC,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,cAAc,GAAG,IAAI,CAAC;wBACtB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACrC,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IAEO,oCAAoB,GAA5B;QACI,IAAI,MAAM,CAAC;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY;oBACpD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IAEO,qCAAqB,GAA7B;QACI,IAAI,MAAM,CAAC;QACX,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACrC,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC3C,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACjC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IAEO,iCAAiB,GAAzB,UAA0B,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG;QAC5C,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAChE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,EAC3B,GAAG,CACN,CAAC;QAEF,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,UAAU,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEb,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;IACL,CAAC;IACL,YAAC;AAAD,CAAC,CA1K0B,0CAAI,GA0K9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5K8B;AACW;AAEnC,IAAI,WAAW,GAAG,UAAC,aAAa,EAAE,WAAW;IAChD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC;QAC5B,EAAE,CAAC,CAAC,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;YACzC,WAAW,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,CAAC,EAAS,CAAC,CAAC,CAAC;oBAChB,KAAK,GAAG;wBAAE,WAAW,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAC,KAAK,CAAC;oBAC5D,KAAK,GAAG;wBAAE,WAAW,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAC,KAAK,CAAC;oBAC5D,KAAK,GAAG;wBAAE,WAAW,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAC,KAAK,CAAC;oBAC5D,KAAK,GAAG;wBAAE,WAAW,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAC,KAAK,CAAC;oBAC5D,SAAS,WAAW,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;gBACnD,CAAC;gBACD,KAAK,CAAC;YACV,CAAC;QACL,CAAC;IACL,CAAC;IACD,MAAM,CAAC,WAAW,CAAC;AACvB,CAAC,CAAC;AAEF;IAAgC,8BAAI;IAApC;QAAA,qEAkBC;QAjBG,gBAAU,GAAG,KAAK,CAAC;;IAiBvB,CAAC;IAhBa,oCAAe,GAAzB;QACI,qDAAS,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC3E,CAAC;IAES,oCAAe,GAAzB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;IACL,CAAC;IAEO,2CAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IACL,iBAAC;AAAD,CAAC,CAlB+B,0CAAI,GAkBnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CsC;AACK;AAE5C;IAAwB,sBAAQ;IAAhC;;IAiDA,CAAC;IAhDW,2BAAc,GAAtB,UAAuB,MAAM,EAAE,MAAM;QAArC,iBA+CC;QA9CG,IAAI,MAA0B,EAC1B,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,EAC9C,cAAc,EACd,aAAa,GAAG,UAAC,CAAC;YACd,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC;QACN,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCACzC,MAAM,CAAC,MAAM,CAAC,gEAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gCAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;4BACxB,CAAC;4BACD,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BACxB,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtB,cAAc,GAAG,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtE,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;wBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;wBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM,CAAC,MAAM,CAAC,gEAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;4BAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;4BACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;wBACtB,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;4BAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;wBAC3B,CAAC;oBACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,cAAc,CAAC,OAAO,GAAG,aAAa,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IACL,SAAC;AAAD,CAAC,CAjDuB,mDAAQ,GAiD/B;;;;;;;;;;;;;;;;;;ACpD0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAK;AAEU;AACO;AAEjD;IAA8B,4BAAK;IAC/B,kBAAY,KAAc,EAAE,SAAqB,EAAE,OAA8B;QAAjF,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;IACxB,CAAC;IAED,0BAAO,GAAP;QACI,IAAI,CAAC;YACD,IAAI,CAAC,MAAM,GAAG,IAAI,6DAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBAC1D,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAC3C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC3D,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC/B,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,eAAe,EAAE,CAAC;wBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC1B,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBACtC,CAAC;YACL,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC;QACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1E,CAAC;IACL,CAAC;IAEO,sCAAmB,GAA3B;QAAA,iBAkBC;QAjBG,IAAI,aAAa,GAAG,IAAI,sDAAe,CAAC;YACpC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;YACpB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;SAChB,EAAE,UAAC,OAAc;YACzB,IAAI,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EACxC,QAAQ,GAAG,EAAE,EACb,SAAS,GAAG,EAAE,CAAC;YACnB,OAAO,CAAC,OAAO,CAAC,UAAC,KAAK;gBAClB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;YACH,OAAO,GAAG,IAAI,CAAC;YACf,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC;YAClC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;YACjC,KAAI,CAAC,eAAe,EAAE,CAAC;YACvB,KAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7B,aAAa,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IACL,eAAC;AAAD,CAAC,CA1D6B,4CAAK,GA0DlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DyB;AACkB;AAE5C;IAA0B,wBAAE;IAA5B;;IAiDA,CAAC;IA5Ca,+BAAgB,GAA1B,UAA2B,MAAM,EAAE,KAAK,EAAE,MAAiB;QACvD,IAAI,MAA0B,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAI,KAAgB,CAAC,WAAW,EAAE,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;QACvE,mBAAmB,CAAC,OAAO,GAAG,UAAU,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEb,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,mBAAmB,CAAC,SAAS,GAAG,UAAU,CAAC;gBACvC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;wBAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,MAAM,CAAC,MAAM,CAAC,gEAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YAEL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,mBAAmB,CAAC,SAAS,GAAG,UAAU,CAAC;gBACvC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACrC,MAAM,CAAC,MAAM,CAAC,gEAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;IACL,CAAC;IACL,WAAC;AAAD,CAAC,CAjDyB,sCAAE,GAiD3B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDuD;AAExD;IAA8B,4BAAU;IAAxC;;IAsBA,CAAC;IApBa,6CAA0B,GAApC;QAAA,iBAmBC;QAlBG,IAAI,MAAM,EACN,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QACpD,cAAc,CAAC,SAAS,GAAG,UAAC,CAAC;YACzB,MAAM,GAAI,CAAS,CAAC,MAAM,CAAC,MAAM,CAAC;YAClC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,MAAM,CAAC,MAAM,CAAC,gEAAW,CAAC,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1D,EAAE,KAAI,CAAC,YAAY,CAAC;gBACnB,MAAc,CAAC,QAAQ,EAAE,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC;QAEL,CAAC,CAAC;QACF,cAAc,CAAC,OAAO,GAAG,UAAC,CAAC;YACvB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC;IACN,CAAC;IACL,eAAC;AAAD,CAAC,CAtB6B,uDAAU,GAsBvC;;;;;;;;;;;;;;;;;;;ACrB4C;AACJ;AACP;AAElC;IAEI,uBAAY,KAAY;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,6BAAK,GAAL,UAAM,QAAQ,EAAE,OAAO;QACnB,IAAI,KAAK,GAAW,IAAI,CAAC;QACzB,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACd,mDAAmD;gBACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,MAAc;oBAC/C,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;wBACjB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;4BAC3B,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC/D,CAAC;wBACD,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;gBACL,CAAC,EAAE,IAAI,CAAC,CAAC;YACb,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;YAC5E,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEO,qCAAa,GAArB,UAAsB,MAAM,EAAE,KAAK;QAC/B,IAAI,KAAK,GAAW,IAAI,CAAC;QACzB,wBAAwB;QACxB,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,0CAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACxC,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,SAAS,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9E,CAAC;QAED,iBAAiB;QACjB,IAAI,IAAI,GAAG,0CAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC/B,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,SAAS,IAAI,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACjD,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YAChF,CAAC;QACL,CAAC;QAED,0BAA0B;QAC1B,EAAE,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACpB,IAAI,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACxC,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,IAAI,IAAI,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClF,KAAK,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;gBACtF,CAAC;gBACD,KAAK,CAAC;YACV,CAAC;QACL,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnE2C;AACd;AAE9B;IAA2B,yBAAI;IAA/B;;IAwCA,CAAC;IAvCW,iCAAiB,GAAzB,UAA0B,MAAM,EAAE,KAAK,EAAE,EAAE;QACvC,IAAI,MAA0B,EAC1B,cAAc,CAAC;QACnB,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/B,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;QACzF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzC,MAAM,CAAC,MAAM,CAAC,gEAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;oBACxB,CAAC;oBACD,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACzB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,MAAM,CAAC,gEAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC1D,EAAE,IAAI,CAAC,YAAY,CAAC;oBACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC3B,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QAED,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;IACL,YAAC;AAAD,CAAC,CAxC0B,0CAAI,GAwC9B;;;;;;;;;;;;;;;;;AC3CoC;AAErC;;;;;GAKG;AACH;IAIE,sBAAY,KAAa;QACvB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,4BAAK,GAAL,UAAM,QAAQ;QACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,YAAY,CAAC;QACjB,GAAG,CAAC,CAAC,IAAI,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACnC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACvC,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACrC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC;wBAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4BACjB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gCACZ,KAAK,IAAI;oCAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;oCAAC,KAAK,CAAC;gCACjE,KAAK,MAAM;oCAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;oCAAC,KAAK,CAAC;gCACrE,KAAK,GAAG,CAAC;gCACT,KAAK,GAAG,CAAC;gCACT,KAAK,GAAG,CAAC;gCACT,KAAK,IAAI,CAAC;gCACV,KAAK,IAAI,CAAC;gCACV,KAAK,IAAI;oCACP,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC;oCAC/D,KAAK,CAAC;4BACV,CAAC;wBACH,CAAC;wBACD,IAAI,CAAC,CAAC;4BACJ,KAAK,CAAC;wBACR,CAAC;oBACH,CAAC;gBACH,CAAC;gBACD,IAAI,CAAC,CAAC;oBACJ,EAAE,CAAC,CAAC,YAAY,KAAK,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;YACH,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAK,CAAC;YACR,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEO,8BAAO,GAAf,UAAgB,MAAM,EAAE,KAAK;QAC3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAK,CAAC;YACR,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;QACH,CAAC;IACH,CAAC;IAEO,gCAAS,GAAjB,UAAkB,MAAM,EAAE,KAAK;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAC9C,WAAsB,EACtB,UAAU,EACV,YAAY,CAAC;QACf,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,gDAAS,CAAC,GAAG,CAAC,CAAC,CAAC,gDAAS,CAAC,IAAI,CAAC;QACnE,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,WAAW,GAAG,gDAAS,CAAC,KAAK,CAAC;QAChC,CAAC;QACD,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAE5B,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpB,KAAK,gDAAS,CAAC,GAAG;gBAChB,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;gBACvD,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAAC,KAAK,CAAC;YACV,KAAK,gDAAS,CAAC,KAAK;gBAClB,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;gBACvD,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAAC,KAAK,CAAC;YACV;gBACE,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;gBAC3D,EAAE,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;oBACpD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;QACL,CAAC;IACH,CAAC;IAEO,yCAAkB,GAA1B,UAA2B,MAAM,EAAE,KAAK,EAAE,MAAM;QAC9C,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;QAChD,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,eAAe;YACf,KAAK,GAAG;gBAAE,EAAE,CAAC,CAAC,KAAK,IAAI,aAAa,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAAC,KAAK,CAAC;YACR,YAAY;YACZ,KAAK,GAAG;gBAAE,EAAE,CAAC,CAAC,KAAK,IAAI,aAAa,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAAC,KAAK,CAAC;YACR,kBAAkB;YAClB,KAAK,IAAI;gBAAE,EAAE,CAAC,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAAC,KAAK,CAAC;YACR,sBAAsB;YACtB,KAAK,IAAI;gBAAE,EAAE,CAAC,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAAC,KAAK,CAAC;YACR,UAAU;YACV,KAAK,GAAG;gBAAE,EAAE,CAAC,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,IAAI,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;oBACtE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAAC,KAAK,CAAC;YACR,eAAe;YACf,KAAK,IAAI;gBAAE,EAAE,CAAC,CAAC,KAAK,KAAK,aAAa,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAAC,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACpID;AAAA;IAAA;IAEA,CAAC;IADU,oBAAa,GAAG,KAAK,CAAC;IACjC,aAAC;CAAA;AAFkB;;;;;;;;;;;;;;;;;;;;ACAnB,IAAY,SAIX;AAJD,WAAY,SAAS;IACjB,wBAAW;IACX,uBAAU;IACV,sBAAS;AACb,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;AAED,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IACxB,4CAAwB;IACxB,qCAAiB;IACjB,8CAA0B;AAC9B,CAAC,EAJW,gBAAgB,KAAhB,gBAAgB,QAI3B;AAED,IAAY,iBAMX;AAND,WAAY,iBAAiB;IACzB,4CAAuB;IACvB,sCAAiB;IACjB,+CAA0B;IAC1B,sDAAiC;IACjC,0DAAqC;AACzC,CAAC,EANW,iBAAiB,KAAjB,iBAAiB,QAM5B;AAED,IAAY,cAIX;AAJD,WAAY,cAAc;IACtB,2BAAS;IACT,+BAAa;IACb,2BAAS;AACb,CAAC,EAJW,cAAc,KAAd,cAAc,QAIzB;AAED,IAAY,SAOX;AAPD,WAAY,SAAS;IACjB,8BAAiB;IACjB,8BAAiB;IACjB,4BAAe;IACf,8BAAiB;IACjB,gCAAmB;IACnB,0BAAa;AACjB,CAAC,EAPW,SAAS,KAAT,SAAS,QAOpB;AAED,IAAY,UAuBX;AAvBD,WAAY,UAAU;IAClB,kDAAoC;IACpC,gDAAkC;IAClC,2DAA6C;IAC7C,yDAA2C;IAC3C,6DAA+C;IAC/C,oCAAsB;IACtB,mDAAqC;IACrC,iDAAmC;IACnC,mDAAqC;IACrC,4CAA8B;IAC9B,sCAAwB;IACxB,2CAA6B;IAC7B,sDAAwC;IACxC,+CAAiC;IACjC,yCAA2B;IAC3B,sDAAwC;IACxC,oDAAsC;IACtC,sCAAwB;IACxB,8CAAgC;IAChC,sCAAwB;IACxB,wDAA0C;IAC1C,oDAAsC;AAC1C,CAAC,EAvBW,UAAU,KAAV,UAAU,QAuBrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DqC;AACd;AACA;;;;;;;;;;;;;;ACAxB;AAAA;IAAA;QACI,aAAQ,GAAG,IAAI,CAAC;QAGhB,kBAAa,GAAY,KAAK,CAAC;QAC/B,gBAAW,GAAG,CAAC,CAAC;IAapB,CAAC;IATa,6BAAc,GAAxB,UAAyB,CAAC;QACtB,EAAE,IAAI,CAAC,WAAW,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,QAAQ,CAAE,CAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC;QACD,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBmC;AAEc;AACT;AAEzC;IAAyB,uBAAI;IAEzB,aAAY,GAAW,EAAE,SAA2B,EAAE,OAA8B;QAApF,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;IAC5B,CAAC;IAEM,qBAAO,GAAd;QAAA,iBAiBC;QAhBG,IAAI,OAAO,GAAG,UAAC,MAAM,EAAE,KAAK;YACxB,IAAI,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACzF,cAAc,CAAC,OAAO,GAAG,UAAU,CAAC;gBAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACb,cAAc,CAAC,SAAS,GAAG,UAAU,CAAC;gBAClC,IAAI,MAAM,GAAuB,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC;YACL,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACjB,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,OAAO,CAAC,6DAAa,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAElD,CAAC;IAEO,6BAAe,GAAvB;QACI,qDAAS,CAAC,iBAAiB,CAAC,CAAC,6DAAa,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;QAC5G,IAAI,CAAC,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,6DAAa,CAAC,UAAU,CAAC,CAAC;IACrF,CAAC;IAEO,oCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IACL,UAAC;AAAD,CAAC,CAtCwB,gDAAI,GAsC5B;;;;;;;;;;;;;;;;;;AC3CiD;AACL;AAE7C;IAAA;IAuBA,CAAC;IAlBU,gCAAsB,GAA7B;QACI,IAAI,CAAC,qBAAqB,GAAG,6DAAa,CAAC,SAAS,CAAC,SAAS,KAAK,wDAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAClH,CAAC;IAEM,2BAAiB,GAAxB,UAAyB,UAAU,EAAE,QAAoB,EAAE,IAAK;QAAhE,iBAaC;QAZG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;YAC7B,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACrE,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG;gBAC3B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,QAAQ,EAAE,CAAC;YACf,CAAC,CAAC;YACD,IAAI,CAAC,YAAoB,CAAC,SAAS,GAAG;gBACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC3C,CAAC,CAAC;QACN,CAAC;IACL,CAAC;IAnBM,sBAAY,GAAmB,IAAI,CAAC;IAoB/C,gBAAC;CAAA;AAvBqB;;;;;;;;;;;;;;;;;;;;;ACFiB;AACM;AACN;AACE;AACS;AAE3C,IAAI,UAAU,CAAC;AACtB;IACI,gBAAY,MAAc,EAAE,SAAqB,EAAE,OAA8B;QAC7E,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QAChD,qDAAS,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACxC,UAAU,CAAC,OAAO,GAAG,UAAC,KAAK;YACvB,EAAE,CAAC,CAAE,KAAa,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,mBAAmB,CAAC,CAAC,CAAC;gBAC3D,gDAAiB,CAAC,SAAS,GAAG;oBAC1B,SAAS,EAAE,wDAAyB,CAAC,aAAa;oBAClD,SAAS,EAAE,iDAAkB,CAAC,gBAAgB;iBACjD,CAAC;YACN,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBAClB,OAAO,CAAE,KAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACzC,CAAC;QACL,CAAC,CAAC;QAEF,UAAU,CAAC,SAAS,GAAG,UAAC,KAAK;YACzB,6DAAa,CAAC,SAAS,CAAC,SAAS,GAAG,wDAAiB,CAAC,SAAS,CAAC;YAChE,qDAAS,CAAC,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;YAC5C,qDAAS,CAAC,aAAa,CAAC,OAAO,GAAG;gBAC9B,qDAAS,CAAC,sBAAsB,EAAE,CAAC;gBACnC,kDAAK,CAAC,cAAc,CAAC,wDAAiB,CAAC,MAAM,EAAE,iDAAkB,CAAC,gBAAgB,CAAC,CAAC;YACxF,CAAC,CAAC;YAEF,qDAAS,CAAC,aAAa,CAAC,eAAe,GAAG,UAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;oBACxB,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,0CAA0C;oBAC5D,qDAAS,CAAC,sBAAsB,EAAE,CAAC;oBACnC,kDAAK,CAAC,cAAc,CAAC,wDAAiB,CAAC,MAAM,EAAE,iDAAkB,CAAC,gBAAgB,CAAC,CAAC;gBACxF,CAAC;YACL,CAAC,CAAC;YAEF,qDAAS,CAAC,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;gBAChC,6DAAa,CAAC,SAAS,CAAC,SAAS,GAAG,+BAA+B,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAC1F,CAAC,CAAC;YAEF,qDAAS,CAAC,aAAa,CAAC,OAAO,GAAG,UAAC,CAAC;gBAChC,6DAAa,CAAC,SAAS,GAAG;oBACtB,SAAS,EAAE,wDAAiB,CAAC,MAAM;oBACnC,SAAS,EAAE,oBAAoB;iBAClC,CAAC;YACN,CAAC,CAAC;YAEF,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;gBACpB,SAAS,EAAE,CAAC;YAChB,CAAC;QACL,CAAC,CAAC;QAEF,UAAU,CAAC,eAAe,GAAG,UAAC,KAAU;YACpC,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EACxB,MAAM,GAAG,KAAK,CAAC;YACnB,EAAE,CAAC,iBAAiB,CAAC,6DAAa,CAAC,UAAU,EAAE;gBAC3C,OAAO,EAAE,MAAM;aAClB,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACrD,CAAC,CAAC;IACN,CAAC;IACL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AChEiD;AACL;AAEL;AACN;AACO;AACP;AACO;AAEzC;IAEI,cAAY,SAAgB;QAAhB,4CAAgB;QACxB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAChC,CAAC;IAEM,kBAAG,GAAV,UAAW,KAAc,EAAE,SAAqB,EAAE,OAA8B;QAC5E,IAAI,UAAU,GAAG,IAAI,8CAAG,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACpD,UAAU,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAEM,qBAAM,GAAb,UAAc,GAAW,EAAE,SAA2B,EAAE,OAA8B;QAClF,IAAI,UAAU,GAAG,IAAI,oDAAM,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACrD,UAAU,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAEM,kBAAG,GAAV,UAAW,GAAW,EAAE,SAA2B,EAAE,OAA8B;QAC/E,IAAI,UAAU,GAAG,IAAI,8CAAG,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAClD,UAAU,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAEM,uBAAQ,GAAf,UAAgB,SAAqB,EAAE,OAA8B;QACjE,IAAI,OAAO,GAAG,UAAU,CAAC;QACzB,IAAI,cAAc,GAAG,IAAI,qDAAM,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IAEM,6CAA8B,GAArC,UAAsC,OAAsB;QAA5D,iBAsBC;QArBG,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,WAAW,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,CAAC,6DAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxC,KAAK,wDAAiB,CAAC,SAAS;oBAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAAC,KAAK,CAAC;gBACpE,KAAK,wDAAiB,CAAC,UAAU;oBAC7B,UAAU,CAAC;wBACP,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;oBACjD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,KAAK,CAAC;gBAC9B,KAAK,wDAAiB,CAAC,MAAM;oBACzB,EAAE,CAAC,CAAC,qDAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,QAAQ,CAAC;4BACV,qDAAS,CAAC,qBAAqB,GAAG,KAAK,CAAC;4BACxC,KAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;wBACjD,CAAC,EAAE,UAAC,GAAG;4BACH,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACvB,CAAC,CAAC,CAAC;oBACP,CAAC;YACT,CAAC;QACL,CAAC;IACL,CAAC;IAEO,2BAAY,GAApB,UAAqB,MAAM;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC;IAEO,2BAAY,GAApB,UAAqB,OAAsB;QACvC,IAAI,SAAS,GAAG,UAAU,OAAO;YAC7B,IAAI,CAAC,YAAY,CAAC;gBACd,aAAa,EAAE,OAAO;aACT,CAAC,CAAC;QACvB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EACR,OAAO,GAAG,UAAU,GAAG;YACnB,IAAI,CAAC,YAAY,CAAC;gBACd,YAAY,EAAE,GAAG;gBACjB,YAAY,EAAE,IAAI;aACL,CAAC,CAAC;QACvB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEjB,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACnB,KAAK,KAAK;gBACN,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC5C,KAAK,CAAC;YACV,KAAK,KAAK;gBAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBACpD,KAAK,CAAC;YACV,KAAK,QAAQ;gBAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC1D,KAAK,CAAC;YACV,KAAK,WAAW;gBAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBAAC,KAAK,CAAC;QAC/D,CAAC;IACL,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFmC;AAEc;AACT;AAEzC;IAA4B,0BAAI;IAG5B,gBAAY,GAAW,EAAE,SAA0C,EAAE,OAA8B;QAAnG,YACI,iBAAO,SAIV;QAND,kBAAY,GAAW,CAAC,CAAC;QAGrB,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;IAC5B,CAAC;IAEM,wBAAO,GAAd;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,UAAU,GAAG,UAAU,MAAM,EAAE,KAAK;YAAvB,iBAchB;YAbG,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACzF,cAAc,CAAC,OAAO,GAAG,UAAC,CAAC;gBACvB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAC,CAAC;gBACzB,IAAI,MAAM,GAAuB,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACjD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChB,EAAE,KAAI,CAAC,YAAY,CAAC;oBACpB,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACtB,CAAC;YACL,CAAC,CAAC;QACN,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACtB,UAAU,CAAC,6DAAa,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;IACL,CAAC;IAEO,gCAAe,GAAvB;QACI,qDAAS,CAAC,iBAAiB,CAAC,CAAC,6DAAa,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,6DAAa,CAAC,UAAU,CAAC,CAAC;IACrF,CAAC;IAEO,uCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;IACL,CAAC;IACL,aAAC;AAAD,CAAC,CA3C2B,gDAAI,GA2C/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDmC;AAEK;AACS;AAElD;IAAyB,uBAAI;IAEzB,aAAY,KAAc,EAAE,SAAqB,EAAE,OAA8B;QAAjF,YACI,iBAAO,SASV;QARG,IAAI,CAAC;YACD,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC5B,CAAC;QACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACtB,CAAC;;IACL,CAAC;IAEM,qBAAO,GAAd;QAAA,iBA+BC;QA9BG,IAAI,uBAAuB,GAAG;YAC1B,IAAI,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,6DAAa,CAAC,WAAW,CAAC,CAAC,UAAU,CAC9E,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,6DAAa,CAAC,WAAW,CAAC,CAAC,CAC3D,CAAC;YACF,cAAc,CAAC,SAAS,GAAG,UAAC,CAAC;gBACzB,IAAI,MAAM,GAAwB,CAAS,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC1D,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACT,gDAAgD;oBAChD,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,UAAU,EAAE,CAAC;gBACjB,CAAC;YACL,CAAC,CAAC;YAEF,cAAc,CAAC,OAAO,GAAG,UAAC,CAAC;gBACvB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC;QAEN,CAAC,CAAC;QACF,IAAI,UAAU,GAAG;YACb,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACpD,UAAU,CAAC,OAAO,GAAG,UAAC,CAAC;gBACnB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC;QACN,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,uBAAuB,EAAE,CAAC;IAC9B,CAAC;IAEO,6BAAe,GAAvB;QACI,qDAAS,CAAC,iBAAiB,CAAC,CAAC,6DAAa,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,YAAY,GAAG,qDAAS,CAAC,YAAY,CAAC,WAAW,CAAC,6DAAa,CAAC,UAAU,CAAC,CAAC;IACrF,CAAC;IAEO,oCAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;IACL,CAAC;IACL,UAAC;AAAD,CAAC,CAzDwB,gDAAI,GAyD5B;;;;;;;;;;;;;;;;AC9DD,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IACzB,4CAAuB;IACvB,sCAAiB;IACjB,iDAA4B;AAChC,CAAC,EAJW,iBAAiB,KAAjB,iBAAiB,QAI5B;;;;;;;;;;;;;;;;;;;;;;;ACJ0B;;;;;;;;;;;;;;;;;;;ACA3B;AAAA,sBA4EA;AA5EsC;AACW;AAGjD;;;GAGG;AACI,IAAI,IAAI,GAAG;IACd,kDAAK,CAAC,SAAS,EAAE,CAAC;IAClB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACZ,6DAAa,CAAC,YAAY,CAAC;YACvB,IAAI,EAAE,WAAW;YACjB,KAAK,EAAE,IAAI;SACG,CAAC,CAAC;IACxB,CAAC;AACL,CAAC,CAAC;AAEF;;;;;;;GAOG;AACI,IAAI,GAAG,GAAG,UAAC,GAAW,EAAE,SAA2B,EAAE,OAAqC;IAArC,wCAAqC;IAC7F,6DAAa,CAAC,YAAY,CAAC;QACvB,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,OAAO;QAChB,SAAS,EAAE,SAAS;QACpB,KAAK,EAAE,GAAG;KACb,CAAC,CAAC;IACH,MAAM,CAAC,KAAI,CAAC;AAChB,CAAC,CAAC;AAEF;;;;;;;;GAQG;AACI,IAAI,GAAG,GAAG,UAAC,GAAG,EAAE,KAAK,EAAE,SAA4B,EAAE,OAA+B;IACvF,IAAI,KAAK,GAAG;QACR,GAAG,EAAE,GAAG;QACR,KAAK,EAAE,KAAK;KACJ,CAAC;IACb,6DAAa,CAAC,YAAY,CAAC;QACvB,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,OAAO;QAChB,SAAS,EAAE,SAAS;QACpB,KAAK,EAAE,KAAK;KACE,CAAC,CAAC;IACpB,MAAM,CAAC,KAAI,CAAC;AAChB,CAAC,CAAC;AAEF;;;;;;;GAOG;AACI,IAAI,MAAM,GAAG,UAAC,GAAW,EAAE,SAAkC,EAAE,OAAqC;IAAzE,4CAAkC;IAAE,wCAAqC;IACvG,6DAAa,CAAC,YAAY,CAAC;QACvB,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,OAAO;QAChB,SAAS,EAAE,SAAS;QACpB,KAAK,EAAE,GAAG;KACI,CAAC,CAAC;IACpB,MAAM,CAAC,KAAI,CAAC;AAChB,CAAC,CAAC;;;;;;;;;;;;;;;;;AC1E0C;AACC;AAE7C;IAAA;IA8CA,CAAC;IApCU,0BAAY,GAAnB,UAAoB,OAAsB;QACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;IACL,CAAC;IAEM,yBAAW,GAAlB;QAAA,iBAWC;QAVG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,OAAO,GAAkB;gBACzB,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI;gBAChC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK;aACpB,CAAC;YACnB,IAAI,yDAAI,CAAC,iBAAO;gBACZ,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC;IACL,CAAC;IAEM,6BAAe,GAAtB,UAAuB,OAAqB;QACxC,IAAI,gBAAgB,GAAkB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACjE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3B,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACnD,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;YAClC,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACtD,CAAC;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IA5CM,2BAAa,GAAoB,EAAE,CAAC;IACpC,wBAAU,GAAG,YAAY,CAAC;IAC1B,yBAAW,GAAG,KAAK,CAAC;IACpB,8BAAgB,GAAG,KAAK,CAAC;IACzB,uBAAS,GAAc;QAC1B,SAAS,EAAE,wDAAiB,CAAC,UAAU;QACvC,SAAS,EAAE,EAAE;KAChB,CAAC;IAsCN,oBAAC;CAAA;AA9CyB;AAgD1B,4DAA4D;AAE5D,wCAAwC;;;;;;;;;;;;;;;;;ACtDJ;AAEa;AAEjD;IAAA;IAqCA,CAAC;IApCG;;;;;OAKG;IACI,eAAS,GAAhB;QACI,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACb,SAAS,GAAI,IAAY,CAAC,YAAY;gBACjC,IAAY,CAAC,eAAe,IAAK,IAAY,CAAC,WAAW,CAAC;QACnE,CAAC;QACD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACZ,cAAc,GAAG,cAAc;gBAC1B,IAAY,CAAC,oBAAoB,IAAK,IAAY,CAAC,gBAAgB,CAAC;YACxE,IAAY,CAAC,WAAW,GAAI,IAAY,CAAC,WAAW;gBAChD,IAAY,CAAC,iBAAiB,IAAK,IAAY,CAAC,aAAa,CAAC;QACvE,CAAC;QACD,IAAI,CAAC,CAAC;YACF,gDAAiB,CAAC,SAAS,GAAG;gBAC1B,SAAS,EAAE,wDAAyB,CAAC,aAAa;gBAClD,SAAS,EAAE,iDAAkB,CAAC,kBAAkB;aACnD,CAAC;QACN,CAAC;IACL,CAAC;IAEM,oBAAc,GAArB,UAAsB,MAAyB,EAAE,GAAwB;QACrE,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;YACpB,6DAAa,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC;QAC/C,CAAC;QACD,IAAI,CAAC,CAAC;YACF,6DAAa,CAAC,SAAS,GAAG;gBACtB,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,GAAG;aACjB,CAAC;QACN,CAAC;IACL,CAAC;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACxCoC;AACH;AAElC;IAKI,mBAAY,IAAgB,EAAE,IAAgB;QAAhB,kCAAgB;QAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IAEM,yBAAK,GAAZ;QACI,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IAEM,aAAG,GAAV,UAAW,GAAG;QACV,EAAE,CAAC,CAAC,8CAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;IACL,CAAC;IAED,4BAAQ,GAAR;QACI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,8BAAU,GAAV;QACI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7B,CAAC;IAEM,uBAAG,GAAV;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;SACV,CAAC;IAChB,CAAC;IAEO,0BAAM,GAAd;QACI,IAAI,OAAe,CAAC;QACpB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,KAAK,iDAAU,CAAC,QAAQ;gBACpB,OAAO,GAAG,gCAAgC,CAAC;gBAC3C,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,eAAe;gBAC3B,OAAO,GAAG,8BAA8B,CAAC;gBACzC,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,cAAc;gBAC1B,OAAO,GAAG,6BAA6B,CAAC;gBACxC,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,mBAAmB;gBAC/B,OAAO,GAAG,4BAA4B,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;gBACvE,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,eAAe;gBAC3B,OAAO,GAAG,+BAA+B,CAAC;gBAC1C,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,oBAAoB;gBAChC,OAAO,GAAG,2BAA2B,CAAC;gBACtC,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,eAAe;gBAC3B,OAAO,GAAG,mBAAmB,CAAC;gBAC9B,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,SAAS;gBACrB,OAAO,GAAG,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;gBACxD,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,cAAc;gBAC1B,OAAO,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,kBAAkB,CAAC;gBACrE,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,eAAe;gBAC3B,OAAO,GAAG,uCAAuC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC;gBACnF,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,SAAS;gBACrB,OAAO,GAAG,wCAAwC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC;gBACpF,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,WAAW;gBACvB,OAAO,GAAG,6BAA6B,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;oBAC9D,4BAA4B,CAAC;gBACjC,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,gBAAgB;gBAAE,OAAO,GAAG,gCAAgC,CAAC;gBACzE,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,aAAa;gBACzB,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,kBAAkB,CAAC;gBACnE,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,UAAU;gBACtB,OAAO,GAAG,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,kBAAkB,CAAC;gBACnE,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,SAAS;gBACrB,OAAO,GAAG,8BAA8B,CAAC;gBACzC,KAAK,CAAC;YACV,KAAK,iDAAU,CAAC,SAAS;gBACrB,OAAO,GAAG,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;YAC/D,KAAK,iDAAU,CAAC,SAAS;gBACrB,OAAO,GAAG,gDAAgD,CAAC;YAC/D;gBACI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACxB,KAAK,CAAC;QACd,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACpGyC;AACJ;AAEtC;IAWI,gBAAY,GAAkB,EAAE,SAAiB;QAC7C,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,GAAG,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,mBAAmB,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YAClF,GAAG,CAAC,KAAK,EAAE,CAAC;QAChB,CAAC;QACD,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5E,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC;QACnE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC7F,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;QACnE,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC;IAC5E,CAAC;IAEL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;AChC+B;AAEhC;IAII,kBAAY,QAAyB;QAFrC,YAAO,GAAY,EAAE,CAAC;QAGlB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC3B,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,IAAI;YAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,4CAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACvC,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;ACZ4C;AAG7C;IAII,kBAAY,QAAkB;QAF9B,YAAO,GAAY,EAAE,CAAC;QAGlB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IACpC,CAAC;IAEM,iCAAc,GAArB,UAAsB,QAAiD;QAAvE,iBAmBC;QAlBG,IAAI,KAAK,GAAG,CAAC,EACT,aAAa,GAAkB,EAAE,EACjC,sBAAsB,GAAG;YACrB,EAAE,CAAC,CAAC,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC9B,IAAI,KAAK,GAAU,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAClC,YAAY,GAAgB,IAAI,yDAAW,CAAC,KAAK,CAAC,CAAC;gBACvD,YAAY,CAAC,cAAc,CAAC,KAAI,CAAC,KAAK,EAAE;oBACpC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;oBAC9B,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBACjC,sBAAsB,EAAE,CAAC;gBAC7B,CAAC,CAAC,CAAC;gBACH,EAAE,KAAK,CAAC;YACZ,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC5B,CAAC;QACL,CAAC,CAAC;QACN,sBAAsB,EAAE,CAAC;IAC7B,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;AChCiC;AAElC;IAMI,eAAY,KAAmB;QAJ/B,aAAQ,GAAa,EAAE,CAAC;QAKpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC1D,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI;YAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,8CAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACrD,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IACL,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACd6C;AACK;AAEnD;IAWI,qBAAY,KAAY;QATxB,aAAQ,GAAa,EAAE,CAAC;QAKxB,mBAAc,GAAY,KAAK,CAAC;QAChC,qBAAgB,GAAY,KAAK,CAAC;QAI9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEM,oCAAc,GAArB,UAAsB,MAAc,EAAE,QAAoB;QACtD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAEO,mCAAa,GAArB;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,IAAI;YAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACtD,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QAC7B,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAEO,sCAAgB,GAAxB,UAAyB,MAAc;QACnC,mDAAY,CAAC,UAAU,GAAG,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,EAAE,UAAU,YAAY;YACpF,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YACjC,CAAC;YAED,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC/B,CAAC;QACL,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC;IAEO,kCAAY,GAApB,UAAqB,MAAc;QAC/B,8DAAS,CAAC,UAAU,GAAG,8DAAS,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,8DAAS,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;QACnG,qBAAqB;QACrB,mDAAY,CAAC,aAAW,MAAM,gBAAa,EAAE,8DAAS,CAAC,UAAU,CAAC,CAAC;QACnE,wBAAwB;QACxB,mDAAY,CAAC,aAAW,MAAM,SAAI,IAAI,CAAC,KAAK,aAAU,EAAE,8DAAS,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,GAAG,8DAAS,CAAC,UAAU,CAAC;IACzC,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDiD;AACT;AAM0B;AACjC;AACU;AACA;AACC;AACA;AAEG;AACJ;AACM;AACF;AACE;AACA;AACA;AACpB;AACW;AACW;AAEpD;IAAA;IAsPA,CAAC;IApPU,sDAA8B,GAArC,UAAsC,OAA0B;QAAhE,iBAiCC;QAhCG,qDAAS,CAAC,GAAG,CAAC,4CAA4C,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3E,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACnB,KAAK,WAAW,CAAC;YACjB,KAAK,aAAa,CAAC;YACnB,KAAK,gBAAgB,CAAC;YACtB,KAAK,aAAa,CAAC;YACnB,KAAK,eAAe,CAAC;YACrB,KAAK,SAAS;gBACV,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC3B,KAAK,CAAC;YACV,KAAK,mBAAmB;gBACpB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBAAC,KAAK,CAAC;YAC1D;gBACI,MAAM,CAAC,CAAC,8DAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpC,KAAK,wDAAiB,CAAC,SAAS;wBAAE,CAAC;4BAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;wBAC/B,CAAC;wBAAC,KAAK,CAAC;oBACR,KAAK,wDAAiB,CAAC,MAAM;wBAAE,CAAC;4BAC5B,EAAE,CAAC,CAAC,8DAAS,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC;gCAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;oCAChB,8DAAS,CAAC,qBAAqB,GAAG,KAAK,CAAC;oCACxC,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;gCACjD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;4BACnC,CAAC;4BACD,IAAI,CAAC,CAAC;gCACF,IAAI,CAAC,MAAM,CAAC,8DAAS,CAAC,SAAS,CAAC,KAAK,EAAE;oCACnC,KAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;gCACjD,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;4BACxB,CAAC;wBACL,CAAC;wBAAC,KAAK,CAAC;gBACZ,CAAC;QACT,CAAC;IACL,CAAC;IAEO,uCAAe,GAAvB,UAAwB,SAAS;QAC7B,8CAAM,CAAC,aAAa,GAAG,SAAS,CAAC;IACrC,CAAC;IAEO,oCAAY,GAApB,UAAqB,MAAM;QACtB,IAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAEO,oCAAY,GAApB,UAAqB,OAA0B;QAA/C,iBA2DC;QA1DG,IAAI,SAAS,GAAG,UAAC,OAAQ;YACrB,KAAI,CAAC,YAAY,CAAC;gBACd,aAAa,EAAE,OAAO;aACL,CAAC,CAAC;QAC3B,CAAC,CAAC;QACF,IAAI,OAAO,GAAG,UAAC,GAAG;YACd,KAAI,CAAC,YAAY,CAAC;gBACd,YAAY,EAAE,GAAG;gBACjB,YAAY,EAAE,IAAI;aACD,CAAC,CAAC;QAC3B,CAAC,CAAC;QAEF,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACnB,KAAK,QAAQ;gBACT,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC/C,KAAK,CAAC;YACV,KAAK,QAAQ;gBAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC1D,KAAK,CAAC;YACV,KAAK,QAAQ;gBAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC1D,KAAK,CAAC;YACV,KAAK,QAAQ;gBAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC1D,KAAK,CAAC;YACV,KAAK,aAAa;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAClE,KAAK,CAAC;YACV,KAAK,gBAAgB;gBACjB,8DAAS,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;gBACjD,KAAK,CAAC;YACV,KAAK,aAAa;gBACd,8DAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gBAC/B,KAAK,CAAC;YACV,KAAK,eAAe;gBAChB,8DAAS,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;gBAChD,KAAK,CAAC;YACV,KAAK,SAAS;gBACV,EAAE,CAAC,CAAC,8DAAS,CAAC,qBAAqB,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;wBAChB,8DAAS,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBACxC,SAAS,EAAE,CAAC;oBAChB,CAAC,EAAE,OAAO,CAAC,CAAC;gBAChB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBACnD,CAAC;gBACD,KAAK,CAAC;YACV,KAAK,WAAW;gBAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC/D,KAAK,CAAC;YACV,KAAK,OAAO;gBAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBACxD,KAAK,CAAC;YACV,KAAK,SAAS;gBAAE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC5C,KAAK,CAAC;YACV,KAAK,OAAO;gBAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBACxD,KAAK,CAAC;YACV,KAAK,aAAa;gBAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBACnE,KAAK,CAAC;YACV,KAAK,aAAa;gBAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBACnE,KAAK,CAAC;YACV,SAAS,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC;QAC9E,CAAC;IACL,CAAC;IAEO,8BAAM,GAAd,UAAe,MAAM,EAAE,SAAqB,EAAE,OAA8B;QACxE,8DAAS,CAAC,YAAY,CAAC,MAAM,EAAE,UAAC,SAAS;YACrC,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,8DAAS,CAAC,UAAU,GAAG,SAAS,CAAC;gBACjC,8DAAS,CAAC,WAAW,CAAC,MAAM,EAAE,UAAC,MAAM;oBACjC,8DAAS,CAAC,SAAS,GAAG,MAAM,CAAC;oBAC7B,IAAI,cAAc,GAAG,IAAI,wDAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBACpD,cAAc,CAAC,OAAO,EAAE,CAAC;gBAC7B,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,GAAG,GAAG,IAAI,qDAAS,CAAC,iDAAU,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;gBACnE,GAAG,CAAC,QAAQ,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;YACvB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,+BAAO,GAAf;QACI,EAAE,CAAC,CAAC,8DAAS,CAAC,SAAS,CAAC,SAAS,KAAK,wDAAiB,CAAC,SAAS,CAAC,CAAC,CAAC;YAChE,8DAAS,CAAC,SAAS,CAAC,SAAS,GAAG,wDAAiB,CAAC,eAAe,CAAC;YAClE,8DAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACpC,CAAC;IACL,CAAC;IAEO,8BAAM,GAAd,UAAe,SAAqB,EAAE,OAA8B;QAChE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,cAAc,GAAG,IAAI,wDAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACpD,cAAc,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAEO,8BAAM,GAAd,UAAe,KAAc,EAAE,SAAqB,EAAE,OAA8B;QAChF,IAAI,gBAAgB,GAAG,IAAI,gEAAe,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACtE,gBAAgB,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAEO,8BAAM,GAAd,UAAe,KAAc,EAAE,SAAqB,EAAE,OAA8B;QAChF,IAAI,aAAa,GAAG,IAAI,gEAAe,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACnE,aAAa,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IAEO,kCAAU,GAAlB,UAAmB,KAAc,EAAE,SAAqB,EAAE,OAA8B;QACpF,IAAI,kBAAkB,GAAG,IAAI,iEAAU,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACnE,kBAAkB,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IAEO,8BAAM,GAAd,UAAe,KAAc,EAAE,SAAqB,EAAE,OAA8B;QAChF,IAAI,aAAa,GAAG,IAAI,gEAAe,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACnE,aAAa,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IAEO,8BAAM,GAAd,UAAe,KAAK,EAAE,SAA2B,EAAE,OAA8B;QAC7E,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjC,IAAI,kBAAkB,GAAG,IAAI,4DAAW,CAAC,KAAoB,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACvF,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,eAAe,GAAG,IAAI,gEAAe,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;YACrE,eAAe,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC;IACL,CAAC;IAEO,6BAAK,GAAb,UAAc,KAAK,EAAE,SAAqB,EAAE,OAA8B;QACtE,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;YACtB,IAAI,kBAAkB,GAAG,IAAI,4DAAW,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACxE,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,YAAY,GAAG,IAAI,+DAAc,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;YACjE,YAAY,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAEO,gCAAQ,GAAhB,UACI,QAAyB,EAAE,SAAqB,EAAE,OAA8B;QAEhF,IAAI,eAAe,GAAG;YAClB,4BAA4B;YAC5B,mDAAY,CAAC,UAAU,GAAG,8DAAS,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,EAAE,8DAAS,CAAC,SAAS,CAAC,CAAC;YACtF,mBAAmB;YACnB,IAAI,SAAS,GAAG,IAAI,yDAAQ,CAAC,8DAAS,CAAC,SAAS,CAAC,CAAC;YAClD,SAAS,CAAC,cAAc,CAAC,UAAC,cAA6B;gBACnD,IAAI,gBAAgB,GAAG,IAAI,4DAAQ,CAAC,cAAc,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;YAC5E,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QACF,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,eAAe,EAAE,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,8DAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAC,OAAO;gBAC1C,8DAAS,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,8DAAS,CAAC,SAAS,GAAG,IAAI,wDAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC7C,eAAe,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAEO,6BAAK,GAAb,UAAc,SAAiB,EAAE,SAAqB,EAAE,OAA8B;QAClF,IAAI,YAAY,GAAG,IAAI,sDAAK,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAC5D,YAAY,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAEO,kCAAU,GAAlB,UAAmB,KAAc,EAAE,SAAgC,EAAE,OAA8B;QAC/F,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAC,OAAO;YACvB,IAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE;gBAC9D,IAAI,EAAE,WAAW;aACpB,CAAC,CAAC,CAAC;YACJ,SAAS,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EAAE,UAAC,GAAG;YACH,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,iCAAS,GAAjB,UAAkB,MAAW,EAAE,SAAqC,EAAE,OAA8B;QAChG,EAAE,CAAC,CAAC,8DAAS,CAAC,SAAS,CAAC,SAAS,KAAK,wDAAiB,CAAC,aAAa,CAAC,CAAC,CAAC;YACpE,EAAE,CAAC,CAAC,2CAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,gDAAS,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC5C,8DAAS,CAAC,YAAY,CAAC,MAAM,EAAE,UAAC,SAAS;oBACrC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,8DAAS,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,UAAC,SAAS;oBAC5C,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,KAAK,GAAG;gBACR,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,8DAAS,CAAC,SAAS,CAAC,SAAS;aAC7B,CAAC;YACZ,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClB,KAAK,iDAAU,CAAC,gBAAgB;oBAC5B,KAAK,CAAC,QAAQ,GAAG,sBAAsB,CAAC;oBAAC,KAAK,CAAC;gBACnD,KAAK,iDAAU,CAAC,kBAAkB;oBAC9B,KAAK,CAAC,QAAQ,GAAG,4BAA4B,CAAC;oBAAC,KAAK,CAAC;YAC7D,CAAC;YACD,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC;IACL,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;AC/Q4C;AACJ;AACQ;AAC1C,IAAI,cAAc,GAAG;IACxB,IAAI,CAAC,SAAS,GAAG,UAAC,CAAC;QACf,qDAAS,CAAC,GAAG,CAAC,kDAAkD,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChF,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC;QACrB,IAAI,cAAc,GAAG,IAAI,6DAAa,EAAE,CAAC;QACzC,cAAc,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;AACN,CAAC,CAAC;AACF,cAAc,EAAE,CAAC;AACjB,oDAAa,EAAE,CAAC;;;;;;;;;;;;;;;;ACZoB;AAEpC;IAAA;IA0CA,CAAC;IAzCU,WAAM,GAAb,UAAc,KAAK;QACf,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;gBACnB,KAAK,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;gBACzC,KAAK,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,sBAAiB,GAAxB,UAAyB,KAAK;QAC1B,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;;OAOG;IACI,YAAO,GAAd,UAAe,KAAK;QAChB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,gDAAS,CAAC,IAAI,CAAC;QAC1B,CAAC;QACD,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;QACxB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,KAAK,QAAQ;gBACT,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACvB,MAAM,CAAC,gDAAS,CAAC,KAAK,CAAC;gBAC3B,CAAC;YACL;gBACI,MAAM,CAAC,IAAI,CAAC;QACpB,CAAC;IACL,CAAC;IACL,WAAC;AAAD,CAAC","file":"jsstore.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./web_worker/start.ts\");\n","import { BaseHelper } from \"./base_helper\";\nimport { IError } from \"../interfaces\";\nimport { WhereChecker } from \"./where_checker\";\nimport { IdbHelper } from \"./idb_helper\";\nimport { LogHelper } from \"../log_helper\";\nimport { Error_Type, Occurence, WhereQryOption } from \"../enums\";\nimport { Column } from \"../model/column\";\nimport { Util } from \"../util\";\n\nexport class Base extends BaseHelper {\n    _error: IError;\n    _errorOccured: boolean = false;\n    _errorCount = 0;\n    _rowAffected = 0;\n    _onSuccess: (result?) => void;\n    _onError: (err: IError) => void;\n    _objectStore: IDBObjectStore;\n    _query;\n    _whereChecker: WhereChecker;\n    _tableName: string;\n    _isTransaction: boolean;\n    _cursorOpenRequest: IDBRequest;\n\n    protected onErrorOccured(e, customError = false) {\n        ++this._errorCount;\n        if (this._errorCount === 1) {\n            if (this._onError != null) {\n                if (!customError) {\n                    var error = new LogHelper((e as any).target.error.name);\n                    error._message = (e as any).target.error.message;\n                    error.logError();\n                    this._onError(error);\n                }\n                else {\n                    this._onError(e);\n                    e.logError(e);\n                }\n            }\n        }\n    }\n\n    protected onExceptionOccured(ex: DOMException, info) {\n        switch (ex.name) {\n            case 'NotFoundError':\n                var error = new LogHelper(Error_Type.TableNotExist, info);\n                this.onErrorOccured(error.get(), true);\n                break;\n            default: console.error(ex);\n        }\n    }\n\n    protected getColumnInfo(columnName) {\n        var column_info: Column;\n        this.getTable(this._tableName)._columns.every((column) => {\n            if (column._name === columnName) {\n                column_info = column;\n                return false;\n            }\n            return true;\n        });\n        return column_info;\n    }\n\n    protected addGreatAndLessToNotOp() {\n        var where_query = this._query.where,\n            value;\n        if (this.containsNot(where_query)) {\n            var query_keys = Object.keys(where_query);\n            if (query_keys.length === 1) {\n                query_keys.forEach((prop) => {\n                    value = where_query[prop];\n                    if (value['!=']) {\n                        where_query[prop]['>'] = value['!='];\n                        if (where_query['Or'] === undefined) {\n                            where_query['Or'] = {};\n                            where_query['Or'][prop] = {};\n                        }\n                        else if (where_query['Or'][prop] === undefined) {\n                            where_query['Or'][prop] = {};\n                        }\n                        where_query['Or'][prop]['<'] = value['!='];\n                        delete where_query[prop]['!='];\n                    }\n                });\n                this._query.where = where_query;\n            }\n            else {\n                var where_tmp = [];\n                query_keys.forEach((prop) => {\n                    value = where_query[prop];\n                    var tmp_qry = {};\n                    if (value['!=']) {\n                        tmp_qry[prop] = {\n                            '>': value['!='],\n                            'Or': {\n\n                            }\n                        };\n                        tmp_qry[prop]['Or'][prop] = {};\n                        tmp_qry[prop]['Or'][prop]['<'] = value['!='];\n                    }\n                    else {\n                        tmp_qry[prop] = value;\n                    }\n                    where_tmp.push(tmp_qry);\n                });\n                this._query.where = where_tmp;\n            }\n        }\n    }\n\n    protected goToWhereLogic = function () {\n        var column_name = Util.getObjectFirstKey(this._query.where);\n        if (this._query.IgnoreCase === true) {\n            this._query.where = this.makeQryInCaseSensitive(this._query.where);\n        }\n        if (this._objectStore.indexNames.contains(column_name)) {\n            var value = this._query.where[column_name];\n            if (typeof value === 'object') {\n                this._checkFlag = Boolean(\n                    Object.keys(value).length > 1 ||\n                    Object.keys(this._query.where).length > 1\n                );\n                if (this._checkFlag === true) {\n                    this._whereChecker = new WhereChecker(this._query.where);\n                }\n                var key = Util.getObjectFirstKey(value);\n                switch (key) {\n                    case 'Like': {\n                        var filter_values = value.Like.split('%'),\n                            filter_value: string,\n                            occurence: Occurence;\n                        if (filter_values[1]) {\n                            filter_value = filter_values[1];\n                            occurence = filter_values.length > 2 ? Occurence.Any : Occurence.Last;\n                        }\n                        else {\n                            filter_value = filter_values[0];\n                            occurence = Occurence.First;\n                        }\n                        if (occurence === Occurence.First) {\n                            this.getAllCombinationOfWord(filter_value).forEach(function (item) {\n                                this.executeWhereLogic(column_name,\n                                    { '-': { Low: item, High: item + '\\uffff' } },\n                                    '-');\n                            }, this);\n                            delete this._query.where[column_name]['Like'];\n                        }\n                        else {\n                            this.executeLikeLogic(column_name, filter_value, occurence);\n                        }\n                    } break;\n                    case 'In':\n                        this.executeInLogic(column_name, value['In']);\n                        break;\n                    case '-':\n                    case '>':\n                    case '<':\n                    case '>=':\n                    case '<=':\n                        this.executeWhereLogic(column_name, value, key);\n                        break;\n                    case 'Aggregate': break;\n                    default: this.executeWhereLogic(column_name, value);\n                }\n            }\n            else {\n                this._checkFlag = Boolean(Object.keys(this._query.where).length > 1);\n                if (this._checkFlag === true) {\n                    this._whereChecker = new WhereChecker(this._query.where);\n                }\n                this.executeWhereLogic(column_name, value);\n            }\n        }\n        else {\n            this._errorOccured = true;\n            var column: Column = this.getColumnInfo(column_name),\n                error;\n            if (column == null) {\n                error = new LogHelper(Error_Type.ColumnNotExist, { ColumnName: column_name }).get();\n            }\n            else {\n                error = new LogHelper(Error_Type.EnableSearchOff, { ColumnName: column_name }).get();\n            }\n            this.onErrorOccured(error, true);\n        }\n    };\n\n    protected makeQryInCaseSensitive(qry) {\n        var results = [],\n            column_value,\n            key_value;\n        for (var column in qry) {\n            column_value = qry[column];\n            if (typeof column_value === 'object') {\n                for (var key in column_value) {\n                    key_value = column_value[key];\n                    switch (key) {\n                        case WhereQryOption.In:\n                            results = results.concat(this.getAllCombinationOfWord(key_value, true));\n                            break;\n                        case WhereQryOption.Like:\n                            break;\n                        default:\n                            results = results.concat(this.getAllCombinationOfWord(key_value));\n                    }\n                }\n                qry[column]['In'] = results;\n            }\n            else {\n                results = results.concat(this.getAllCombinationOfWord(column_value));\n                qry[column] = {\n                    In: results\n                };\n            }\n        }\n        return qry;\n    }\n}","import { Occurence } from \"../enums\";\nimport { IdbHelper } from \"./idb_helper\";\nimport { Table } from \"../model/table\";\n\nexport class BaseHelper {\n    protected containsNot(whereQry: object) {\n        var status = false,\n            value;\n        Object.keys(whereQry).every((key) => {\n            value = whereQry[key];\n            if (value['!=']) {\n                status = true;\n            }\n            return !status;\n        });\n        return status;\n    }\n\n    protected filterOnOccurence = function (value) {\n        var found = false;\n        value = value.toLowerCase();\n        switch (this._compSymbol) {\n            case Occurence.Any: if (value.indexOf(this._compValue) >= 0) {\n                found = true;\n            } break;\n            case Occurence.First: if (value.indexOf(this._compValue) === 0) {\n                found = true;\n            } break;\n            case Occurence.Last:\n                if (value.lastIndexOf(this._compValue) === value.length - this._compValueLength) {\n                    found = true;\n                } break;\n            default: if (value !== this._compValue) {\n                found = true;\n            }\n        }\n        return found;\n    };\n\n    protected isTableExist(tableName: string) {\n        var is_exist: boolean = false;\n        IdbHelper._activeDb._tables.every((table) => {\n            if (table._name === tableName) {\n                is_exist = true;\n                return false;\n            }\n            return true;\n        });\n        return is_exist;\n    }\n\n    protected getTable(tableName: string) {\n        var current_table: Table;\n        IdbHelper._activeDb._tables.every((table) => {\n            if (table._name === tableName) {\n                current_table = table;\n                return false;\n            }\n            return true;\n        });\n        return current_table;\n    }\n\n    protected getKeyRange(value, op) {\n        var key_range: IDBKeyRange;\n        switch (op) {\n            case '-': key_range = IDBKeyRange.bound(value.Low, value.High, false, false); break;\n            case '>': key_range = IDBKeyRange.lowerBound(value, true); break;\n            case '>=': key_range = IDBKeyRange.lowerBound(value); break;\n            case '<': key_range = IDBKeyRange.upperBound(value, true); break;\n            case '<=': key_range = IDBKeyRange.upperBound(value); break;\n            default: key_range = IDBKeyRange.only(value); break;\n        }\n        return key_range;\n    }\n\n    protected getPrimaryKey(tableName): string {\n        var primary_key: string = (this.getTable(tableName) as Table)._primaryKey;\n        return primary_key ? primary_key : this.getKeyPath(tableName);\n    }\n\n    protected getKeyPath(tableName) {\n        var transaction: IDBTransaction = IdbHelper._dbConnection.transaction([tableName], \"readonly\"),\n            object_store = transaction.objectStore(tableName);\n        return object_store.keyPath as string;\n    }\n\n    protected sortNumberInAsc(values) {\n        values.sort((a, b) => {\n            return a - b;\n        });\n        return values;\n    }\n\n    protected sortNumberInDesc(values) {\n        values.sort((a, b) => {\n            return b - a;\n        });\n        return values;\n    }\n\n    protected sortAlphabetInAsc(values) {\n        values.sort((a, b) => {\n            return a.toLowerCase().localeCompare(b.toLowerCase());\n        });\n        return values;\n    }\n\n    protected sortAlphabetInDesc(values) {\n        values.sort((a, b) => {\n            return b.toLowerCase().localeCompare(a.toLowerCase());\n        });\n        return values;\n    }\n\n    protected getAllCombinationOfWord(word: string, isArray?: boolean) {\n        if (isArray) {\n            var results = [];\n            for (var i = 0, length = word.length; i < length; i++) {\n                results = results.concat(this.getCombination(word[i]));\n            }\n            return results;\n        }\n        else {\n            return this.getCombination(word);\n        }\n    }\n\n    private getCombination(word: string) {\n        var results = [],\n            doAndPushCombination = (subWord: string, chars, index: number) => {\n                if (index === subWord.length) {\n                    results.push(chars.join(\"\"));\n                } else {\n                    var ch = subWord.charAt(index);\n                    chars[index] = ch.toLowerCase();\n                    doAndPushCombination(subWord, chars, index + 1);\n                    chars[index] = ch.toUpperCase();\n                    doAndPushCombination(subWord, chars, index + 1);\n                }\n            };\n        doAndPushCombination(word, [], 0);\n        return results;\n    }\n}","import { Base } from \"./base\";\nimport { IInsert, IError } from \"../interfaces\";\nimport { Error_Type } from \"../enums\";\nimport { LogHelper } from \"../log_helper\";\nimport { IdbHelper } from './idb_helper';\n\nexport class BulkInsert extends Base {\n    _query: IInsert;\n\n    constructor(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\n        super();\n        this._query = query;\n        this._onSuccess = onSuccess;\n        this._onError = onError;\n    }\n\n    execute() {\n        if (!Array.isArray(this._query.values)) {\n            this.onErrorOccured(\n                new LogHelper(Error_Type.NotArray).get(),\n                true\n            );\n        }\n        else if (this.isTableExist(this._query.into) === true) {\n            try {\n                this.bulkinsertData();\n            }\n            catch (ex) {\n                this.onExceptionOccured(ex, { TableName: this._query.into });\n            }\n        }\n        else {\n            var error = new LogHelper(Error_Type.TableNotExist, { TableName: this._query.into });\n            error.throw();\n        }\n    }\n\n    private bulkinsertData() {\n        IdbHelper.createTransaction([this._query.into], () => {\n            this._onSuccess();\n        });\n        this._objectStore = IdbHelper._transaction.objectStore(this._query.into);\n        this._query.values.forEach(function (value) {\n            this._objectStore.add(value);\n        }, this);\n    }\n}\n","import { Base } from \"./base\";\nimport { IError } from \"../interfaces\";\nimport { IdbHelper } from './idb_helper';\nimport { Column } from \"../model/column\";\nimport * as KeyStore from \"../keystore/index\";\n\nexport class Clear extends Base {\n    constructor(tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\n        super();\n        this._query = tableName;\n        this._onSuccess = onSuccess;\n        this._onError = onError;\n    }\n\n    execute() {\n        IdbHelper.createTransaction([this._query], () => {\n            if (this._errorOccured === false) {\n                this._onSuccess();\n            }\n        });\n        var clear_request: IDBRequest = IdbHelper._transaction.objectStore(this._query).clear();\n        clear_request.onsuccess = (e) => {\n            var current_table = this.getTable(this._query);\n            current_table._columns.forEach((column: Column) => {\n                if (column._autoIncrement) {\n                    KeyStore.set(`JsStore_${IdbHelper._activeDb._name}_${this._query}_${column._name}_Value`, 0);\n                }\n            });\n        };\n\n        clear_request.onerror = (e) => {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        };\n    }\n}","import { Base } from \"../base\";\n\nexport class BaseCount extends Base {\n    _resultCount: number = 0;\n    _skipRecord;\n    _limitRecord;\n    _checkFlag = false;\n}\n","import { NotWhere } from \"./not_where\";\n\nexport class In extends NotWhere {\n    private executeInLogic(column, values) {\n        var cursor: IDBCursorWithValue,\n            column_store = this._objectStore.index(column),\n            cursor_request,\n            onCursorError = function (e) {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            }.bind(this);\n        if (this._checkFlag) {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            if (this._whereChecker.check(cursor.value)) {\n                                ++this._resultCount;\n                            }\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n        else {\n            if (this._objectStore.count) {\n                for (var i = 0, length = values.length; i < length; i++) {\n                    if (!this._errorOccured) {\n                        cursor_request = column_store.count(IDBKeyRange.only(values[i]));\n                        cursor_request.onsuccess = function (e) {\n                            this._resultCount += e.target.result;\n                            if (i + 1 === length) {\n                                this.onQueryFinished();\n                            }\n                        }.bind(this);\n                        cursor_request.onerror = onCursorError;\n                    }\n                }\n            }\n            else {\n                for (var i = 0, length = values.length; i < length; i++) {\n                    if (!this._errorOccured) {\n                        cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                        cursor_request.onsuccess = function (e) {\n                            cursor = e.target.result;\n                            if (cursor) {\n                                ++this._resultCount;\n                                cursor.continue();\n                            }\n                            else if (i + 1 === length) {\n                                this.onQueryFinished();\n                            }\n                        }.bind(this);\n                        cursor_request.onerror = onCursorError;\n                    }\n                }\n            }\n        }\n    }\n}","export * from './instance';","import { Where } from \"./where\";\nimport { ICount, IError } from \"../../interfaces\";\nimport * as Select from '../select/index';\nimport { LogHelper } from \"../../log_helper\";\nimport { Error_Type } from \"../../enums\";\nimport { IdbHelper } from '../idb_helper';\n\nexport class Instance extends Where {\n\n    constructor(query: ICount, onSuccess: (noOfRecord: number) => void, onError: (error: IError) => void) {\n        super();\n        this._onError = onError;\n        this._onSuccess = onSuccess;\n        this._query = query;\n    }\n\n    execute() {\n        if (this.isTableExist(this._query.from)) {\n            try {\n                if (this._query.where !== undefined) {\n                    this.addGreatAndLessToNotOp();\n                    if (this._query.where.Or || Array.isArray(this._query.where)) {\n                        var select_object = new Select.Instance(this._query as any,\n                            (results) => {\n                                this._resultCount = results.length;\n                                this.onTransactionCompleted();\n                            }, this._onError);\n                        select_object.execute();\n                    }\n                    else {\n                        this.initTransaction();\n                        this.goToWhereLogic();\n                    }\n                }\n                else {\n                    this.initTransaction();\n                    this.executeWhereUndefinedLogic();\n                }\n            }\n            catch (ex) {\n                this.onExceptionOccured(ex, { TableName: this._query.from });\n            }\n        }\n        else {\n            this._errorOccured = true;\n            this.onErrorOccured(\n                new LogHelper(Error_Type.TableNotExist, { TableName: this._query.From }).get(),\n                true\n            );\n        }\n    }\n\n    private initTransaction() {\n        IdbHelper.createTransaction([this._query.From], this.onTransactionCompleted.bind(this), 'readonly');\n        this._objectStore = IdbHelper._transaction.objectStore(this._query.From);\n    }\n\n    private onQueryFinished() {\n        if (this._isTransaction === true) {\n            this.onTransactionCompleted();\n        }\n    }\n\n    private onTransactionCompleted() {\n        if (this._errorOccured === false) {\n            this._onSuccess(this._resultCount);\n        }\n    }\n}","import { In } from \"./in_logic\";\nimport { Occurence } from \"../../enums\";\n\nexport class Like extends In {\n    _compSymbol: Occurence;\n    _compValue;\n    _compValueLength: number;\n\n    protected executeLikeLogic(column, value, symbol: Occurence) {\n        var cursor: IDBCursorWithValue;\n        this._compValue = (value as string).toLowerCase();\n        this._compValueLength = this._compValue.length;\n        this._compSymbol = symbol;\n        var cursor_request = this._objectStore.index(column).openCursor();\n        cursor_request.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n        if (this._checkFlag) {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key) &&\n                        this._whereChecker.check(cursor.value)) {\n                        ++this._resultCount;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key)) {\n                        ++this._resultCount;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n}","import { BaseCount } from \"./base_count\";\n\nexport class NotWhere extends BaseCount {\n    protected executeWhereUndefinedLogic() {\n        if (this._objectStore.count) {\n            var count_request = this._objectStore.count();\n            count_request.onsuccess = function () {\n                this._resultCount = count_request.result;\n                this.onQueryFinished();\n            }.bind(this);\n            count_request.onerror = function (e) {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            }.bind(this);\n        }\n        else {\n            var cursor,\n                cursor_request = this._objectStore.openCursor();\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    ++this._resultCount;\n                    (cursor as any).continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n            cursor_request.onerror = function (e) {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            }.bind(this);\n        }\n    }\n}\n","import { Like } from \"./like_logic\";\n\nexport class Where extends Like {\n    private executeWhereLogic(column, value, op) {\n        value = op ? value[op] : value;\n        var cursor_request,\n            cursor: IDBCursorWithValue;\n        if (this._checkFlag) {\n            cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this._whereChecker.check(cursor.value)) {\n                        ++this._resultCount;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            if (this._objectStore.count) {\n                cursor_request = this._objectStore.index(column).count(this.getKeyRange(value, op));\n                cursor_request.onsuccess = function () {\n                    this._resultCount = cursor_request.result;\n                    this.onQueryFinished();\n                }.bind(this);\n            }\n            else {\n                cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\n                cursor_request.onsuccess = function (e) {\n                    cursor = e.target.result;\n                    if (cursor) {\n                        ++this._resultCount;\n                        cursor.continue();\n                    }\n                    else {\n                        this.onQueryFinished();\n                    }\n                }.bind(this);\n            }\n        }\n        cursor_request.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n    }\n}","import { TableHelper } from \"../model/table_helper\";\r\nimport { IError } from \"../interfaces\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\nimport { Connection_Status, Error_Type } from \"../enums\";\r\nimport { Column } from \"../model/column\";\r\nimport * as KeyStore from \"../keystore/index\";\r\n\r\nexport class CreateDb {\r\n    _dbName: string;\r\n    constructor(tablesMetaData: TableHelper[], onSuccess: (listOf) => void, onError: (err: IError) => void) {\r\n        this._dbName = IdbHelper._activeDb._name;\r\n        var table_created_list = [],\r\n            db_request = indexedDB.open(this._dbName, IdbHelper._dbVersion);\r\n\r\n        db_request.onerror = (event) => {\r\n            if (onError != null) {\r\n                onError((event as any).target.error);\r\n            }\r\n        };\r\n\r\n        db_request.onsuccess = (event) => {\r\n            IdbHelper._dbStatus.ConStatus = Connection_Status.Connected;\r\n            IdbHelper._dbConnection = db_request.result;\r\n            (IdbHelper._dbConnection as any).onclose = (e) => {\r\n                IdbHelper.callDbDroppedByBrowser();\r\n                IdbHelper.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n            };\r\n\r\n            IdbHelper._dbConnection.onversionchange = (e) => {\r\n                if (e.newVersion === null) { // An attempt is made to delete the db\r\n                    (e.target as any).close(); // Manually close our connection to the db\r\n                    IdbHelper.callDbDroppedByBrowser(true);\r\n                    IdbHelper.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                }\r\n            };\r\n\r\n            IdbHelper._dbConnection.onerror = (e) => {\r\n                IdbHelper._dbStatus.LastError = (\"Error occured in connection :\" + (e.target as any).result) as any;\r\n            };\r\n\r\n            IdbHelper._dbConnection.onabort = (e) => {\r\n                IdbHelper._dbStatus = {\r\n                    ConStatus: Connection_Status.Closed,\r\n                    LastError: Error_Type.ConnectionAborted\r\n                };\r\n            };\r\n\r\n            // save in database list\r\n            this.saveDbName();\r\n            if (onSuccess != null) {\r\n                onSuccess(table_created_list);\r\n            }\r\n        };\r\n\r\n        db_request.onupgradeneeded = (event) => {\r\n            var db_connection = (event as any).target.result;\r\n            var createObjectStore = (item: TableHelper, index) => {\r\n                try {\r\n                    if (item._primaryKey.length > 0) {\r\n                        IdbHelper._activeDb._tables[index]._primaryKey = item._primaryKey;\r\n                        var store = db_connection.createObjectStore(item._name, {\r\n                            keyPath: item._primaryKey\r\n                        });\r\n                        item._columns.forEach((column: Column) => {\r\n                            if (column._enableSearch === true) {\r\n                                var options = column._primaryKey ? { unique: true } : { unique: column._unique };\r\n                                options['multiEntry'] = column._multiEntry;\r\n                                store.createIndex(column._name, column._name, options);\r\n                                if (column._autoIncrement) {\r\n                                    KeyStore.set(`JsStore_${this._dbName}_${item._name}_${column._name}_Value`, 0);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        var store = db_connection.createObjectStore(item._name, {\r\n                            autoIncrement: true\r\n                        });\r\n                        item._columns.forEach((column: Column) => {\r\n                            var options = { unique: column._unique, multiEntry: column._multiEntry };\r\n                            store.createIndex(column._name, column._name, options);\r\n                            if (column._autoIncrement) {\r\n                                KeyStore.set(`JsStore_${this._dbName}_${item._name}_${column._name}_Value`, 0);\r\n                            }\r\n                        });\r\n                    }\r\n                    table_created_list.push(item._name);\r\n                    // setting the table version\r\n                    KeyStore.set(`JsStore_${this._dbName}_${item._name}_Version`, item._version);\r\n                }\r\n                catch (e) {\r\n                    console.error(e);\r\n                }\r\n            };\r\n            tablesMetaData.forEach((item: TableHelper, index) => {\r\n                if (item._requireDelete) {\r\n                    // Delete the old datastore.    \r\n                    if (db_connection.objectStoreNames.contains(item._name)) {\r\n                        db_connection.deleteObjectStore(item._name);\r\n                    }\r\n                    createObjectStore(item, index);\r\n                }\r\n                else if (item._requireCreation) {\r\n                    createObjectStore(item, index);\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n    private saveDbName() {\r\n        IdbHelper.getDbList((result) => {\r\n            if (result.indexOf(this._dbName) < 0) {\r\n                result.push(this._dbName);\r\n                IdbHelper.setDbList(result);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { IError } from \"../interfaces\";\r\nimport * as KeyStore from \"../keystore/index\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\nimport { Table } from \"../model/table\";\r\nimport { Column } from \"../model/column\";\r\nimport { Connection_Status, Error_Type } from \"../enums\";\r\nimport { LogHelper } from \"../log_helper\";\r\n\r\nexport class DropDb {\r\n    _onSuccess: () => void;\r\n    _onError: (err: IError) => void;\r\n    _dbName: string;\r\n    constructor(onSuccess: () => void, onError: (err: IError) => void) {\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n        this._dbName = IdbHelper._activeDb._name;\r\n    }\r\n\r\n    deleteMetaData() {\r\n        KeyStore.remove(`JsStore_${this._dbName}_Db_Version`);\r\n        IdbHelper._activeDb._tables.forEach((table: Table) => {\r\n            KeyStore.remove(`JsStore_${this._dbName}_${table._name}_Version`);\r\n            table._columns.forEach(function (column: Column) {\r\n                if (column._autoIncrement) {\r\n                    KeyStore.remove(`JsStore_${this._dbName}_${table._name}_${column._name}_Value`);\r\n                }\r\n            });\r\n        });\r\n        // remove from database_list \r\n        IdbHelper.getDbList((result) => {\r\n            result.splice(result.indexOf(this._dbName), 1);\r\n            IdbHelper.setDbList(result);\r\n        });\r\n        KeyStore.remove(`JsStore_${this._dbName}_Schema`, this._onSuccess);\r\n    }\r\n\r\n    deleteDb() {\r\n        setTimeout(() => {\r\n            var db_drop_request = indexedDB.deleteDatabase(this._dbName);\r\n            db_drop_request.onblocked = () => {\r\n                if (this._onError != null) {\r\n                    this._onError(new LogHelper(Error_Type.DbBlocked).get());\r\n                }\r\n            };\r\n            db_drop_request.onerror = (e) => {\r\n                if (this._onError != null) {\r\n                    this._onError((event as any).target.error);\r\n                }\r\n            };\r\n            db_drop_request.onsuccess = () => {\r\n                IdbHelper._dbStatus.ConStatus = Connection_Status.Closed;\r\n                this.deleteMetaData();\r\n            };\r\n        }, 100);\r\n    }\r\n}\r\n","import { Connection_Status, Error_Type } from \"../enums\";\r\nimport * as KeyStore from \"../keystore/index\";\r\nimport { IDbStatus } from \"../interfaces\";\r\nimport { DataBase } from \"../model/database\";\r\nimport { DropDb } from \"./drop_db\";\r\n\r\nexport class IdbHelper {\r\n\r\n    static _onDbDroppedByBrowser: () => void;\r\n    static _transaction: IDBTransaction = null;\r\n    static _isDbDeletedByBrowser: boolean;\r\n    static _dbConnection: IDBDatabase;\r\n    static _activeDb: DataBase;\r\n    static _dbVersion: number = 0;\r\n    static _dbStatus: IDbStatus = {\r\n        ConStatus: Connection_Status.NotStarted,\r\n        LastError: null\r\n    };\r\n\r\n    static callDbDroppedByBrowser(deleteMetaData?: boolean) {\r\n        if (this._dbStatus.ConStatus === Connection_Status.Connected) {\r\n            this._isDbDeletedByBrowser = true;\r\n            if (deleteMetaData === true) {\r\n                var drop_db_object = new DropDb(this._onDbDroppedByBrowser, null);\r\n                drop_db_object.deleteMetaData();\r\n            }\r\n        }\r\n    }\r\n\r\n    static createTransaction(tableNames, callBack: () => void, mode?) {\r\n        if (this._transaction === null) {\r\n            mode = mode ? mode : \"readwrite\";\r\n            this._transaction = this._dbConnection.transaction(tableNames, mode);\r\n            this._transaction.oncomplete = () => {\r\n                this._transaction = null;\r\n                callBack();\r\n            };\r\n            (this._transaction as any).ontimeout = () => {\r\n                this._transaction = null;\r\n                console.error('transaction timed out');\r\n            };\r\n        }\r\n    }\r\n\r\n    static setDbList(list: string[]) {\r\n        KeyStore.set('database_list', list);\r\n    }\r\n\r\n    static updateDbStatus(status: Connection_Status, err?: Error_Type) {\r\n        if (err === undefined) {\r\n            this._dbStatus.ConStatus = status;\r\n        }\r\n        else {\r\n            this._dbStatus = {\r\n                ConStatus: status,\r\n                LastError: err\r\n            };\r\n        }\r\n    }\r\n\r\n    static getDbList(callback: (dbList: string[]) => void) {\r\n        KeyStore.get('Database_List', (result) => {\r\n            result = result == null ? [] : result;\r\n            callback(result);\r\n        });\r\n    }\r\n\r\n    static getDbVersion(dbName: string, callback: (version: number) => void) {\r\n        KeyStore.get(`JsStore_${dbName}_Db_Version`, function (dbVersion) {\r\n            callback.call(this, Number(dbVersion));\r\n        }.bind(this));\r\n    }\r\n\r\n    static getDbSchema(dbName: string, callback: (any) => void) {\r\n        KeyStore.get(`JsStore_${dbName}_Schema`, (result) => {\r\n            if (result) {\r\n                if (result._name) {\r\n                    callback(result);\r\n                }\r\n                else {\r\n                    var db_schema = new DataBase(result);\r\n                    KeyStore.set(`JsStore_${dbName}_Schema`, db_schema);\r\n                    callback(db_schema);\r\n                }\r\n            }\r\n            else {\r\n                callback(result);\r\n            }\r\n        });\r\n    }\r\n}","export * from './instance';","import { Base } from \"../base\";\r\nimport { IInsert, IError } from \"../../interfaces\";\r\nimport { Table } from \"../../model/table\";\r\nimport { Error_Type } from \"../../enums\";\r\nimport { LogHelper } from \"../../log_helper\";\r\nimport { ValuesChecker } from \"./values_checker\";\r\nimport { IdbHelper } from '../idb_helper';\r\n\r\nexport class Instance extends Base {\r\n    _valuesAffected = [];\r\n    _query: IInsert;\r\n    _table: Table;\r\n\r\n    constructor(query: IInsert, onSuccess: (rowsInserted: number) => void, onError: (err: IError) => void) {\r\n        super();\r\n        this._onError = onError;\r\n        this._query = query;\r\n        this._onSuccess = onSuccess;\r\n        this._tableName = this._query.into;\r\n    }\r\n\r\n    execute() {\r\n        var table = this.getTable(this._tableName);\r\n        if (!Array.isArray(this._query.values)) {\r\n            this.onErrorOccured(\r\n                new LogHelper(Error_Type.NotArray).get(),\r\n                true\r\n            );\r\n        }\r\n        else if (table) {\r\n            try {\r\n                if (this._query.skipDataCheck) {\r\n                    this.insertData(this._query.values);\r\n                }\r\n                else {\r\n                    var value_checker_obj = new ValuesChecker(table, this._query.values);\r\n                    value_checker_obj.checkAndModifyValues(function (isError) {\r\n                        if (isError) {\r\n                            this.onErrorOccured(value_checker_obj._error, true);\r\n                        }\r\n                        else {\r\n                            this.insertData(value_checker_obj._values);\r\n                        }\r\n                        value_checker_obj = undefined;\r\n                    }.bind(this));\r\n                }\r\n                // remove values from query\r\n                this._query.values = undefined;\r\n            }\r\n            catch (ex) {\r\n                this.onExceptionOccured(ex, { TableName: this._tableName });\r\n            }\r\n        }\r\n        else {\r\n            new LogHelper(Error_Type.TableNotExist, { TableName: this._tableName }).throw();\r\n        }\r\n    }\r\n\r\n    private onTransactionCompleted() {\r\n        if (this._errorOccured === false) {\r\n            this._onSuccess(this._query.return ? this._valuesAffected : this._rowAffected);\r\n        }\r\n    }\r\n\r\n    private onQueryFinished() {\r\n        if (this._isTransaction === true) {\r\n            this.onTransactionCompleted();\r\n        }\r\n    }\r\n\r\n    private insertData(values) {\r\n        var value_index = 0,\r\n            insertDataIntoTable: (value: object) => void;\r\n        if (this._query.return) {\r\n            insertDataIntoTable = function (value) {\r\n                if (value) {\r\n                    var add_result = object_store.add(value);\r\n                    add_result.onerror = this.onErrorOccured.bind(this);\r\n                    add_result.onsuccess = function (e) {\r\n                        this._valuesAffected.push(value);\r\n                        insertDataIntoTable.call(this, values[value_index++]);\r\n                    }.bind(this);\r\n                }\r\n                else {\r\n                    this.onQueryFinished();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            insertDataIntoTable = function (value) {\r\n                if (value) {\r\n                    var add_result = object_store.add(value);\r\n                    add_result.onerror = this.onErrorOccured.bind(this);\r\n                    add_result.onsuccess = function (e) {\r\n                        ++this._rowAffected;\r\n                        insertDataIntoTable.call(this, values[value_index++]);\r\n                    }.bind(this);\r\n                }\r\n                else {\r\n                    this.onQueryFinished();\r\n                }\r\n            };\r\n        }\r\n        IdbHelper.createTransaction([this._query.into], this.onTransactionCompleted.bind(this));\r\n        var object_store = IdbHelper._transaction.objectStore(this._query.into);\r\n        insertDataIntoTable.call(this, values[value_index++]);\r\n    }\r\n}","import { Table } from \"../../model/table\";\r\nimport { IError } from \"../../interfaces\";\r\nimport { Column } from \"../../model/column\";\r\nimport { Util } from \"../../util\";\r\nimport { Error_Type } from \"../../enums\";\r\nimport { LogHelper } from \"../../log_helper\";\r\n\r\nexport class ValueChecker {\r\n    _table: Table;\r\n    _value: object;\r\n    _errorOccured: boolean = false;\r\n    _error: IError;\r\n    _autoIncrementValue = {};\r\n\r\n    constructor(table: Table, autoIncrementValue) {\r\n        this._table = table;\r\n        this._autoIncrementValue = autoIncrementValue;\r\n    }\r\n\r\n    public checkAndModifyValue(value) {\r\n        this._value = value;\r\n        this._table._columns.every(function (column) {\r\n            this.checkAndModifyColumnValue(column, value);\r\n            return !this._errorOccured;\r\n        }, this);\r\n        return this._errorOccured;\r\n    }\r\n\r\n    private checkNotNullAndDataType(column: Column) {\r\n        // check not null schema\r\n        if (column._notNull && Util.isNull(this._value[column._name])) {\r\n            this.onValidationError(Error_Type.NullValue, { ColumnName: column._name });\r\n        }\r\n        // check datatype\r\n        else if (column._dataType && !Util.isNull(this._value[column._name]) &&\r\n            Util.getType(this._value[column._name]) !== column._dataType) {\r\n            this.onValidationError(Error_Type.BadDataType, { ColumnName: column._name });\r\n        }\r\n    }\r\n\r\n    private checkAndModifyColumnValue(column: Column) {\r\n        // check auto increment scheme\r\n        if (column._autoIncrement) {\r\n            this._value[column._name] = ++this._autoIncrementValue[column._name];\r\n        }\r\n        // check Default Schema\r\n        else if (column._default && Util.isNull(this._value[column._name])) {\r\n            this._value[column._name] = column._default;\r\n        }\r\n        this.checkNotNullAndDataType(column);\r\n    }\r\n\r\n    private onValidationError(error: Error_Type, details: any) {\r\n        this._errorOccured = true;\r\n        this._error = new LogHelper(error, details).get();\r\n    }\r\n}","import { Table } from \"../../model/table\";\r\nimport { IError } from \"../../interfaces\";\r\nimport { ValueChecker } from \"./value_checker\";\r\nimport { IdbHelper } from \"../../index\";\r\nimport * as KeyStore from \"../../keystore/index\";\r\n\r\nexport class ValuesChecker {\r\n    _table: Table;\r\n    _values: any[];\r\n    _error: IError;\r\n    _onFinish: (isError: boolean) => void;\r\n    _valueCheckerObj: ValueChecker;\r\n\r\n    constructor(table: Table, values: any[]) {\r\n        this._table = table;\r\n        this._values = values;\r\n    }\r\n\r\n    public checkAndModifyValues(onFinish: (isError: boolean) => void) {\r\n        this._onFinish = onFinish;\r\n        var auto_inc_columns = this._table._columns.filter((col) => {\r\n            return col._autoIncrement;\r\n        });\r\n        var auto_inc_values = {};\r\n        auto_inc_columns.forEach((column) => {\r\n            var auto_increment_key = `JsStore_${IdbHelper._activeDb._name}_${this._table._name}_${column._name}_Value`;\r\n            KeyStore.get(auto_increment_key, (val) => {\r\n                auto_inc_values[column._name] = val;\r\n            });\r\n        });\r\n        KeyStore.get('dumy_key', (val) => {\r\n            this._valueCheckerObj = new ValueChecker(this._table, auto_inc_values);\r\n            this.startChecking();\r\n        }, (err) => {\r\n            this._error = err as any;\r\n            this._onFinish(true);\r\n        });\r\n\r\n    }\r\n\r\n    private startChecking() {\r\n        var is_error: boolean = false;\r\n        this._values.every(function (item) {\r\n            is_error = this._valueCheckerObj.checkAndModifyValue(item);\r\n            return !is_error;\r\n        }, this);\r\n        if (is_error) {\r\n            this._error = this._valueCheckerObj._error;\r\n            this._onFinish(true);\r\n        }\r\n        else {\r\n            for (var prop in this._valueCheckerObj._autoIncrementValue) {\r\n                var auto_increment_key = `JsStore_${IdbHelper._activeDb._name}_${this._table._name}_${prop}_Value`;\r\n                KeyStore.set(auto_increment_key, this._valueCheckerObj._autoIncrementValue[prop]);\r\n            }\r\n            KeyStore.get('dumy_key', (val) => {\r\n                this._onFinish(false);\r\n            },\r\n                (err) => {\r\n                    this._error = err as any;\r\n                    this._onFinish(true);\r\n                });\r\n        }\r\n    }\r\n}","import { IdbHelper } from \"./idb_helper\";\r\nimport { IError } from \"../interfaces\";\r\nimport { Connection_Status, Error_Type } from \"../enums\";\r\nimport { LogHelper } from \"../log_helper\";\r\nimport { Table } from \"../model/table\";\r\n\r\nexport class OpenDb {\r\n    _dbName: string;\r\n    _onSuccess: () => void;\r\n    _onError: (err: IError) => void;\r\n\r\n    constructor(onSuccess: () => void, onError: (err: IError) => void) {\r\n        this._dbName = IdbHelper._activeDb._name;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n    }\r\n\r\n    execute() {\r\n        if (this._dbName.length > 0) {\r\n            var db_request = indexedDB.open(this._dbName, IdbHelper._dbVersion);\r\n\r\n            db_request.onerror = (event) => {\r\n                if (this._onError != null) {\r\n                    this._onError((event as any).target.error);\r\n                }\r\n            };\r\n\r\n            db_request.onsuccess = (event) => {\r\n                IdbHelper._dbStatus.ConStatus = Connection_Status.Connected;\r\n                IdbHelper._dbConnection = db_request.result;\r\n                (IdbHelper._dbConnection as any).onclose = (e) => {\r\n                    IdbHelper.callDbDroppedByBrowser();\r\n                    IdbHelper.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                };\r\n\r\n                IdbHelper._dbConnection.onversionchange = (e) => {\r\n                    if (e.newVersion === null) { // An attempt is made to delete the db\r\n                        if (e.newVersion === null) { // An attempt is made to delete the db\r\n                            (e.target as any).close(); // Manually close our connection to the db\r\n                            IdbHelper.callDbDroppedByBrowser(true);\r\n                            IdbHelper.updateDbStatus(Connection_Status.Closed, Error_Type.ConnectionClosed);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                IdbHelper._dbConnection.onerror = (e) => {\r\n                    IdbHelper._dbStatus.LastError = (\"Error occured in connection :\" + (e.target as any).result) as any;\r\n                };\r\n\r\n                IdbHelper._dbConnection.onabort = (e) => {\r\n                    IdbHelper._dbStatus.ConStatus = Connection_Status.Closed;\r\n                    IdbHelper._dbStatus.LastError = Error_Type.ConnectionAborted;\r\n                };\r\n                if (this._onSuccess != null) {\r\n                    this._onSuccess();\r\n                }\r\n                this.setPrimaryKey();\r\n            };\r\n        }\r\n        else {\r\n            var error = new LogHelper(Error_Type.UndefinedDbName);\r\n            error.throw();\r\n        }\r\n    }\r\n\r\n    private setPrimaryKey() {\r\n        IdbHelper._activeDb._tables.forEach((table: Table, index) => {\r\n            table._columns.every(item => {\r\n                IdbHelper._activeDb._tables[index]._primaryKey = item._primaryKey ? item._name : \"\";\r\n                return !item._primaryKey;\r\n            });\r\n        });\r\n    }\r\n}","import { Base } from \"../base\";\n\nexport class BaseRemove extends Base {\n    _checkFlag = false;\n\n    protected onQueryFinished()\n    {\n        // ff\n    }\n}\n","import { NotWhere } from \"./not_where\";\n\nexport class In extends NotWhere {\n    private executeInLogic(column, values) {\n        var cursor: IDBCursorWithValue,\n            cursor_request,\n            onCursorError = function (e) {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            }.bind(this);\n        if (this._checkFlag) {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = this._objectStore.index(column).\n                        openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            if (this._whereChecker.check(cursor.value)) {\n                                cursor.delete();\n                                ++this._rowAffected;\n                            }\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n        else {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = this._objectStore.index(column).\n                        openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            cursor.delete();\n                            ++this._rowAffected;\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n    }\n}","export * from './instance';","import { Where } from \"./where\";\nimport { IRemove, IError } from \"../../interfaces\";\nimport { IdbHelper } from \"../idb_helper\";\nimport { Util } from \"../../util\";\nimport * as Select from '../select/index';\n\nexport class Instance extends Where {\n    _isOr: boolean;\n\n    constructor(\n        query: IRemove, onSuccess: (recordRemoved: number) => void,\n        onError: (err: IError) => void\n    ) {\n        super();\n        this._query = query;\n        this._onSuccess = onSuccess;\n        this._onError = onError;\n    }\n\n    execute() {\n        try {\n            if (this._query.where !== undefined) {\n                this.addGreatAndLessToNotOp();\n                this.initTransaction();\n                if (Array.isArray(this._query.where)) {\n                    this.processWhereArrayQry();\n                }\n                else {\n                    this.processWhere();\n                }\n            }\n            else {\n                this.initTransaction();\n                this.executeWhereUndefinedLogic();\n            }\n\n        }\n        catch (ex) {\n            this._errorOccured = true;\n            this.onExceptionOccured(ex, { TableName: this._query.from });\n        }\n    }\n\n    private processWhereArrayQry() {\n        var select_object = new Select.Instance(this._query as any,\n            function (results) {\n                var key_list = [],\n                    p_key = this.getPrimaryKey(this._query.from);\n                results.forEach((item) => {\n                    key_list.push(item[p_key]);\n                });\n                results = null;\n                this._query.where = {};\n                this._query.where[p_key] = { In: key_list };\n                this.processWhere(false);\n            }.bind(this), this._onError);\n        select_object.execute();\n    }\n\n    private processWhere() {\n        if (this._query.where.or) {\n            this.processOrLogic();\n        }\n        this.goToWhereLogic();\n    }\n\n    private initTransaction() {\n        IdbHelper.createTransaction([this._query.from], this.onTransactionCompleted.bind(this));\n        this._objectStore = IdbHelper._transaction.objectStore(this._query.from);\n    }\n\n    private onTransactionCompleted() {\n        if (this._errorOccured === false) {\n            this._onSuccess(this._rowAffected);\n        }\n    }\n\n    protected onQueryFinished() {\n        if (this._isOr === true) {\n            this.orQuerySuccess();\n        }\n        else if (this._isTransaction === true) {\n            this.onTransactionCompleted();\n        }\n    }\n\n    private orQuerySuccess() {\n        var key = Util.getObjectFirstKey((this as any)._orInfo.OrQuery);\n        if (key != null) {\n            var where = {};\n            where[key] = (this as any)._orInfo.OrQuery[key];\n            delete (this as any)._orInfo.OrQuery[key];\n            this._query.where = where;\n            this.goToWhereLogic();\n        }\n        else {\n            this._isOr = true;\n        }\n    }\n\n    private processOrLogic() {\n        this._isOr = true;\n        (this as any)._orInfo = {\n            OrQuery: this._query.where.Or\n        };\n\n        // free or memory\n        delete this._query.where.Or;\n    }\n}","import { In } from \"./in\";\nimport { Occurence } from \"../../enums\";\n\nexport class Like extends In {\n    _compSymbol: Occurence;\n    _compValue;\n    _compValueLength: number;\n\n    protected executeLikeLogic(column, value, symbol: Occurence) {\n        var cursor: IDBCursorWithValue;\n        this._compValue = (value as string).toLowerCase();\n        this._compValueLength = this._compValue.length;\n        this._compSymbol = symbol;\n        var cursor_request = this._objectStore.index(column).openCursor();\n        cursor_request.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n\n        if (this._checkFlag) {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key) &&\n                        this._whereChecker.check(cursor.value)) {\n                        cursor.delete();\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key)) {\n                        cursor.delete();\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n}","import { BaseRemove } from \"./base_remove\";\n\nexport class NotWhere extends BaseRemove {\n    protected executeWhereUndefinedLogic() {\n        var cursor,\n            cursor_request = this._objectStore.openCursor();\n        cursor_request.onsuccess = (e) => {\n            cursor = (e as any).target.result;\n            if (cursor) {\n                cursor.delete();\n                ++this._rowAffected;\n                (cursor as any).continue();\n            }\n            else {\n                this.onQueryFinished();\n            }\n        };\n        cursor_request.onerror = (e) => {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        };\n    }\n}\n","import { Like } from \"./like\";\n\nexport class Where extends Like {\n    private executeWhereLogic(column, value, op) {\n        var cursor: IDBCursorWithValue,\n            cursor_request;\n        value = op ? value[op] : value;\n        cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\n        if (this._checkFlag) {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this._whereChecker.check(cursor.value)) {\n                        cursor.delete();\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    cursor.delete();\n                    ++this._rowAffected;\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n\n        cursor_request.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n    }\n}\n","import { Base } from \"../base\";\n\nexport class BaseSelect extends Base {\n    _results = [];\n    _sorted: boolean = false;\n    _skipRecord;\n    _limitRecord;\n    _checkFlag = false;\n    _isOr: boolean;\n    _isArrayQry: boolean;\n    _onWhereArrayQrySuccess: () => void;\n\n    protected removeDuplicates() {\n        var datas = this._results;\n        // free results memory\n        this._results = undefined;\n        var key = this.getPrimaryKey(this._query.from);\n        var lookupObject = {};\n        for (var i in datas) {\n            lookupObject[datas[i][key]] = datas[i];\n        }\n        // free datas memory\n        datas = [];\n        for (i in lookupObject) {\n            datas.push(lookupObject[i]);\n        }\n        this._results = datas;\n    }\n    \n    protected onQueryFinished()\n    {\n        // ff\n    }\n}","import { Where } from \"./where\";\n\nexport class GroupByHelper extends Where {\n    constructor() {\n        super();\n    }\n\n    protected processGroupBy() {\n        var grp_qry = this._query.GroupBy,\n            datas = this._results,\n            look_up_obj = {};\n        // free results memory\n        this._results = this._query.GroupBy = undefined;\n        if (typeof grp_qry === 'string') {\n            for (var i in datas) {\n                look_up_obj[datas[i][grp_qry]] = datas[i];\n            }\n        }\n        else {\n            var obj_key;\n            for (var i in datas) {\n                obj_key = \"\";\n                for (var column in grp_qry) {\n                    obj_key += datas[i][grp_qry[column]];\n                }\n                look_up_obj[obj_key] = datas[i];\n            }\n        }\n        // free datas memory\n        datas = [];\n        for (i in look_up_obj) {\n            datas.push(look_up_obj[i]);\n        }\n        this._results = datas;\n    }\n\n    protected executeAggregateGroupBy() {\n        var grp_qry = this._query.GroupBy,\n            datas = this._results,\n            look_up_obj = {},\n            // assign aggregate and free aggregate memory\n            aggregate_qry = this._query.Aggregate;\n        this._query.Aggregate = undefined;\n        // free results memory\n        this._results = undefined;\n\n        var index, obj_Key, value, aggr_column;\n        var calculateAggregate = function () {\n            for (var prop in aggregate_qry) {\n                switch (prop) {\n                    case 'Count':\n                        var getCount = function () {\n                            value = look_up_obj[obj_Key];\n                            // get old value\n                            value = value ? value[\"Count(\" + aggr_column + \")\"] : 0;\n                            // add with old value if data exist\n                            value += datas[index][aggr_column] ? 1 : 0;\n                            return value;\n                        };\n                        if (typeof aggregate_qry[prop] === 'string') {\n                            aggr_column = aggregate_qry[prop];\n                            datas[index][\"Count(\" + aggr_column + \")\"] = getCount();\n                        }\n                        else if (Array.isArray(aggregate_qry[prop])) {\n                            for (var item in aggregate_qry[prop]) {\n                                aggr_column = aggregate_qry[prop][item];\n                                datas[index][\"Count(\" + aggr_column + \")\"] = getCount();\n                            }\n                        }\n                        break;\n                    case 'Max':\n                        var getMax = function () {\n                            value = look_up_obj[obj_Key];\n                            // get old value\n                            value = value ? value[\"Max(\" + aggr_column + \")\"] : 0;\n                            datas[index][aggr_column] = datas[index][aggr_column] ?\n                                datas[index][aggr_column] : 0;\n                            // compare between old value and new value\n                            return value > datas[index][aggr_column] ? value : datas[index][aggr_column];\n                        };\n\n                        if (typeof aggregate_qry[prop] === 'string') {\n                            aggr_column = aggregate_qry[prop];\n                            datas[index][\"Max(\" + aggr_column + \")\"] = getMax();\n                        }\n                        else if (Array.isArray(aggregate_qry[prop])) {\n                            for (var item in aggregate_qry[prop]) {\n                                aggr_column = aggregate_qry[prop][item];\n                                datas[index][\"Max(\" + aggr_column + \")\"] = getMax();\n                            }\n                        }\n                        break;\n                    case 'Min':\n                        var getMin = function () {\n                            value = look_up_obj[obj_Key];\n                            // get old value\n                            value = value ? value[\"Min(\" + aggr_column + \")\"] : Infinity;\n                            datas[index][aggr_column] = datas[index][aggr_column] ?\n                                datas[index][aggr_column] : Infinity;\n                            // compare between old value and new value\n                            return value < datas[index][aggr_column] ? value : datas[index][aggr_column];\n                        };\n\n                        if (typeof aggregate_qry[prop] === 'string') {\n                            aggr_column = aggregate_qry[prop];\n                            datas[index][\"Min(\" + aggr_column + \")\"] = getMin();\n                        }\n                        else if (Array.isArray(aggregate_qry[prop])) {\n                            for (var item in aggregate_qry[prop]) {\n                                aggr_column = aggregate_qry[prop][item];\n                                datas[index][\"Min(\" + aggr_column + \")\"] = getMin();\n                            }\n                        }\n                        break;\n                    case 'Sum':\n                        var getSum = function () {\n                            value = look_up_obj[obj_Key];\n                            // get old value\n                            value = value ? value[\"Sum(\" + aggr_column + \")\"] : 0;\n                            // add with old value if data exist\n                            value += datas[index][aggr_column] ? datas[index][aggr_column] : 0;\n                            return value;\n                        };\n                        if (typeof aggregate_qry[prop] === 'string') {\n                            aggr_column = aggregate_qry[prop];\n                            datas[index][\"Sum(\" + aggr_column + \")\"] = getSum();\n                        }\n                        else if (Array.isArray(aggregate_qry[prop])) {\n                            for (var item in aggregate_qry[prop]) {\n                                aggr_column = aggregate_qry[prop][item];\n                                datas[index][\"Sum(\" + aggr_column + \")\"] = getSum();\n                            }\n                        }\n                        break;\n                    case 'Avg':\n                        var getAvg = function () {\n                            value = look_up_obj[obj_Key];\n                            // get old sum value\n                            var sum_of_column = value ? value[\"Sum(\" + aggr_column + \")\"] : 0;\n                            // add with old value if data exist\n                            sum_of_column += datas[index][aggr_column] ? datas[index][aggr_column] : 0;\n                            datas[index][\"Sum(\" + aggr_column + \")\"] = sum_of_column;\n                            // get old count value\n                            value = value ? value[\"Count(\" + aggr_column + \")\"] : 0;\n                            // add with old value if data exist\n                            value += datas[index][aggr_column] ? 1 : 0;\n                            datas[index][\"Count(\" + aggr_column + \")\"] = value;\n                        };\n\n                        if (typeof aggregate_qry[prop] === 'string') {\n                            aggr_column = aggregate_qry[prop];\n                            getAvg();\n                        }\n                        else if (Array.isArray(aggregate_qry[prop])) {\n                            for (var item in aggregate_qry[prop]) {\n                                aggr_column = aggregate_qry[prop][item];\n                                getAvg();\n                            }\n                        }\n                        break;\n                }\n            }\n        };\n\n        if (typeof grp_qry === 'string') {\n            for (index in datas) {\n                obj_Key = datas[index][grp_qry];\n                calculateAggregate();\n                look_up_obj[obj_Key] = datas[index];\n            }\n        }\n        else {\n            for (index in datas) {\n                obj_Key = \"\";\n                for (var column in grp_qry) {\n                    obj_Key += datas[index][grp_qry[column]];\n                }\n                calculateAggregate();\n                look_up_obj[obj_Key] = datas[index];\n            }\n\n        }\n        // free datas memory\n        datas = [];\n        for (var i in look_up_obj) {\n            datas.push(look_up_obj[i]);\n        }\n        // Checking for avg and if exist then fill the datas;\n        if (aggregate_qry.Avg) {\n            if (typeof aggregate_qry.Avg === 'string') {\n                for (index in datas) {\n                    var sum_for_avg = datas[index][\"Sum(\" + aggregate_qry.Avg + \")\"],\n                        count_for_avg = datas[index][\"Count(\" + aggregate_qry.Avg + \")\"];\n                    datas[index][\"Avg(\" + aggregate_qry.Avg + \")\"] = sum_for_avg / count_for_avg;\n                    if (aggregate_qry.Count !== aggregate_qry.Avg) {\n                        delete datas[index][\"Count(\" + aggregate_qry.Avg + \")\"];\n                    }\n                    if (aggregate_qry.Sum !== aggregate_qry.Avg) {\n                        delete datas[index][\"Sum(\" + aggregate_qry.Avg + \")\"];\n                    }\n                }\n            }\n            else {\n                var is_count_type_string = typeof aggregate_qry.Count,\n                    is_sum_type_string = typeof aggregate_qry.Count;\n                for (index in datas) {\n                    for (var column in aggregate_qry.Avg) {\n                        var avg_column = aggregate_qry.Avg[column],\n                            sum = datas[index][\"Sum(\" + avg_column + \")\"],\n                            count = datas[index][\"Count(\" + avg_column + \")\"];\n                        datas[index][\"Avg(\" + avg_column + \")\"] = sum / count;\n\n                        if (is_count_type_string) {\n                            if (aggregate_qry.Count !== avg_column) {\n                                delete datas[index][\"Count(\" + avg_column + \")\"];\n                            }\n                            else if (aggregate_qry.Count.indexOf(avg_column) === -1) {\n                                delete datas[index][\"Count(\" + avg_column + \")\"];\n                            }\n                        }\n\n                        if (is_sum_type_string) {\n                            if (aggregate_qry.Sum !== avg_column) {\n                                delete datas[index][\"Sum(\" + avg_column + \")\"];\n                            }\n                            else if (aggregate_qry.Sum.indexOf(avg_column) === -1) {\n                                delete datas[index][\"Sum(\" + avg_column + \")\"];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._results = datas;\n    }\n}","import { GroupByHelper } from \"./group_by_helper\";\n\nexport class Helper extends GroupByHelper {\n\n    constructor() {\n        super();\n    }\n\n    processOrderBy() {\n        var Order = this._query.Order;\n        if (Order && this._results.length > 0 && !this._sorted && Order.By) {\n            Order.Type = Order.Type ? Order.Type.toLowerCase() : 'asc';\n            var order_column = Order.By,\n                sortNumberInAsc = function () {\n                    this._results.sort((a, b) => {\n                        return a[order_column] - b[order_column];\n                    });\n                }.bind(this),\n                sortNumberInDesc = function () {\n                    this._results.sort(function (a, b) {\n                        return b[order_column] - a[order_column];\n                    });\n                }.bind(this),\n                sortAlphabetInAsc = function () {\n                    this._results.sort(function (a, b) {\n                        return a[order_column].toLowerCase().localeCompare(b[order_column].toLowerCase());\n                    });\n                }.bind(this),\n                sortAlphabetInDesc = function () {\n                    this._results.sort(function (a, b) {\n                        return b[order_column].toLowerCase().localeCompare(a[order_column].toLowerCase());\n                    });\n                }.bind(this);\n            if (typeof this._results[0][order_column] === 'string') {\n                if (Order.Type === 'asc') {\n                    sortAlphabetInAsc();\n                }\n                else {\n                    sortAlphabetInDesc();\n                }\n            }\n            else if (typeof this._results[0][order_column] === 'number') {\n                if (Order.Type === 'asc') {\n                    sortNumberInAsc();\n                }\n                else {\n                    sortNumberInDesc();\n                }\n            }\n        }\n    }\n\n    protected processAggregateQry() {\n        var datas = this._results,\n            results = {},\n            column_to_aggregate;\n        // free results memory\n        this._results = undefined;\n        for (var prop in this._query.Aggregate) {\n            switch (prop) {\n                case 'Count':\n                    var getCount = function () {\n                        var result = 0;\n                        for (var i in datas) {\n                            result += datas[i][column_to_aggregate] ? 1 : 0;\n                        }\n                        return result;\n                    };\n                    if (typeof this._query.Aggregate[prop] === 'string') {\n                        column_to_aggregate = this._query.Aggregate[prop];\n                        results[\"Count(\" + column_to_aggregate + \")\"] = getCount();\n                    }\n                    else if (Array.isArray(this._query.Aggregate[prop])) {\n                        for (var key in this._query.Aggregate[prop]) {\n                            column_to_aggregate = this._query.Aggregate[prop][key];\n                            results[\"Count(\" + column_to_aggregate + \")\"] = getCount();\n                        }\n                    }\n                    break;\n                case 'Max':\n                    var getMax = function () {\n                        var result = 0;\n                        for (var i in datas) {\n                            result = result > datas[i][column_to_aggregate] ?\n                                result : datas[i][column_to_aggregate];\n                        }\n                        return result;\n                    };\n                    if (typeof this._query.Aggregate[prop] === 'string') {\n                        column_to_aggregate = this._query.Aggregate[prop];\n                        results[\"Max(\" + column_to_aggregate + \")\"] = getMax();\n                    }\n                    else if (Array.isArray(this._query.Aggregate[prop])) {\n                        for (var key in this._query.Aggregate[prop]) {\n                            column_to_aggregate = this._query.Aggregate[prop][key];\n                            results[\"Max(\" + column_to_aggregate + \")\"] = getMax();\n                        }\n                    }\n                    break;\n                case 'Min':\n                    var getMin = function () {\n                        var result = Infinity, value = Infinity;\n                        for (var i in datas) {\n                            value = datas[i][column_to_aggregate] ?\n                                datas[i][column_to_aggregate] : Infinity;\n                            result = result < value ? result : value;\n                        }\n                        return result;\n                    };\n                    if (typeof this._query.Aggregate[prop] === 'string') {\n                        column_to_aggregate = this._query.Aggregate[prop];\n                        results[\"Min(\" + column_to_aggregate + \")\"] = getMin();\n                    }\n                    else if (Array.isArray(this._query.Aggregate[prop])) {\n                        for (var key in this._query.Aggregate[prop]) {\n                            column_to_aggregate = this._query.Aggregate[prop][key];\n                            results[\"Min(\" + column_to_aggregate + \")\"] = getMin();\n                        }\n                    }\n                    break;\n                case 'Sum':\n                    var getSum = function () {\n                        var result = 0;\n                        for (var i in datas) {\n                            result += datas[i][column_to_aggregate];\n                        }\n                        return result;\n                    };\n                    if (typeof this._query.Aggregate[prop] === 'string') {\n                        column_to_aggregate = this._query.Aggregate[prop];\n                        results[\"Sum(\" + column_to_aggregate + \")\"] = getSum();\n                    }\n                    else if (Array.isArray(this._query.Aggregate[prop])) {\n                        for (var key in this._query.Aggregate[prop]) {\n                            column_to_aggregate = this._query.Aggregate[prop][key];\n                            results[\"Sum(\" + column_to_aggregate + \")\"] = getSum();\n                        }\n                    }\n                    break;\n                case 'Avg':\n                    var getAvg = function () {\n                        var result = 0;\n                        for (var i in datas) {\n                            result += datas[i][column_to_aggregate];\n                        }\n                        return result / datas.length;\n                    };\n                    if (typeof this._query.Aggregate[prop] === 'string') {\n                        column_to_aggregate = this._query.Aggregate[prop];\n                        results[\"Avg(\" + column_to_aggregate + \")\"] = getAvg();\n                    }\n                    else if (Array.isArray(this._query.Aggregate[prop])) {\n                        for (var key in this._query.Aggregate[prop]) {\n                            column_to_aggregate = this._query.Aggregate[prop][key];\n                            results[\"Avg(\" + column_to_aggregate + \")\"] = getAvg();\n                        }\n                    }\n                    break;\n            }\n        }\n\n        // add results to the first index of result\n        for (var prop in results) {\n            datas[0][prop] = results[prop];\n        }\n        this._results = datas;\n    }\n}","import { NotWhere } from \"./not_where\";\n\nexport class In extends NotWhere {\n    protected executeInLogic(column, values) {\n        if (this._skipRecord && this._limitRecord) {\n            this.executeSkipAndLimitForIn(column, values);\n        }\n        else if (this._skipRecord) {\n            this.executeSkipForIn(column, values);\n        }\n        else if (this._limitRecord) {\n            this.executeLimitForIn(column, values);\n        }\n        else {\n            this.executeSimpleForIn(column, values);\n        }\n    }\n\n    private executeSkipAndLimitForIn(column, values) {\n        var cursor: IDBCursorWithValue,\n            skip = this._skipRecord,\n            column_store = this._objectStore.index(column),\n            cursor_request: IDBRequest,\n            skipOrPush = function (value) {\n                if (skip === 0) {\n                    this._results.push(value);\n                }\n                else {\n                    --skip;\n                }\n            }.bind(this),\n            onCursorError = function (e) {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            }.bind(this);\n        if (this._checkFlag) {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (this._results.length !== this._limitRecord && cursor) {\n                            if (this._whereChecker.check(cursor.value)) {\n                                skipOrPush(cursor.value);\n                            }\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n        else {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (this._results.length !== this._limitRecord && cursor) {\n                            skipOrPush(cursor.value);\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n    }\n\n    private executeSkipForIn(column, values) {\n        var cursor: IDBCursorWithValue,\n            skip = this._skipRecord,\n            cursor_request: IDBRequest,\n            column_store = this._objectStore.index(column),\n            skipOrPush = function (value) {\n                if (skip === 0) {\n                    this._results.push(value);\n                }\n                else {\n                    --skip;\n                }\n            }.bind(this),\n            onCursorError = function (e) {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            }.bind(this);\n        if (this._checkFlag) {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            if (this._whereChecker.check(cursor.value)) {\n                                skipOrPush((cursor.value));\n                            }\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n        else {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            skipOrPush((cursor.value));\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n    }\n\n    private executeLimitForIn(column, values) {\n        var cursor: IDBCursorWithValue,\n            cursor_request: IDBRequest,\n            column_store = this._objectStore.index(column),\n            onCursorError = function (e) {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            }.bind(this);\n        if (this._checkFlag) {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor && this._results.length !== this._limitRecord) {\n                            if (this._whereChecker.check(cursor.value)) {\n                                this._results.push(cursor.value);\n                            }\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n        else {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor && this._results.length !== this._limitRecord) {\n                            this._results.push(cursor.value);\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n    }\n\n    private executeSimpleForIn(column, values) {\n        var cursor: IDBCursorWithValue,\n            cursor_request: IDBRequest,\n            column_store = this._objectStore.index(column),\n            onCursorError = function (e) {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            }.bind(this);\n        if (this._checkFlag) {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            if (this._whereChecker.check(cursor.value)) {\n                                this._results.push(cursor.value);\n                            }\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n        else {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            this._results.push(cursor.value);\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n    }\n}","export * from './instance';\r\nexport * from './join';","import { ISelect, IError } from \"../../interfaces\";\nimport { IdbHelper } from \"../idb_helper\";\nimport { Helper } from \"./helper\";\nimport { LogHelper } from \"../../log_helper\";\nimport { Util } from \"../../util\";\nimport { Error_Type } from \"../../enums\";\n\nexport class Instance extends Helper {\n\n    constructor(query: ISelect, onSuccess: (results: any[]) => void, onError: (err: IError) => void) {\n        super();\n        this._onError = onError;\n        this._onSuccess = onSuccess;\n        this._query = query;\n        this._skipRecord = query.skip;\n        this._limitRecord = query.limit;\n        this._tableName = query.from;\n    }\n\n    execute() {\n        if (this.isTableExist(this._tableName) === true) {\n            try {\n                if (this._query.where !== undefined) {\n                    this.addGreatAndLessToNotOp();\n                    this.initTransaction();\n                    if (Array.isArray(this._query.where)) {\n                        this.processWhereArrayQry();\n                    }\n                    else {\n                        this.processWhere();\n                    }\n                }\n                else {\n                    this.initTransaction();\n                    this.executeWhereUndefinedLogic();\n                }\n            }\n            catch (ex) {\n                this._errorOccured = true;\n                this.onExceptionOccured.call(this, ex, { TableName: this._query.From });\n            }\n        }\n        else {\n            this._errorOccured = true;\n            this.onErrorOccured(\n                new LogHelper(Error_Type.TableNotExist, { TableName: this._query.From }).get(),\n                true\n            );\n        }\n    }\n\n    private processWhereArrayQry() {\n        this._isArrayQry = true;\n        var is_first_where = true,\n            where_query = this._query.where,\n            output = [], operation,\n            pKey = this.getPrimaryKey(this._query.From),\n            isItemExist = (keyValue) => {\n                var is_exist = false;\n                output.every((item) => {\n                    if (item[pKey] === keyValue) {\n                        is_exist = true;\n                        return false;\n                    }\n                    return true;\n                });\n                return is_exist;\n            },\n            onSuccess = function () {\n                if (operation === 'and') {\n                    var doAnd = function () {\n                        var and_results = [];\n                        this._results.forEach((item) => {\n                            if (isItemExist(item[pKey])) {\n                                and_results.push(item);\n                            }\n                        });\n                        output = and_results;\n                        and_results = null;\n                    }.bind(this);\n                    if (output.length > 0) {\n                        doAnd();\n                    }\n                    else if (is_first_where === true) {\n                        output = this._results;\n                    }\n                    else {\n                        doAnd();\n                    }\n                }\n                else {\n                    if (output.length > 0) {\n                        this._results = output.concat(this._results);\n                        this.removeDuplicates();\n                        output = this._results;\n                    }\n                    else {\n                        output = this._results;\n                    }\n                }\n                if (where_query.length > 0) {\n                    this._results = [];\n                    processFirstQry();\n                }\n                else {\n                    this._results = output;\n                }\n                is_first_where = false;\n            }.bind(this),\n            processFirstQry = function () {\n                this._query.where = where_query.shift();\n                if (this._query.where['or']) {\n                    if (Object.keys(this._query.where).length === 1) {\n                        operation = 'or';\n                        this._query.where = this._query.where['or'];\n                        this._onWhereArrayQrySuccess = onSuccess;\n                    }\n                    else {\n                        operation = 'and';\n                        this._onWhereArrayQrySuccess = onSuccess;\n                    }\n                }\n                else {\n                    operation = 'and';\n                    this._onWhereArrayQrySuccess = onSuccess;\n                }\n                this.processWhere();\n            }.bind(this);\n        processFirstQry();\n    }\n\n    protected onQueryFinished() {\n        if (this._isOr === true) {\n            this.orQuerySuccess();\n        }\n        else if (this._isArrayQry === true) {\n            this._onWhereArrayQrySuccess();\n        }\n        else if (this._isTransaction === true) {\n            this.onTransactionCompleted();\n        }\n    }\n\n    private initTransaction() {\n        IdbHelper.createTransaction([this._tableName], this.onTransactionCompleted.bind(this), 'readonly');\n        this._objectStore = IdbHelper._transaction.objectStore(this._tableName);\n    }\n\n    private processWhere() {\n        if (this._query.where.or) {\n            this.processOrLogic();\n        }\n        this.goToWhereLogic();\n    }\n\n    private onTransactionCompleted() {\n        if (this._errorOccured === false) {\n            this.processOrderBy();\n            if (this._query.Distinct) {\n                var group_by = [];\n                var result = this._results[0];\n                for (var key in result) {\n                    group_by.push(key);\n                }\n                var primary_key = this.getPrimaryKey(this._query.From),\n                    index = group_by.indexOf(primary_key);\n                group_by.splice(index, 1);\n                this._query.GroupBy = group_by.length > 0 ? group_by : null;\n            }\n            if (this._query.GroupBy) {\n                if (this._query.Aggregate) {\n                    this.executeAggregateGroupBy();\n                }\n                else {\n                    this.processGroupBy();\n                }\n            }\n            else if (this._query.Aggregate) {\n                this.processAggregateQry();\n            }\n            this._onSuccess(this._results);\n        }\n    }\n\n    private orQueryFinish() {\n        this._isOr = false;\n        this._results = (this as any)._orInfo.Results;\n        // free or info memory\n        (this as any)._orInfo = undefined;\n        this.removeDuplicates();\n        this.onQueryFinished();\n    }\n\n    private orQuerySuccess() {\n        (this as any)._orInfo.Results = (this as any)._orInfo.Results.concat(this._results);\n        if (!this._query.Limit || (this._query.Limit > (this as any)._orInfo.Results.length)) {\n            this._results = [];\n            var key = Util.getObjectFirstKey((this as any)._orInfo.OrQuery);\n            if (key != null) {\n                var where = {};\n                where[key] = (this as any)._orInfo.OrQuery[key];\n                delete (this as any)._orInfo.OrQuery[key];\n                this._query.where = where;\n                this.goToWhereLogic();\n            }\n            else {\n                this.orQueryFinish();\n            }\n        }\n        else {\n            this.orQueryFinish();\n        }\n    }\n\n    private processOrLogic() {\n        this._isOr = true;\n        (this as any)._orInfo = {\n            OrQuery: this._query.where.or,\n            Results: []\n        };\n        // free or memory\n        delete this._query.where.or;\n    }\n}","import { BaseSelect } from \"./base_select\";\nimport { ISelectJoin, ITableJoin, IError, IJoin, ISelect } from \"../../interfaces\";\nimport * as Select from './instance';\n\nexport class Join extends BaseSelect {\n    _query: ISelectJoin;\n    _queryStack: ITableJoin[] = [];\n    _currentQueryStackIndex = 0;\n\n    constructor(query: ISelectJoin, onSuccess: (results: any[]) => void, onError: (err: IError) => void) {\n        super();\n        this._onSuccess = onSuccess;\n        this._onError = onError;\n        this._query = query;\n        var table_list = []; // used to open the multiple object store\n\n        var convertQueryIntoStack = function (qry) {\n            if (qry.hasOwnProperty('Table1')) {\n                qry.Table2['JoinType'] = (qry as IJoin).join === undefined ?\n                    'inner' : (qry as IJoin).join.toLowerCase();\n                this._queryStack.push(qry.Table2);\n                if (this._queryStack.length % 2 === 0) {\n                    this._queryStack[this._queryStack.length - 1].NextJoin = qry.NextJoin;\n                }\n                table_list.push(qry.Table2.Table);\n                return convertQueryIntoStack(qry.Table1);\n            }\n            else {\n                this._queryStack.push(qry);\n                table_list.push(qry.Table);\n                return;\n            }\n        }.bind(this);\n        convertQueryIntoStack(query.from);\n        this._queryStack.reverse();\n        // get the data for first table\n        if (!this._errorOccured) {\n            var select_object = new Select.Instance({\n                from: this._queryStack[0].table,\n                where: this._queryStack[0].where\n            } as ISelect, function (results) {\n                var table_name = this._queryStack[0].Table;\n                results.forEach(function (item, index) {\n                    this._results[index] = {};\n                    this._results[index][table_name] = item;\n                }, this);\n                this.startExecutionJoinLogic();\n            }.bind(this), this.onErrorOccured.bind(this));\n            select_object.execute();\n        }\n    }\n\n    private onTransactionCompleted(e) {\n        if (this._onSuccess != null && (this._queryStack.length === this._currentQueryStackIndex + 1)) {\n            if (this._query['Count']) {\n                this._onSuccess(this._results.length);\n            }\n            else {\n                if (this._query['Skip'] && this._query['Limit']) {\n                    this._results.splice(0, this._query['Skip']);\n                    this._results.splice(this._query['Limit'] - 1, this._results.length);\n                }\n                else if (this._query['Skip']) {\n                    this._results.splice(0, this._query['Skip']);\n                }\n                else if (this._query['Limit']) {\n                    this._results.splice(this._query['Limit'] - 1, this._results.length);\n                }\n                this._onSuccess(this._results);\n            }\n\n        }\n    }\n\n    private executeWhereJoinLogic(joinQuery: ITableJoin, query: ITableJoin) {\n        var results = [],\n            join_index = 0,\n            column = query.column,\n            tmp_results = this._results,\n            item,\n            result_length = tmp_results.length;\n\n        // get the data from query table\n        var select_object = new Select.Instance({\n            from: query.table,\n            order: query.order,\n            where: query.where\n        } as ISelect, function (selectResults) {\n            // perform join\n            selectResults.forEach((value, index) => {\n                // search item through each global result\n                for (var i = 0; i < result_length; i++) {\n                    item = tmp_results[i][joinQuery.table][joinQuery.column];\n                    doJoin(item, value, i);\n                }\n            });\n            this._results = results;\n            // check if further execution needed\n            if (this._queryStack.length > this._currentQueryStackIndex + 1) {\n                this.startExecutionJoinLogic();\n            }\n            else {\n                this.onTransactionCompleted(null);\n            }\n\n        }.bind(this), this.onErrorOccured.bind(this));\n        select_object.execute();\n\n        var doJoin = function (value1, value2, itemIndex) {\n            results[join_index] = {};\n            if (value1 === value2[query.column]) {\n                results[join_index][query.table] = value2;\n                // copy other relative data into current result\n                for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                    results[join_index][this._queryStack[j].Table] =\n                        tmp_results[itemIndex][this._queryStack[j].Table];\n                }\n                ++join_index;\n            }\n            else if (query.joinType === 'left') {\n                // left join\n                results[join_index] = {};\n                results[join_index][query.table] = null;\n                // copy other relative data into current result\n                for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                    results[join_index][this._queryStack[j].Table] =\n                        tmp_results[itemIndex][this._queryStack[j].Table];\n                }\n                // results[JoinIndex][joinQuery.Table] = TmpResults[ItemIndex][joinQuery.Table];\n                ++join_index;\n            }\n        }.bind(this);\n    }\n\n    private executeRightJoin(joinQuery: ITableJoin, query: ITableJoin) {\n        var join_results = [],\n            join_index = 0,\n            column = query.column,\n            tmp_results = this._results,\n            result_length = tmp_results.length,\n            item_index = 0,\n            where = {},\n            onExecutionFinished = function () {\n                this._results = join_results;\n                // check if further execution needed\n                if (this._queryStack.length > this._currentQueryStackIndex + 1) {\n                    this.startExecutionJoinLogic();\n                }\n                else {\n                    this.onTransactionCompleted(null);\n                }\n            }.bind(this),\n            doRightJoin = function (results) {\n                var value_found = false;\n                results.forEach(function (item, index) {\n                    for (item_index = 0; item_index < result_length; item_index++) {\n                        if (item[query.column] ===\n                            tmp_results[item_index][joinQuery.table][joinQuery.column]) {\n                            value_found = true;\n                            break;\n                        }\n                    }\n                    join_results[index] = {};\n                    join_results[index][query.table] = item;\n                    if (value_found) {\n                        value_found = false;\n                        for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                            join_results[index][this._queryStack[j].Table] =\n                                tmp_results[item_index][this._queryStack[j].Table];\n                        }\n                    }\n                    else {\n                        for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                            join_results[index][this._queryStack[j].Table] = null;\n                        }\n                    }\n                }, this);\n            }.bind(this),\n            executeLogic = () => {\n                var select_object = new Select.Instance({\n                    from: query.table,\n                    order: query.order,\n                    where: query.where\n                } as ISelect, (results) => {\n                    doRightJoin(results);\n                    onExecutionFinished();\n                }, this.onErrorOccured.bind(this));\n                select_object.execute();\n            };\n        executeLogic();\n    }\n\n    private executeWhereUndefinedLogicForJoin(joinQuery: ITableJoin, query: ITableJoin) {\n        var join_results = [],\n            join_index = 0,\n            column = query.column,\n            tmp_results = this._results,\n            // Item,\n            result_length = tmp_results.length,\n            item_index = 0,\n            where = {},\n            onExecutionFinished = function () {\n                this._results = join_results;\n                // check if further execution needed\n                if (this._queryStack.length > this._currentQueryStackIndex + 1) {\n                    this.startExecutionJoinLogic();\n                }\n                else {\n                    this.onTransactionCompleted(null);\n                }\n            }.bind(this),\n            doJoin = function (results) {\n                if (results.length > 0) {\n                    results.forEach(function (value) {\n                        join_results[join_index] = {};\n                        join_results[join_index][query.table] = value;\n                        // copy other relative data into current result\n                        for (var k = 0; k < this._currentQueryStackIndex; k++) {\n                            join_results[join_index][this._queryStack[k].Table] =\n                                tmp_results[item_index][this._queryStack[k].Table];\n                        }\n                        ++join_index;\n                    }, this);\n                }\n                else if (query.joinType === 'left') {\n                    // left join\n                    join_results[join_index] = {};\n                    join_results[join_index][query.table] = null;\n                    // copy other relative data into current result\n                    for (var j = 0; j < this._currentQueryStackIndex; j++) {\n                        join_results[join_index][this._queryStack[j].Table] =\n                            tmp_results[item_index][this._queryStack[j].Table];\n                    }\n                    ++join_index;\n                }\n            }.bind(this),\n            executeLogic = function () {\n                if (item_index < result_length) {\n                    if (!this._errorOccured) {\n                        where[query.column] = tmp_results[item_index][joinQuery.table][joinQuery.column];\n                        var select_object = new Select.Instance({\n                            from: query.table,\n                            order: query.order,\n                            where: where\n                        } as ISelect, (results) => {\n                            doJoin(results);\n                            ++item_index;\n                            executeLogic();\n                        }, this.onErrorOccured.bind(this));\n                        select_object.execute();\n                    }\n                }\n                else {\n                    onExecutionFinished();\n                }\n            }.bind(this);\n        executeLogic();\n    }\n\n    private startExecutionJoinLogic() {\n        var join_query;\n        if (this._currentQueryStackIndex >= 1 && this._currentQueryStackIndex % 2 === 1) {\n            join_query = {\n                column: this._queryStack[this._currentQueryStackIndex].nextJoin.column,\n                table: this._queryStack[this._currentQueryStackIndex].nextJoin.table\n            } as ITableJoin;\n            this._currentQueryStackIndex++;\n        }\n        else {\n            join_query = this._queryStack[this._currentQueryStackIndex++];\n        }\n\n        var query = this._queryStack[this._currentQueryStackIndex];\n        if (query.joinType === 'right') {\n            this.executeRightJoin(join_query, query);\n        }\n        else if (query.where) {\n            this.executeWhereJoinLogic(join_query, query);\n        }\n        else {\n            this.executeWhereUndefinedLogicForJoin(join_query, query);\n        }\n    }\n}","import { In } from \"./in\";\nimport { Occurence } from \"../../enums\";\n\nexport class Like extends In {\n    _compSymbol: Occurence;\n    _compValue;\n    _compValueLength: number;\n\n    protected executeLikeLogic(column, value: string, symbol: Occurence) {\n        this._compValue = value.toLowerCase();\n        this._compValueLength = this._compValue.length;\n        this._compSymbol = symbol;\n        this._cursorOpenRequest = this._objectStore.index(column).openCursor();\n        this._cursorOpenRequest.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n        if (this._skipRecord && this._limitRecord) {\n            this.executeSkipAndLimit();\n        }\n        else if (this._skipRecord) {\n            this.executeSkip();\n        }\n        else if (this._limitRecord) {\n            this.executeLimit();\n        }\n        else {\n            this.executeSimple();\n        }\n    }\n\n    private executeSkipAndLimit() {\n        var cursor: IDBCursorWithValue,\n            skip = this._skipRecord,\n            skipOrPush = function (value) {\n                if (skip === 0) {\n                    this._results.push(value);\n                }\n                else {\n                    --skip;\n                }\n            }.bind(this);\n        if (this._checkFlag) {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (this._results.length !== this._limitRecord && cursor) {\n                    if (this.filterOnOccurence(cursor.key) &&\n                        this._whereChecker.check(cursor.value)) {\n                        skipOrPush(cursor.value);\n                    }\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (this._results.length !== this._limitRecord && cursor) {\n                    if (this.filterOnOccurence(cursor.key)) {\n                        skipOrPush(cursor.value);\n                    }\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n\n    private executeSkip() {\n        var cursor: IDBCursorWithValue,\n            skip = this._skipRecord,\n            skipOrPush = function (value) {\n                if (skip === 0) {\n                    this._results.push(value);\n                }\n                else {\n                    --skip;\n                }\n            }.bind(this);\n        if (this._checkFlag) {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key) &&\n                        this._whereChecker.check(cursor.value)) {\n                        skipOrPush((cursor.value));\n                    }\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key)) {\n                        skipOrPush((cursor.value));\n                    }\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n\n    private executeLimit() {\n        var cursor: IDBCursorWithValue;\n        if (this._checkFlag) {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (this._results.length !== this._limitRecord && cursor) {\n                    if (this.filterOnOccurence(cursor.key) &&\n                        this._whereChecker.check(cursor.value)) {\n                        this._results.push(cursor.value);\n                    }\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (this._results.length !== this._limitRecord && cursor) {\n                    if (this.filterOnOccurence(cursor.key)) {\n                        this._results.push(cursor.value);\n                    }\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n\n    private executeSimple() {\n        var cursor: IDBCursorWithValue;\n        if (this._checkFlag) {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key) &&\n                        this._whereChecker.check(cursor.value)) {\n                        this._results.push(cursor.value);\n                    }\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key)) {\n                        this._results.push(cursor.value);\n                    }\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n}","import { BaseSelect } from \"./base_select\";\nimport { LogHelper } from \"../../log_helper\";\nimport { Error_Type } from \"../../enums\";\n\nexport class NotWhere extends BaseSelect {\n    protected executeWhereUndefinedLogic() {\n        if (this._query.Order && this._query.Order.By) {\n            if (this._objectStore.indexNames.contains(this._query.Order.By)) {\n                var order_type: IDBCursorDirection = this._query.Order.Type &&\n                    this._query.Order.Type.toLowerCase() === 'desc' ? 'prev' : 'next';\n                this._sorted = true;\n                this._cursorOpenRequest = this._objectStore.index(this._query.Order.By).\n                    openCursor(null, order_type);\n            }\n            else {\n                var error = new LogHelper(Error_Type.ColumnNotExist, { ColumnName: this._query.Order.By });\n                error.throw();\n            }\n        }\n        else {\n            this._cursorOpenRequest = this._objectStore.openCursor();\n        }\n\n        if (this._skipRecord && this._limitRecord) {\n            this.executeSkipAndLimitForNoWhere();\n        }\n        else if (this._skipRecord) {\n            this.executeSkipForNoWhere();\n        }\n        else if (this._limitRecord) {\n            this.executeLimitForNotWhere();\n        }\n        else {\n            this.executeSimpleForNotWhere();\n        }\n\n        this._cursorOpenRequest.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n\n    }\n\n    private executeSkipAndLimitForNoWhere() {\n        var record_skipped = false,\n            cursor: IDBCursorWithValue;\n        this._cursorOpenRequest.onsuccess = (e) => {\n            cursor = (e as any).target.result;\n            if (cursor) {\n                if (record_skipped && this._results.length !== this._limitRecord) {\n                    this._results.push(cursor.value);\n                    cursor.continue();\n                }\n                else {\n                    record_skipped = true;\n                    cursor.advance(this._skipRecord);\n                }\n            } else {\n                this.onQueryFinished();\n            }\n        };\n    }\n\n    private executeSkipForNoWhere() {\n        var record_skipped = false,\n            cursor;\n        this._cursorOpenRequest.onsuccess = function (e) {\n            cursor = e.target.result;\n            if (cursor) {\n                if (record_skipped) {\n                    this._results.push(cursor.value);\n                    cursor.continue();\n                }\n                else {\n                    record_skipped = true;\n                    cursor.advance(this._skipRecord);\n                }\n            } else {\n                this.onQueryFinished();\n            }\n        }.bind(this);\n    }\n\n    private executeSimpleForNotWhere() {\n        var cursor;\n        this._cursorOpenRequest.onsuccess = function (e) {\n            cursor = e.target.result;\n            if (cursor) {\n                this._results.push(cursor.value);\n                (cursor as any).continue();\n            }\n            else {\n                this.onQueryFinished();\n            }\n        }.bind(this);\n    }\n\n    private executeLimitForNotWhere() {\n        var cursor;\n        this._cursorOpenRequest.onsuccess = function (e) {\n            cursor = e.target.result;\n            if (cursor && this._results.length !== this._limitRecord) {\n                this._results.push(cursor.value);\n                cursor.continue();\n            } else {\n                this.onQueryFinished();\n            }\n        }.bind(this);\n    }\n}\n","import { Like } from \"./like\";\n\nexport class Where extends Like {\n    private executeSkipAndLimitForWhere() {\n        var record_skipped = false,\n            cursor;\n        if (this._checkFlag) {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (record_skipped && this._results.length !== this._limitRecord) {\n                        if (this._whereChecker.check(cursor.value)) {\n                            this._results.push(cursor.value);\n                        }\n                        cursor.continue();\n                    }\n                    else {\n                        record_skipped = true;\n                        cursor.advance(this._skipRecord);\n                    }\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (record_skipped && this._results.length !== this._limitRecord) {\n                        this._results.push(cursor.value);\n                        cursor.continue();\n                    }\n                    else {\n                        record_skipped = true;\n                        cursor.advance(this._skipRecord);\n                    }\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n\n    private executeSkipForWhere() {\n        var record_skipped = false,\n            cursor;\n        if (this._checkFlag) {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (record_skipped) {\n                        if (this._whereChecker.check(cursor.value)) {\n                            this._results.push(cursor.value);\n                        }\n                        cursor.continue();\n                    }\n                    else {\n                        record_skipped = true;\n                        cursor.advance(this._skipRecord);\n                    }\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (record_skipped) {\n                        this._results.push(cursor.value);\n                        cursor.continue();\n                    }\n                    else {\n                        record_skipped = true;\n                        cursor.advance(this._skipRecord);\n                    }\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n\n    private executeLimitForWhere() {\n        var cursor;\n        if (this._checkFlag) {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor && this._results.length !== this._limitRecord &&\n                    this._whereChecker.check(cursor.value)) {\n                    this._results.push(cursor.value);\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor && this._results.length !== this._limitRecord) {\n                    this._results.push(cursor.value);\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n\n    private executeSimpleForWhere() {\n        var cursor;\n        if (this._checkFlag) {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this._whereChecker.check(cursor.value)) {\n                        this._results.push(cursor.value);\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            this._cursorOpenRequest.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    this._results.push(cursor.value);\n                    cursor.continue();\n                } else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n\n    private executeWhereLogic(column, value, op, dir) {\n        value = op ? value[op] : value;\n        this._cursorOpenRequest = this._objectStore.index(column).openCursor(\n            this.getKeyRange(value, op),\n            dir\n        );\n\n        this._cursorOpenRequest.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n\n        if (this._skipRecord && this._limitRecord) {\n            this.executeSkipAndLimitForWhere();\n        }\n        else if (this._skipRecord) {\n            this.executeSkipForWhere();\n        }\n        else if (this._limitRecord) {\n            this.executeLimitForWhere();\n        }\n        else {\n            this.executeSimpleForWhere();\n        }\n    }\n}","import { Base } from \"../base\";\nimport { IdbHelper } from \"../idb_helper\";\n\nexport var updateValue = (suppliedValue, storedValue) => {\n    for (var key in suppliedValue) {\n        if (typeof suppliedValue[key] !== 'object') {\n            storedValue[key] = suppliedValue[key];\n        }\n        else {\n            for (var op in suppliedValue[key]) {\n                switch (op as any) {\n                    case '+': storedValue[key] += suppliedValue[key][op]; break;\n                    case '-': storedValue[key] -= suppliedValue[key][op]; break;\n                    case '*': storedValue[key] *= suppliedValue[key][op]; break;\n                    case '/': storedValue[key] /= suppliedValue[key][op]; break;\n                    default: storedValue[key] = suppliedValue[key];\n                }\n                break;\n            }\n        }\n    }\n    return storedValue;\n};\n\nexport class BaseUpdate extends Base {\n    _checkFlag = false;\n    protected initTransaction() {\n        IdbHelper.createTransaction([this._query.in], this.onTransactionCompleted.bind(this));\n        this._objectStore = IdbHelper._transaction.objectStore(this._query.in);\n    }\n\n    protected onQueryFinished() {\n        if (this._isTransaction === true) {\n            this.onTransactionCompleted();\n        }\n    }\n\n    private onTransactionCompleted() {\n        if (this._errorOccured === false) {\n            this._onSuccess(this._rowAffected);\n        }\n    }\n}\n","import { NotWhere } from \"./not_where\";\nimport { updateValue } from \"./base_update\";\n\nexport class In extends NotWhere {\n    private executeInLogic(column, values) {\n        var cursor: IDBCursorWithValue,\n            column_store = this._objectStore.index(column),\n            cursor_request,\n            onCursorError = (e) => {\n                this._errorOccured = true;\n                this.onErrorOccured(e);\n            };\n        if (this._checkFlag) {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            if (this._whereChecker.check(cursor.value)) {\n                                cursor.update(updateValue(this._query.Set, cursor.value));\n                                ++this._rowAffected;\n                            }\n                            cursor.continue();\n                        }\n                        else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n        else {\n            for (var i = 0, length = values.length; i < length; i++) {\n                if (!this._errorOccured) {\n                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\n                    cursor_request.onsuccess = function (e) {\n                        cursor = e.target.result;\n                        if (cursor) {\n                            cursor.update(updateValue(this._query.Set, cursor.value));\n                            ++this._rowAffected;\n                            cursor.continue();\n                        } else if (i + 1 === length) {\n                            this.onQueryFinished();\n                        }\n                    }.bind(this);\n                    cursor_request.onerror = onCursorError;\n                }\n            }\n        }\n    }\n}","export * from './instance';","import { Where } from \"./where\";\nimport { IUpdate, IError, ISelect } from \"../../interfaces\";\nimport * as Select from \"../select/index\";\nimport { SchemaChecker } from \"./schema_checker\";\n\nexport class Instance extends Where {\n    constructor(query: IUpdate, onSuccess: () => void, onError: (err: IError) => void) {\n        super();\n        this._onSuccess = onSuccess;\n        this._onError = onError;\n        this._query = query;\n    }\n\n    execute() {\n        try {\n            this._error = new SchemaChecker(this.getTable(this._query.in)).\n                check(this._query.set, this._query.in);\n            if (!this._error) {\n                if (this._query.where !== undefined) {\n                    this.addGreatAndLessToNotOp();\n                    if (this._query.where.or || Array.isArray(this._query.where)) {\n                        this.executeComplexLogic();\n                    }\n                    else {\n                        this.initTransaction();\n                        this.goToWhereLogic();\n                    }\n                }\n                else {\n                    this.initTransaction();\n                    this.executeWhereUndefinedLogic();\n                }\n            }\n            else {\n                this._errorOccured = true;\n                this.onErrorOccured(this._error, true);\n            }\n        }\n        catch (ex) {\n            this._errorOccured = true;\n            this.onExceptionOccured.call(this, ex, { TableName: this._query.in });\n        }\n    }\n\n    private executeComplexLogic() {\n        var select_object = new Select.Instance({\n            from: this._query.in,\n            where: this._query.where\n        } as ISelect, (results: any[]) => {\n            var key = this.getPrimaryKey(this._query.in),\n                in_query = [],\n                where_qry = {};\n            results.forEach((value) => {\n                in_query.push(value[key]);\n            });\n            results = null;\n            where_qry[key] = { In: in_query };\n            this._query['where'] = where_qry;\n            this.initTransaction();\n            this.goToWhereLogic();\n        }, this._onError.bind(this));\n        select_object.execute();\n    }\n}\n","import { Occurence } from \"../../enums\";\nimport { In } from \"./in\";\nimport { updateValue } from \"./base_update\";\n\nexport class Like extends In {\n    _compSymbol: Occurence;\n    _compValue;\n    _compValueLength: number;\n\n    protected executeLikeLogic(column, value, symbol: Occurence) {\n        var cursor: IDBCursorWithValue;\n        this._compValue = (value as string).toLowerCase();\n        this._compValueLength = this._compValue.length;\n        this._compSymbol = symbol;\n        var cursor_open_request = this._objectStore.index(column).openCursor();\n        cursor_open_request.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n\n        if (this._checkFlag) {\n            cursor_open_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key) &&\n                        this._whereChecker.check(cursor.value)) {\n                        cursor.update(updateValue(this._query.Set, cursor.value));\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n\n            }.bind(this);\n        }\n        else {\n            cursor_open_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this.filterOnOccurence(cursor.key)) {\n                        cursor.update(updateValue(this._query.Set, cursor.value));\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n    }\n}\n","import { BaseUpdate, updateValue } from \"./base_update\";\n\nexport class NotWhere extends BaseUpdate {\n\n    protected executeWhereUndefinedLogic() {\n        var cursor,\n            cursor_request = this._objectStore.openCursor();\n        cursor_request.onsuccess = (e) => {\n            cursor = (e as any).target.result;\n            if (cursor) {\n                cursor.update(updateValue(this._query.Set, cursor.value));\n                ++this._rowAffected;\n                (cursor as any).continue();\n            }\n            else {\n                this.onQueryFinished();\n            }\n\n        };\n        cursor_request.onerror = (e) => {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        };\n    }\n}\n","import { Table } from \"../../model/table\";\nimport { IError } from \"../../interfaces\";\nimport { Column } from \"../../model/column\";\nimport { LogHelper } from \"../../log_helper\";\nimport { Error_Type } from \"../../enums\";\nimport { Util } from \"../../util\";\n\nexport class SchemaChecker {\n    _table: Table;\n    constructor(table: Table) {\n        this._table = table;\n    }\n\n    check(setValue, tblName) {\n        var error: IError = null;\n        if (typeof setValue === 'object') {\n            if (this._table) {\n                // loop through table column and find data is valid\n                this._table._columns.every(function (column: Column) {\n                    if (error === null) {\n                        if (column._name in setValue) {\n                            error = this.checkByColumn(column, setValue[column._name]);\n                        }\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }, this);\n            }\n            else {\n                error = new LogHelper(Error_Type.TableNotExist, { TableName: tblName });\n            }\n        }\n        else {\n            error = new LogHelper(Error_Type.NotObject);\n        }\n        return error;\n    }\n\n    private checkByColumn(column, value) {\n        var error: IError = null;\n        // check not null schema\n        if (column._notNull && Util.isNull(value)) {\n            error = new LogHelper(Error_Type.NullValue, { ColumnName: column._name });\n        }\n\n        // check datatype\n        var type = Util.getType(value);\n        if (column._dataType) {\n            if (type !== column._dataType && type !== 'object') {\n                error = new LogHelper(Error_Type.BadDataType, { ColumnName: column._name });\n            }\n        }\n\n        // check allowed operators\n        if (type === 'object') {\n            var allowed_prop = ['+', '-', '*', '/'];\n            for (var prop in value) {\n                if (allowed_prop.indexOf(prop) < 0 && column._dataType && type !== column._dataType) {\n                    error = new LogHelper(Error_Type.BadDataType, { ColumnName: column._name }).get();\n                }\n                break;\n            }\n        }\n        return error;\n    }\n}","import { updateValue } from \"./base_update\";\nimport { Like } from \"./like\";\n\nexport class Where extends Like {\n    private executeWhereLogic(column, value, op) {\n        var cursor: IDBCursorWithValue,\n            cursor_request;\n        value = op ? value[op] : value;\n        cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\n        if (this._checkFlag) {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    if (this._whereChecker.check(cursor.value)) {\n                        cursor.update(updateValue(this._query.Set, cursor.value));\n                        ++this._rowAffected;\n                    }\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n        else {\n            cursor_request.onsuccess = function (e) {\n                cursor = e.target.result;\n                if (cursor) {\n                    cursor.update(updateValue(this._query.Set, cursor.value));\n                    ++this._rowAffected;\n                    cursor.continue();\n                }\n                else {\n                    this.onQueryFinished();\n                }\n            }.bind(this);\n        }\n\n        cursor_request.onerror = function (e) {\n            this._errorOccured = true;\n            this.onErrorOccured(e);\n        }.bind(this);\n    }\n}","import { Occurence } from \"../enums\";\n\n/**\n * For matching the different column value existance for where option\n * \n * @export\n * @class WhereChecker\n */\nexport class WhereChecker {\n  _where: object;\n  _status: boolean;\n\n  constructor(where: object) {\n    this._where = where;\n  }\n\n  check(rowValue) {\n    this._status = true;\n    var column_value;\n    for (var columnName in this._where) {\n      if (this._status) {\n        column_value = this._where[columnName];\n        if (typeof column_value === 'object') {\n          for (var key in column_value) {\n            if (this._status) {\n              switch (key) {\n                case 'In': this.checkIn(columnName, rowValue[columnName]); break;\n                case 'Like': this.checkLike(columnName, rowValue[columnName]); break;\n                case '-':\n                case '>':\n                case '<':\n                case '>=':\n                case '<=':\n                case '!=':\n                  this.checkComparisionOp(columnName, rowValue[columnName], key);\n                  break;\n              }\n            }\n            else {\n              break;\n            }\n          }\n        }\n        else {\n          if (column_value !== rowValue[columnName]) {\n            this._status = false;\n            break;\n          }\n        }\n      }\n      else {\n        break;\n      }\n    }\n    return this._status;\n  }\n\n  private checkIn(column, value) {\n    for (var i = 0, values = this._where[column].In, length = values.length; i < length; i++) {\n      if (values[i] === value) {\n        this._status = true;\n        break;\n      }\n      else {\n        this._status = false;\n      }\n    }\n  }\n\n  private checkLike(column, value) {\n    var values = this._where[column].Like.split('%'),\n      comp_symbol: Occurence,\n      comp_value,\n      symbol_index;\n    if (values[1]) {\n      comp_value = values[1];\n      comp_symbol = values.length > 2 ? Occurence.Any : Occurence.Last;\n    }\n    else {\n      comp_value = values[0];\n      comp_symbol = Occurence.First;\n    }\n    value = value.toLowerCase();\n\n    switch (comp_symbol) {\n      case Occurence.Any:\n        symbol_index = value.indexOf(comp_value.toLowerCase());\n        if (symbol_index < 0) {\n          this._status = false;\n        } break;\n      case Occurence.First:\n        symbol_index = value.indexOf(comp_value.toLowerCase());\n        if (symbol_index > 0 || symbol_index < 0) {\n          this._status = false;\n        } break;\n      default:\n        symbol_index = value.lastIndexOf(comp_value.toLowerCase());\n        if (symbol_index < value.length - comp_value.length) {\n          this._status = false;\n        }\n    }\n  }\n\n  private checkComparisionOp(column, value, symbol) {\n    var compare_value = this._where[column][symbol];\n    switch (symbol) {\n      // greater than\n      case '>': if (value <= compare_value) {\n        this._status = false;\n      } break;\n      // less than\n      case '<': if (value >= compare_value) {\n        this._status = false;\n      } break;\n      // less than equal\n      case '<=': if (value > compare_value) {\n        this._status = false;\n      } break;\n      // greather than equal\n      case '>=': if (value < compare_value) {\n        this._status = false;\n      } break;\n      // between\n      case '-': if (value < compare_value.Low || value > compare_value.High) {\n        this._status = false;\n      } break;\n      // Not equal to\n      case '!=': if (value === compare_value) {\n        this._status = false;\n      } break;\n    }\n  }\n}","export class Config {\r\n    static _isLogEnabled = false;\r\n}","export enum Occurence {\r\n    First = 'f',\r\n    Last = 'l',\r\n    Any = 'a'\r\n}\r\n\r\nexport enum WebWorker_Status {\r\n    Registered = \"registerd\",\r\n    Failed = \"failed\",\r\n    NotStarted = \"not_started\"\r\n}\r\n\r\nexport enum Connection_Status {\r\n    Connected = \"connected\",\r\n    Closed = \"closed\",\r\n    NotStarted = \"not_started\",\r\n    UnableToStart = \"unable_to_start\",\r\n    ClosedByJsStore = \"closed_by_jsstore\"\r\n}\r\n\r\nexport enum WhereQryOption {\r\n    In = \"In\",\r\n    Like = \"Like\",\r\n    Or = \"Or\"\r\n}\r\n\r\nexport enum Data_Type {\r\n    String = \"string\",\r\n    Object = \"object\",\r\n    Array = \"array\",\r\n    Number = \"number\",\r\n    Boolean = \"boolean\",\r\n    Null = \"null\"\r\n}\r\n\r\nexport enum Error_Type {\r\n    UndefinedColumn = \"undefined_column\",\r\n    UndefinedValue = \"undefined_value\",\r\n    UndefinedColumnName = \"undefined_column_name\",\r\n    UndefinedDbName = \"undefined_database_name\",\r\n    UndefinedColumnValue = \"undefined_column_value\",\r\n    NotArray = \"not_array\",\r\n    NoValueSupplied = \"no_value_supplied\",\r\n    ColumnNotExist = \"column_not_exist\",\r\n    EnableSearchOff = \"enable_search_off\",\r\n    InvalidOp = \"invalid_operator\",\r\n    NullValue = \"null_value\",\r\n    BadDataType = \"bad_data_type\",\r\n    NextJoinNotExist = \"next_join_not_exist\",\r\n    TableNotExist = \"table_not_exist\",\r\n    DbNotExist = \"db_not_exist\",\r\n    ConnectionAborted = \"connection_aborted\",\r\n    ConnectionClosed = \"connection_closed\",\r\n    NotObject = \"not_object\",\r\n    InvalidConfig = \"invalid_config\",\r\n    DbBlocked = \"Db_blocked\",\r\n    IndexedDbUndefined = \"indexeddb_undefined\",\r\n    IndexedDbBlocked = \"indexeddb_blocked\",\r\n}","export * from './business/idb_helper';\r\nexport * from './enums';\r\nexport * from './start';","import { IError } from \"../interfaces\";\r\n\r\nexport class Base {\r\n    _results = null;\r\n    _onSuccess: (results) => void;\r\n    _onError: (err: IError) => void;\r\n    _errorOccured: boolean = false;\r\n    _errorCount = 0;\r\n    _transaction: IDBTransaction;\r\n    _objectStore: IDBObjectStore;\r\n\r\n    protected onErrorOccured(e) {\r\n        ++this._errorCount;\r\n        if (this._errorCount === 1) {\r\n            if (this._onError != null) {\r\n                this._onError((e as any).target.error);\r\n            }\r\n        }\r\n        console.error(e);\r\n    }\r\n}","import { Base } from \"./base_logic\";\r\nimport { IError } from \"../interfaces\";\r\nimport { QueryExecutor } from \"../query_executor\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\n\r\nexport class Get extends Base {\r\n    _key: string;\r\n    constructor(key: string, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n        super();\r\n        this._key = key;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n    }\r\n\r\n    public execute() {\r\n        var getData = (column, value) => {\r\n            var cursor_request = this._objectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n            cursor_request.onerror = function (e) {\r\n                this._errorOccured = true;\r\n                this.on_errorOccured(e);\r\n            }.bind(this);\r\n            cursor_request.onsuccess = function (e) {\r\n                var cursor: IDBCursorWithValue = e.target.result;\r\n                if (cursor) {\r\n                    this._results = cursor.value['Value'];\r\n                }\r\n            }.bind(this);\r\n        };\r\n        this.initTransaction();\r\n        getData(QueryExecutor._columnName, this._key);\r\n\r\n    }\r\n\r\n    private initTransaction() {\r\n        IdbHelper.createTransaction([QueryExecutor._tableName], this.onTransactionCompleted.bind(this), 'readonly');\r\n        this._objectStore = IdbHelper._transaction.objectStore(QueryExecutor._tableName);\r\n    }\r\n\r\n    private onTransactionCompleted() {\r\n        if (this._errorOccured === false) {\r\n            this._onSuccess(this._results);\r\n        }\r\n    }\r\n}\r\n","import { QueryExecutor } from '../query_executor';\r\nimport { Connection_Status } from '../enums';\r\n\r\nexport class IdbHelper {\r\n    static _dbConnection;\r\n    static _isDbDeletedByBrowser: boolean;\r\n    static _transaction: IDBTransaction = null;\r\n\r\n    static callDbDroppedByBrowser() {\r\n        this._isDbDeletedByBrowser = QueryExecutor._dbStatus.ConStatus === Connection_Status.Connected ? true : false;\r\n    }\r\n\r\n    static createTransaction(tableNames, callBack: () => void, mode?) {\r\n        if (this._transaction === null) {\r\n            mode = mode ? mode : \"readwrite\";\r\n            this._transaction = this._dbConnection.transaction(tableNames, mode);\r\n            this._transaction.oncomplete = () => {\r\n                this._transaction = null;\r\n                callBack();\r\n            };\r\n            (this._transaction as any).ontimeout = function () {\r\n                this._transaction = null;\r\n                console.error('transaction timed out');\r\n            };\r\n        }\r\n    }\r\n}","import { IError } from \"../interfaces\";\r\nimport * as JsStore from '../../index';\r\nimport { Connection_Status } from \"../enums\";\r\nimport { Utils } from \"../utils_logic\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\nimport { QueryExecutor } from \"../query_executor\";\r\n\r\nexport var temp_datas;\r\nexport class InitDb {\r\n    constructor(dbName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n        var db_request = self.indexedDB.open(dbName, 1);\r\n        IdbHelper._isDbDeletedByBrowser = false;\r\n        db_request.onerror = (event) => {\r\n            if ((event as any).target.error.name === 'InvalidStateError') {\r\n                JsStore.IdbHelper._dbStatus = {\r\n                    ConStatus: JsStore.Connection_Status.UnableToStart,\r\n                    LastError: JsStore.Error_Type.IndexedDbBlocked,\r\n                };\r\n            }\r\n            if (onError != null) {\r\n                onError((event as any).target.error);\r\n            }\r\n        };\r\n\r\n        db_request.onsuccess = (event) => {\r\n            QueryExecutor._dbStatus.ConStatus = Connection_Status.Connected;\r\n            IdbHelper._dbConnection = db_request.result;\r\n            IdbHelper._dbConnection.onclose = () => {\r\n                IdbHelper.callDbDroppedByBrowser();\r\n                Utils.updateDbStatus(Connection_Status.Closed, JsStore.Error_Type.ConnectionClosed);\r\n            };\r\n\r\n            IdbHelper._dbConnection.onversionchange = (e) => {\r\n                if (e.newVersion === null) { // An attempt is made to delete the db\r\n                    e.target.close(); // Manually close our connection to the db\r\n                    IdbHelper.callDbDroppedByBrowser();\r\n                    Utils.updateDbStatus(Connection_Status.Closed, JsStore.Error_Type.ConnectionClosed);\r\n                }\r\n            };\r\n\r\n            IdbHelper._dbConnection.onerror = (e) => {\r\n                QueryExecutor._dbStatus.LastError = \"Error occured in connection :\" + e.target.result;\r\n            };\r\n\r\n            IdbHelper._dbConnection.onabort = (e) => {\r\n                QueryExecutor._dbStatus = {\r\n                    ConStatus: Connection_Status.Closed,\r\n                    LastError: \"Connection aborted\"\r\n                };\r\n            };\r\n\r\n            if (onSuccess != null) {\r\n                onSuccess();\r\n            }\r\n        };\r\n\r\n        db_request.onupgradeneeded = (event: any) => {\r\n            var db = event.target.result,\r\n                column = \"Key\";\r\n            db.createObjectStore(QueryExecutor._tableName, {\r\n                keyPath: column\r\n            }).createIndex(column, column, { unique: true });\r\n        };\r\n    }\r\n}","import { QueryExecutor } from '../query_executor';\r\nimport { Connection_Status } from \"../enums\";\r\nimport { IInsert, IError, IQueryRequest, IQueryResult } from \"../interfaces\";\r\nimport { Remove } from \"./remove_logic\";\r\nimport { Set } from \"./set_logic\";\r\nimport { InitDb } from \"./init_db_logic\";\r\nimport { Get } from \"./get_logic\";\r\nimport { IdbHelper } from './idb_helper';\r\n\r\nexport class Main {\r\n    _onSuccess: (result) => void;\r\n    constructor(onSuccess = null) {\r\n        this._onSuccess = onSuccess;\r\n    }\r\n\r\n    public set(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n        var obj_insert = new Set(query, onSuccess, onError);\r\n        obj_insert.execute();\r\n    }\r\n\r\n    public remove(key: string, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n        var obj_delete = new Remove(key, onSuccess, onError);\r\n        obj_delete.execute();\r\n    }\r\n\r\n    public get(key: string, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n        var get_object = new Get(key, onSuccess, onError);\r\n        get_object.execute();\r\n    }\r\n\r\n    public createDb(onSuccess: () => void, onError: (err: IError) => void) {\r\n        var db_name = \"KeyStore\";\r\n        var init_db_object = new InitDb(db_name, onSuccess, onError);\r\n    }\r\n\r\n    public checkConnectionAndExecuteLogic(request: IQueryRequest) {\r\n        if (request.Name === 'create_db' || request.Name === 'open_db') {\r\n            this.executeLogic(request);\r\n        }\r\n        else {\r\n            switch (QueryExecutor._dbStatus.ConStatus) {\r\n                case Connection_Status.Connected: this.executeLogic(request); break;\r\n                case Connection_Status.NotStarted:\r\n                    setTimeout(function () {\r\n                        this.checkConnectionAndExecuteLogic(request);\r\n                    }.bind(this), 100); break;\r\n                case Connection_Status.Closed:\r\n                    if (IdbHelper._isDbDeletedByBrowser) {\r\n                        this.createDb(() => {\r\n                            IdbHelper._isDbDeletedByBrowser = false;\r\n                            this.checkConnectionAndExecuteLogic(request);\r\n                        }, (err) => {\r\n                            console.error(err);\r\n                        });\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    private returnResult(result) {\r\n        if (this._onSuccess) {\r\n            this._onSuccess(result);\r\n        }\r\n    }\r\n\r\n    private executeLogic(request: IQueryRequest) {\r\n        var onSuccess = function (results) {\r\n            this.returnResult({\r\n                ReturnedValue: results\r\n            } as IQueryResult);\r\n        }.bind(this),\r\n            onError = function (err) {\r\n                this.returnResult({\r\n                    ErrorDetails: err,\r\n                    ErrorOccured: true\r\n                } as IQueryResult);\r\n            }.bind(this);\r\n\r\n        switch (request.Name) {\r\n            case 'get':\r\n                this.get(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'set': this.set(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'remove': this.remove(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'create_db': this.createDb(onSuccess, onError); break;\r\n        }\r\n    }\r\n}","import { Base } from \"./base_logic\";\r\nimport { IError } from \"../interfaces\";\r\nimport { QueryExecutor } from \"../query_executor\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\n\r\nexport class Remove extends Base {\r\n    _key: string;\r\n    _rowAffected: number = 0;\r\n    constructor(key: string, onSuccess: (recordRemoved: number) => void, onError: (err: IError) => void) {\r\n        super();\r\n        this._key = key;\r\n        this._onSuccess = onSuccess;\r\n        this._onError = onError;\r\n    }\r\n\r\n    public execute() {\r\n        this.initTransaction();\r\n        var removeData = function (column, value) {\r\n            var cursor_request = this._objectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n            cursor_request.onerror = (e) => {\r\n                this._errorOccured = true;\r\n                this.onErrorOccured(e);\r\n            };\r\n            cursor_request.onsuccess = (e) => {\r\n                var cursor: IDBCursorWithValue = e.target.result;\r\n                if (cursor) {\r\n                    cursor.delete();\r\n                    ++this._rowAffected;\r\n                    cursor.continue();\r\n                }\r\n            };\r\n        }.bind(this);\r\n\r\n        if (!this._errorOccured) {\r\n            removeData(QueryExecutor._columnName, this._key);\r\n        }\r\n    }\r\n\r\n    private initTransaction() {\r\n        IdbHelper.createTransaction([QueryExecutor._tableName], this.onTransactionCompleted.bind(this));\r\n        this._objectStore = IdbHelper._transaction.objectStore(QueryExecutor._tableName);\r\n    }\r\n\r\n    private onTransactionCompleted() {\r\n        if (this._errorOccured === false) {\r\n            this._onSuccess(this._rowAffected);\r\n        }\r\n    }\r\n}","import { Base } from \"./base_logic\";\r\nimport { IInsert, IError } from \"../interfaces\";\r\nimport { IdbHelper } from \"./idb_helper\";\r\nimport { QueryExecutor } from \"../query_executor\";\r\n\r\nexport class Set extends Base {\r\n    _query: IInsert;\r\n    constructor(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n        super();\r\n        try {\r\n            this._query = query;\r\n            this._onSuccess = onSuccess;\r\n            this._onError = onError;\r\n        }\r\n        catch (ex) {\r\n            console.error(ex);\r\n        }\r\n    }\r\n\r\n    public execute() {\r\n        var updateIfExistElseInsert = () => {\r\n            var cursor_request = this._objectStore.index(QueryExecutor._columnName).openCursor(\r\n                IDBKeyRange.only(this._query[QueryExecutor._columnName])\r\n            );\r\n            cursor_request.onsuccess = (e) => {\r\n                var cursor: IDBCursorWithValue = (e as any).target.result;\r\n                if (cursor) {\r\n                    // cursor.value['Value'] = this._query['Value'];\r\n                    cursor.update(this._query);\r\n                }\r\n                else {\r\n                    insertData();\r\n                }\r\n            };\r\n\r\n            cursor_request.onerror = (e) => {\r\n                this._errorOccured = true;\r\n                this.onErrorOccured(e);\r\n            };\r\n\r\n        };\r\n        var insertData = () => {\r\n            var add_result = this._objectStore.add(this._query);\r\n            add_result.onerror = (e) => {\r\n                this._errorOccured = true;\r\n                this.onErrorOccured(e);\r\n            };\r\n        };\r\n        this.initTransaction();\r\n        updateIfExistElseInsert();\r\n    }\r\n\r\n    private initTransaction() {\r\n        IdbHelper.createTransaction([QueryExecutor._tableName], this.onTransactionCompleted.bind(this));\r\n        this._objectStore = IdbHelper._transaction.objectStore(QueryExecutor._tableName);\r\n    }\r\n\r\n    private onTransactionCompleted() {\r\n        if (this._errorOccured === false && this._onSuccess) {\r\n            this._onSuccess(null);\r\n        }\r\n    }\r\n}","export enum Connection_Status {\r\n    Connected = \"connected\",\r\n    Closed = \"closed\",\r\n    NotStarted = \"not_connected\"\r\n}","export * from './instance';","import { Utils } from \"./utils_logic\";\r\nimport { QueryExecutor } from './query_executor';\r\nimport { IQueryRequest, IError, IInsert } from \"./interfaces\";\r\n\r\n/**\r\n * Initialize KeyStore\r\n * \r\n */\r\nexport var init = () => {\r\n    Utils.setDbType();\r\n    if (indexedDB) {\r\n        QueryExecutor.prcoessQuery({\r\n            Name: 'create_db',\r\n            Query: null\r\n        } as IQueryRequest);\r\n    }\r\n};\r\n\r\n/**\r\n * return the value by key\r\n * \r\n * @param {string} key \r\n * @param {(result) => void} onSuccess \r\n * @param {(err: IError) => void} [onError=null] \r\n * @returns \r\n */\r\nexport var get = (key: string, onSuccess: (result) => void, onError: (err: IError) => void = null) => {\r\n    QueryExecutor.prcoessQuery({\r\n        Name: 'get',\r\n        OnError: onError,\r\n        OnSuccess: onSuccess,\r\n        Query: key\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * insert or update value\r\n * \r\n * @param {any} key \r\n * @param {any} value \r\n * @param {(result) => void} [onSuccess] \r\n * @param {(err: IError) => void} [onError] \r\n * @returns \r\n */\r\nexport var set = (key, value, onSuccess?: (result) => void, onError?: (err: IError) => void) => {\r\n    var query = {\r\n        Key: key,\r\n        Value: value\r\n    } as IInsert;\r\n    QueryExecutor.prcoessQuery({\r\n        Name: 'set',\r\n        OnError: onError,\r\n        OnSuccess: onSuccess,\r\n        Query: query\r\n    } as IQueryRequest);\r\n    return this;\r\n};\r\n\r\n/**\r\n * delete value\r\n * \r\n * @param {string} key \r\n * @param {(result) => void} [onSuccess=null] \r\n * @param {(err: IError) => void} [onError=null] \r\n * @returns \r\n */\r\nexport var remove = (key: string, onSuccess: (result) => void = null, onError: (err: IError) => void = null) => {\r\n    QueryExecutor.prcoessQuery({\r\n        Name: 'remove',\r\n        OnError: onError,\r\n        OnSuccess: onSuccess,\r\n        Query: key\r\n    } as IQueryRequest);\r\n    return this;\r\n};\r\n","import { IDbStatus, IQueryResult, IQueryRequest } from \"./interfaces\";\r\nimport { Connection_Status } from \"./enums\";\r\nimport { Main } from \"./business/main_logic\";\r\n\r\nexport class QueryExecutor {\r\n    static _requestQueue: IQueryRequest[] = [];\r\n    static _tableName = \"LocalStore\";\r\n    static _columnName = \"Key\";\r\n    static _isCodeExecuting = false;\r\n    static _dbStatus: IDbStatus = {\r\n        ConStatus: Connection_Status.NotStarted,\r\n        LastError: \"\"\r\n    };\r\n\r\n    static prcoessQuery(request: IQueryRequest) {\r\n        this._requestQueue.push(request);\r\n        if (this._requestQueue.length === 1) {\r\n            this.executeCode();\r\n        }\r\n    }\r\n\r\n    static executeCode() {\r\n        if (!this._isCodeExecuting && this._requestQueue.length > 0) {\r\n            this._isCodeExecuting = true;\r\n            var request: IQueryRequest = {\r\n                Name: this._requestQueue[0].Name,\r\n                Query: this._requestQueue[0].Query\r\n            } as IQueryRequest;\r\n            new Main(results => {\r\n                this.onQueryFinished(results);\r\n            }).checkConnectionAndExecuteLogic(request);\r\n        }\r\n    }\r\n\r\n    static onQueryFinished(message: IQueryResult) {\r\n        var finished_request: IQueryRequest = this._requestQueue.shift();\r\n        this._isCodeExecuting = false;\r\n        if (message.ErrorOccured) {\r\n            if (finished_request.OnError) {\r\n                finished_request.OnError(message.ErrorDetails);\r\n            }\r\n            else {\r\n                console.error(message.ErrorDetails);\r\n            }\r\n        }\r\n        else if (finished_request.OnSuccess) {\r\n            finished_request.OnSuccess(message.ReturnedValue);\r\n        }\r\n        this.executeCode();\r\n    }\r\n}\r\n\r\n// export var query_executor_instance = new QueryExecutor();\r\n\r\n// export default (new QueryExecutor());","import * as JsStore from '../index';\r\nimport { Connection_Status } from './enums';\r\nimport { QueryExecutor } from './query_executor';\r\n\r\nexport class Utils {\r\n    /**\r\n     * determine and set the DataBase Type\r\n     * \r\n     * \r\n     * @memberOf UtilityLogic\r\n     */\r\n    static setDbType() {\r\n        if (!indexedDB) {\r\n            indexedDB = (self as any).mozIndexedDB ||\r\n                (self as any).webkitIndexedDB || (self as any).msIndexedDB;\r\n        }\r\n        if (indexedDB) {\r\n            IDBTransaction = IDBTransaction ||\r\n                (self as any).webkitIDBTransaction || (self as any).msIDBTransaction;\r\n            (self as any).IDBKeyRange = (self as any).IDBKeyRange ||\r\n                (self as any).webkitIDBKeyRange || (self as any).msIDBKeyRange;\r\n        }\r\n        else {\r\n            JsStore.IdbHelper._dbStatus = {\r\n                ConStatus: JsStore.Connection_Status.UnableToStart,\r\n                LastError: JsStore.Error_Type.IndexedDbUndefined\r\n            };\r\n        }\r\n    }\r\n\r\n    static updateDbStatus(status: Connection_Status, err?: JsStore.Error_Type) {\r\n        if (err === undefined) {\r\n            QueryExecutor._dbStatus.ConStatus = status;\r\n        }\r\n        else {\r\n            QueryExecutor._dbStatus = {\r\n                ConStatus: status,\r\n                LastError: err\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { IError } from \"./interfaces\";\r\nimport { Error_Type } from \"./enums\";\r\nimport { Config } from \"./config\";\r\n\r\nexport class LogHelper implements IError {\r\n    _type: Error_Type;\r\n    _message: string;\r\n    private _info: any;\r\n\r\n    constructor(type: Error_Type, info: any = null) {\r\n        this._type = type;\r\n        this._info = info;\r\n        this._message = this.getMsg();\r\n    }\r\n\r\n    public throw() {\r\n        throw this.get();\r\n    }\r\n\r\n    static log(msg) {\r\n        if (Config._isLogEnabled) {\r\n            console.log(msg);\r\n        }\r\n    }\r\n\r\n    logError() {\r\n        console.error(this.get());\r\n    }\r\n\r\n    logWarning() {\r\n        console.warn(this.get());\r\n    }\r\n\r\n    public get() {\r\n        return {\r\n            _message: this._message,\r\n            _type: this._type\r\n        } as IError;\r\n    }\r\n\r\n    private getMsg() {\r\n        var err_msg: string;\r\n        switch (this._type) {\r\n            case Error_Type.NotArray:\r\n                err_msg = \"Supplied value is not an array\";\r\n                break;\r\n            case Error_Type.UndefinedColumn:\r\n                err_msg = \"Column is undefined in Where\";\r\n                break;\r\n            case Error_Type.UndefinedValue:\r\n                err_msg = \"Value is undefined in Where\";\r\n                break;\r\n            case Error_Type.UndefinedColumnName:\r\n                err_msg = \"Column name is undefined '\" + this._info['TableName'] + \"'\";\r\n                break;\r\n            case Error_Type.UndefinedDbName:\r\n                err_msg = \"Database name is not supplied\";\r\n                break;\r\n            case Error_Type.UndefinedColumnValue:\r\n                err_msg = \"Column value is undefined\";\r\n                break;\r\n            case Error_Type.NoValueSupplied:\r\n                err_msg = \"No value supplied\";\r\n                break;\r\n            case Error_Type.InvalidOp:\r\n                err_msg = \"Invalid Op Value '\" + this._info['Op'] + \"'\";\r\n                break;\r\n            case Error_Type.ColumnNotExist:\r\n                err_msg = \"Column '\" + this._info['ColumnName'] + \"' does not exist\";\r\n                break;\r\n            case Error_Type.EnableSearchOff:\r\n                err_msg = \"Search is turned off for the Column '\" + this._info['ColumnName'] + \"'\";\r\n                break;\r\n            case Error_Type.NullValue:\r\n                err_msg = \"Null value is not allowed for column '\" + this._info['ColumnName'] + \"'\";\r\n                break;\r\n            case Error_Type.BadDataType:\r\n                err_msg = \"Supplied value for column '\" + this._info['ColumnName'] +\r\n                    \"' does not have valid type\";\r\n                break;\r\n            case Error_Type.NextJoinNotExist: err_msg = \"Next join details not supplied\";\r\n                break;\r\n            case Error_Type.TableNotExist:\r\n                err_msg = \"Table '\" + this._info['TableName'] + \"' does not exist\";\r\n                break;\r\n            case Error_Type.DbNotExist:\r\n                err_msg = \"Database '\" + this._info['DbName'] + \"' does not exist\";\r\n                break;\r\n            case Error_Type.NotObject:\r\n                err_msg = \"supplied value is not object\";\r\n                break;\r\n            case Error_Type.InvalidOp:\r\n                err_msg = \"Invalid Config '\" + this._info['Config'] + \" '\";\r\n            case Error_Type.DbBlocked:\r\n                err_msg = `database is blocked, cant be deleted right now`;\r\n            default:\r\n                err_msg = this._message;\r\n                break;\r\n        }\r\n        return err_msg;\r\n    }\r\n}","import { IColumnOption } from \"../interfaces\";\nimport { LogHelper } from \"../log_helper\";\nimport { Error_Type } from \"../enums\";\n\nexport class Column {\n    _name: string;\n    _autoIncrement: boolean;\n    _primaryKey: boolean;\n    _unique: boolean;\n    _notNull: boolean;\n    _dataType: string;\n    _default: any;\n    _multiEntry: boolean;\n    _enableSearch: boolean;\n\n    constructor(key: IColumnOption, tableName: string) {\n        if (key.Name != null) {\n            this._name = key.Name;\n        }\n        else {\n            var err = new LogHelper(Error_Type.UndefinedColumnName, { TableName: tableName });\n            err.throw();\n        }\n        this._autoIncrement = key.AutoIncrement != null ? key.AutoIncrement : false;\n        this._primaryKey = key.PrimaryKey != null ? key.PrimaryKey : false;\n        this._unique = key.Unique != null ? key.Unique : false;\n        this._notNull = key.NotNull != null ? key.NotNull : false;\n        this._dataType = key.DataType != null ? key.DataType : (key.AutoIncrement ? 'number' : null);\n        this._default = key.Default;\n        this._multiEntry = key.MultiEntry == null ? false : key.MultiEntry;\n        this._enableSearch = key.EnableSearch == null ? true : key.EnableSearch;\n    }\n\n}","import { IDataBaseOption } from \"../interfaces\";\nimport { Table } from \"./table\";\n\nexport class DataBase {\n    _name: string;\n    _tables: Table[] = [];\n\n    constructor(dataBase: IDataBaseOption) {\n        this._name = dataBase.Name;\n        dataBase.Tables.forEach(function (item) {\n            this._tables.push(new Table(item));\n        }, this);\n    }\n}\n","import { DataBase } from \"./database\";\nimport { TableHelper } from \"./table_helper\";\nimport { Table } from \"./table\";\n\nexport class DbHelper {\n    _name: string;\n    _tables: Table[] = [];\n\n    constructor(dataBase: DataBase) {\n        this._name = dataBase._name;\n        this._tables = dataBase._tables;\n    }\n\n    public createMetaData(callBack: (tablesMetaData: TableHelper[]) => void) {\n        var index = 0,\n            table_helpers: TableHelper[] = [],\n            createMetaDataForTable = () => {\n                if (index < this._tables.length) {\n                    var table: Table = this._tables[index],\n                        table_helper: TableHelper = new TableHelper(table);\n                    table_helper.createMetaData(this._name, () => {\n                        table_helper._callback = null;\n                        table_helpers.push(table_helper);\n                        createMetaDataForTable();\n                    });\n                    ++index;\n                }\n                else {\n                    callBack(table_helpers);\n                }\n            };\n        createMetaDataForTable();\n    }\n}","import { ITableOption } from \"../interfaces\";\nimport { Column } from \"./column\";\n\nexport class Table {\n    _name: string;\n    _columns: Column[] = [];\n    _version: number;\n    _primaryKey: string;\n\n    constructor(table: ITableOption) {\n        this._name = table.Name;\n        this._version = table.Version == null ? 1 : table.Version;\n        table.Columns.forEach(function (item) {\n            this._columns.push(new Column(item, table.Name));\n        }, this);\n    }\n}","import { Table } from \"./table\";\nimport { Column } from \"./column\";\nimport * as KeyStore from \"../keystore/index\";\nimport { IdbHelper } from \"../business/idb_helper\";\n\nexport class TableHelper {\n    _name: string;\n    _columns: Column[] = [];\n\n    // internal Members\n    _primaryKey: string;\n    _version: number;\n    _requireDelete: boolean = false;\n    _requireCreation: boolean = false;\n    _callback: () => void;\n\n    constructor(table: Table) {\n        this._name = table._name;\n        this._version = table._version;\n        this._columns = table._columns;\n        this.setPrimaryKey();\n    }\n\n    public createMetaData(dbName: string, callBack: () => void) {\n        this._callback = callBack;\n        this.setRequireDelete(dbName);\n        this.setDbVersion(dbName);\n    }\n\n    private setPrimaryKey() {\n        this._columns.every(function (item) {\n            this._primaryKey = item._primaryKey ? item._name : \"\";\n            return !item._primaryKey;\n        }, this);\n    }\n\n    private setRequireDelete(dbName: string) {\n        KeyStore.get(\"JsStore_\" + dbName + \"_\" + this._name + \"_Version\", function (tableVersion) {\n            if (tableVersion == null) {\n                this._requireCreation = true;\n            }\n            // mark only table which has version greater than store version\n            else if (tableVersion < this._version) {\n                this._requireDelete = true;\n            }\n        }.bind(this));\n    }\n\n    private setDbVersion(dbName: string) {\n        IdbHelper._dbVersion = IdbHelper._dbVersion > this._version ? IdbHelper._dbVersion : this._version;\n        // setting db version\n        KeyStore.set(`JsStore_${dbName}_Db_Version`, IdbHelper._dbVersion);\n        // setting table version\n        KeyStore.set(`JsStore_${dbName}_${this._name}_Version`, IdbHelper._dbVersion, this._callback);\n        this._version = IdbHelper._dbVersion;\n    }\n}","import { IdbHelper } from \"./business/idb_helper\";\r\nimport { LogHelper } from \"./log_helper\";\r\nimport {\r\n    IWebWorkerRequest, IWebWorkerResult,\r\n    ITranscationQry, IError, IUpdate,\r\n    IInsert, IRemove, IDataBaseOption, ISelect, ISelectJoin, IDbInfo\r\n} from \"./interfaces\";\r\nimport { Connection_Status, Error_Type, Data_Type } from \"./enums\";\r\nimport { Config } from \"./config\";\r\nimport { OpenDb } from \"./business/open_db\";\r\nimport { DropDb } from \"./business/drop_db\";\r\nimport * as KeyStore from \"./keystore/index\";\r\nimport { DbHelper } from \"./model/db_helper\";\r\nimport { TableHelper } from \"./model/table_helper\";\r\nimport { CreateDb } from \"./business/create_db\";\r\nimport { DataBase } from \"./model/database\";\r\nimport * as Select from './business/select/index';\r\nimport * as Count from './business/count/index';\r\nimport * as Insert from './business/insert/index';\r\nimport * as Remove from './business/remove/index';\r\nimport * as Update from './business/update/index';\r\nimport { Util } from \"./util\";\r\nimport { Clear } from \"./business/clear\";\r\nimport { BulkInsert } from \"./business/bulk_insert\";\r\n\r\nexport class QueryExecutor {\r\n\r\n    public checkConnectionAndExecuteLogic(request: IWebWorkerRequest) {\r\n        LogHelper.log('checking connection and executing request:' + request.Name);\r\n        switch (request.Name) {\r\n            case 'create_db':\r\n            case 'is_db_exist':\r\n            case 'get_db_version':\r\n            case 'get_db_list':\r\n            case 'get_db_schema':\r\n            case 'open_db':\r\n                this.executeLogic(request);\r\n                break;\r\n            case 'change_log_status':\r\n                this.changeLogStatus(request.Query['logging']); break;\r\n            default:\r\n                switch (IdbHelper._dbStatus.ConStatus) {\r\n                    case Connection_Status.Connected: {\r\n                        this.executeLogic(request);\r\n                    } break;\r\n                    case Connection_Status.Closed: {\r\n                        if (IdbHelper._isDbDeletedByBrowser === true) {\r\n                            this.createDb(null, function () {\r\n                                IdbHelper._isDbDeletedByBrowser = false;\r\n                                this.checkConnectionAndExecuteLogic(request);\r\n                            }.bind(this), request.OnError);\r\n                        }\r\n                        else {\r\n                            this.openDb(IdbHelper._activeDb._name, () => {\r\n                                this.checkConnectionAndExecuteLogic(request);\r\n                            }, request.OnError);\r\n                        }\r\n                    } break;\r\n                }\r\n        }\r\n    }\r\n\r\n    private changeLogStatus(enableLog) {\r\n        Config._isLogEnabled = enableLog;\r\n    }\r\n\r\n    private returnResult(result) {\r\n        (self as any).postMessage(result);\r\n    }\r\n\r\n    private executeLogic(request: IWebWorkerRequest) {\r\n        var onSuccess = (results?) => {\r\n            this.returnResult({\r\n                ReturnedValue: results\r\n            } as IWebWorkerResult);\r\n        };\r\n        var onError = (err) => {\r\n            this.returnResult({\r\n                ErrorDetails: err,\r\n                ErrorOccured: true\r\n            } as IWebWorkerResult);\r\n        };\r\n\r\n        switch (request.Name) {\r\n            case 'select':\r\n                this.select(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'insert': this.insert(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'update': this.update(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'remove': this.remove(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'is_db_exist': this.isDbExist(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'get_db_version':\r\n                IdbHelper.getDbVersion(request.Query, onSuccess);\r\n                break;\r\n            case 'get_db_list':\r\n                IdbHelper.getDbList(onSuccess);\r\n                break;\r\n            case 'get_db_schema':\r\n                IdbHelper.getDbSchema(request.Query, onSuccess);\r\n                break;\r\n            case 'open_db':\r\n                if (IdbHelper._isDbDeletedByBrowser === true) {\r\n                    this.createDb(null, () => {\r\n                        IdbHelper._isDbDeletedByBrowser = false;\r\n                        onSuccess();\r\n                    }, onError);\r\n                }\r\n                else {\r\n                    this.openDb(request.Query, onSuccess, onError);\r\n                }\r\n                break;\r\n            case 'create_db': this.createDb(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'clear': this.clear(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'drop_db': this.dropDb(onSuccess, onError);\r\n                break;\r\n            case 'count': this.count(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'bulk_insert': this.bulkInsert(request.Query, onSuccess, onError);\r\n                break;\r\n            case 'export_json': this.exportJson(request.Query, onSuccess, onError);\r\n                break;\r\n            default: console.error('The Api:-' + request.Name + ' does not support.');\r\n        }\r\n    }\r\n\r\n    private openDb(dbName, onSuccess: () => void, onError: (err: IError) => void) {\r\n        IdbHelper.getDbVersion(dbName, (dbVersion) => {\r\n            if (dbVersion !== 0) {\r\n                IdbHelper._dbVersion = dbVersion;\r\n                IdbHelper.getDbSchema(dbName, (result) => {\r\n                    IdbHelper._activeDb = result;\r\n                    var open_db_object = new OpenDb(onSuccess, onError);\r\n                    open_db_object.execute();\r\n                });\r\n            }\r\n            else {\r\n                var err = new LogHelper(Error_Type.DbNotExist, { DbName: dbName });\r\n                err.logError();\r\n                onError(err.get());\r\n            }\r\n        });\r\n    }\r\n\r\n    private closeDb() {\r\n        if (IdbHelper._dbStatus.ConStatus === Connection_Status.Connected) {\r\n            IdbHelper._dbStatus.ConStatus = Connection_Status.ClosedByJsStore;\r\n            IdbHelper._dbConnection.close();\r\n        }\r\n    }\r\n\r\n    private dropDb(onSuccess: () => void, onError: (err: IError) => void) {\r\n        this.closeDb();\r\n        var drop_db_object = new DropDb(onSuccess, onError);\r\n        drop_db_object.deleteDb();\r\n    }\r\n\r\n    private update(query: IUpdate, onSuccess: () => void, onError: (err: IError) => void) {\r\n        var update_db_object = new Update.Instance(query, onSuccess, onError);\r\n        update_db_object.execute();\r\n    }\r\n\r\n    private insert(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n        var insert_object = new Insert.Instance(query, onSuccess, onError);\r\n        insert_object.execute();\r\n    }\r\n\r\n    private bulkInsert(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n        var bulk_insert_object = new BulkInsert(query, onSuccess, onError);\r\n        bulk_insert_object.execute();\r\n    }\r\n\r\n    private remove(query: IRemove, onSuccess: () => void, onError: (err: IError) => void) {\r\n        var delete_object = new Remove.Instance(query, onSuccess, onError);\r\n        delete_object.execute();\r\n    }\r\n\r\n    private select(query, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n        if (typeof query.From === 'object') {\r\n            var select_join_object = new Select.Join(query as ISelectJoin, onSuccess, onError);\r\n        }\r\n        else {\r\n            var select_instance = new Select.Instance(query, onSuccess, onError);\r\n            select_instance.execute();\r\n        }\r\n    }\r\n\r\n    private count(query, onSuccess: () => void, onError: (err: IError) => void) {\r\n        if (typeof query.From === 'object') {\r\n            query['Count'] = true;\r\n            var select_join_object = new Select.Join(query, onSuccess, onError);\r\n        }\r\n        else {\r\n            var count_object = new Count.Instance(query, onSuccess, onError);\r\n            count_object.execute();\r\n        }\r\n    }\r\n\r\n    private createDb(\r\n        dataBase: IDataBaseOption, onSuccess: () => void, onError: (err: IError) => void\r\n    ) {\r\n        var processCreateDb = () => {\r\n            // save dbSchema in keystore\r\n            KeyStore.set(\"JsStore_\" + IdbHelper._activeDb._name + \"_Schema\", IdbHelper._activeDb);\r\n            // create meta data\r\n            var db_helper = new DbHelper(IdbHelper._activeDb);\r\n            db_helper.createMetaData((tablesMetaData: TableHelper[]) => {\r\n                var create_db_object = new CreateDb(tablesMetaData, onSuccess, onError);\r\n            });\r\n        };\r\n        if (dataBase == null) {\r\n            processCreateDb();\r\n        }\r\n        else {\r\n            this.closeDb();\r\n            IdbHelper.getDbVersion(dataBase.Name, (version) => {\r\n                IdbHelper._dbVersion = version ? version : 1;\r\n                IdbHelper._activeDb = new DataBase(dataBase);\r\n                processCreateDb();\r\n            });\r\n        }\r\n    }\r\n\r\n    private clear(tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n        var clear_object = new Clear(tableName, onSuccess, onError);\r\n        clear_object.execute();\r\n    }\r\n\r\n    private exportJson(query: ISelect, onSuccess: (url: string) => void, onError: (err: IError) => void) {\r\n        this.select(query, (results) => {\r\n            var url = URL.createObjectURL(new Blob([JSON.stringify(results)], {\r\n                type: \"text/json\"\r\n            }));\r\n            onSuccess(url);\r\n        }, (err) => {\r\n            onError(err);\r\n        });\r\n    }\r\n\r\n    private isDbExist(dbInfo: any, onSuccess: (isExist: boolean) => void, onError: (err: IError) => void) {\r\n        if (IdbHelper._dbStatus.ConStatus !== Connection_Status.UnableToStart) {\r\n            if (Util.getType(dbInfo) === Data_Type.String) {\r\n                IdbHelper.getDbVersion(dbInfo, (dbVersion) => {\r\n                    onSuccess(Boolean(dbVersion));\r\n                });\r\n            }\r\n            else {\r\n                IdbHelper.getDbVersion(dbInfo.DbName, (dbVersion) => {\r\n                    onSuccess(dbInfo.Table.Version <= dbVersion);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            var error = {\r\n                _message: null,\r\n                _type: IdbHelper._dbStatus.LastError,\r\n            } as IError;\r\n            switch (error._type) {\r\n                case Error_Type.IndexedDbBlocked:\r\n                    error._message = \"IndexedDB is blocked\"; break;\r\n                case Error_Type.IndexedDbUndefined:\r\n                    error._message = \"IndexedDB is not supported\"; break;\r\n            }\r\n            onError(error);\r\n        }\r\n    }\r\n}","import * as KeyStore from \"./keystore/index\";\r\nimport { LogHelper } from \"./log_helper\";\r\nimport { QueryExecutor } from \"./query_executor\";\r\nexport var registerEvents = () => {\r\n    self.onmessage = (e) => {\r\n        LogHelper.log(\"Request executing from WebWorker, request name: \" + e.data.Name);\r\n        var request = e.data;\r\n        var query_executor = new QueryExecutor();\r\n        query_executor.checkConnectionAndExecuteLogic(request);\r\n    };\r\n};\r\nregisterEvents();\r\nKeyStore.init();","import { Data_Type } from \"./enums\";\r\n\r\nexport class Util {\r\n    static isNull(value) {\r\n        if (value == null) {\r\n            return true;\r\n        } else {\r\n            switch (typeof value) {\r\n                case 'string': return value.length === 0;\r\n                case 'number': return isNaN(value);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static getObjectFirstKey(value) {\r\n        for (var key in value) {\r\n            return key;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *  get data type of supplied value\r\n     * \r\n     * @static\r\n     * @param {any} value \r\n     * @returns \r\n     * @memberof Util\r\n     */\r\n    static getType(value) {\r\n        if (value === null) {\r\n            return Data_Type.Null;\r\n        }\r\n        var type = typeof value;\r\n        switch (type) {\r\n            case 'object':\r\n                if (Array.isArray(value)) {\r\n                    return Data_Type.Array;\r\n                }\r\n            default:\r\n                return type;\r\n        }\r\n    }\r\n}"],"sourceRoot":""}