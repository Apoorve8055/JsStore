{"version":3,"file":"jsStorage.js","sourceRoot":"","sources":["../../Business/CommonLogic.ts","../../Business/IndexDbLogic.ts","../../Model/Column.ts","../../Model/Table.ts","../../Model/DataBase.ts","../../Business/MainLogic.ts","../../index.ts","../../Business/FilesCollection.ts","../../Business/UtilityLogic.ts","../../Business/WebSqlLogic.ts"],"names":[],"mappings":"AAAA,IAAO,SAAS,CAwBf;AAxBD,WAAO,SAAS;IAEZ,IAAY,MAGX;IAHD,WAAY,MAAM;QACd,6CAAS,CAAA;QACT,uCAAM,CAAA;IACV,CAAC,EAHW,MAAM,GAAN,gBAAM,KAAN,gBAAM,QAGjB;IAAA,CAAC;AAmBN,CAAC,EAxBM,SAAS,KAAT,SAAS,QAwBf;ACxBD,IAAO,SAAS,CAuDf;AAvDD,WAAO,SAAS;IACZ,IAAc,QAAQ,CAqDrB;IArDD,WAAc,QAAQ;QAClB;YAAA;gBAEI,iBAAY,GAAG,UAAU,SAAiB,EAAE,QAAkB;oBAC1D,IAAI,IAAI,GAAiB,IAAI,CAAC;oBAC9B,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;oBAEhE,SAAS,CAAC,OAAO,GAAG,UAAU,KAAK;wBAC/B,MAAM,2BAA2B,CAAA;oBACrC,CAAC,CAAC;oBAEF,SAAS,CAAC,SAAS,GAAG,UAAU,KAAK;wBACjC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC;oBACzC,CAAC,CAAC;oBAEF,SAAS,CAAC,eAAe,GAAG,UAAU,KAAK;wBACvC,IAAI,EAAE,GAAS,KAAM,CAAC,MAAM,CAAC,MAAM,CAAC;wBACpC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,IAAI;4BAClC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gCACrB,gCAAgC;gCAChC,EAAE,CAAC,CAAC,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oCAC1C,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCACpC,CAAC;gCACD,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;4BACrC,CAAC;4BACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gCAC5B,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;4BACrC,CAAC;wBACL,CAAC,CAAC,CAAA;oBAEN,CAAC,CAAA;gBACL,CAAC,CAAA;YAqBL,CAAC;YAnBW,wCAAiB,GAAzB,UAA0B,YAAY,EAAE,IAAI;gBACxC,IAAI,CAAC;oBACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC7B,IAAI,KAAK,GAAG,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE;4BAClD,OAAO,EAAE,IAAI,CAAC,UAAU;yBAC3B,CAAC,CAAC;oBACP,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,KAAK,GAAG,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE;4BAClD,aAAa,EAAE,IAAI;yBACtB,CAAC,CAAC;oBACP,CAAC;oBACD,YAAY,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC5E,CAAC;gBACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC;YACL,CAAC;YAEL,mBAAC;QAAD,CAAC,AAnDD,IAmDC;QAnDY,qBAAY,eAmDxB,CAAA;IACL,CAAC,EArDa,QAAQ,GAAR,kBAAQ,KAAR,kBAAQ,QAqDrB;AACL,CAAC,EAvDM,SAAS,KAAT,SAAS,QAuDf;ACvDD,IAAO,SAAS,CA2Bf;AA3BD,WAAO,SAAS;IACZ,IAAc,KAAK,CAyBlB;IAzBD,WAAc,KAAK;QAMf;YAKI,gBAAY,GAAY;gBACpB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA;gBACxB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,4BAA4B,CAAC;gBACvC,CAAC;gBACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC7E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;YAExE,CAAC;YAEL,aAAC;QAAD,CAAC,AAjBD,IAiBC;QAjBY,YAAM,SAiBlB,CAAA;IAEL,CAAC,EAzBa,KAAK,GAAL,eAAK,KAAL,eAAK,QAyBlB;AACL,CAAC,EA3BM,SAAS,KAAT,SAAS,QA2Bf;AC3BD,IAAO,SAAS,CA8Df;AA9DD,WAAO,SAAS;IACZ,IAAc,KAAK,CA4DlB;IA5DD,WAAc,KAAK;QAEf;YAQI,gBAAgB;YAChB,eAAY,IAAY,EAAE,OAAuB,EAAE,OAAe;gBARlE,SAAI,GAAW,EAAE,CAAC;gBAClB,YAAO,GAAkB,EAAE,CAAC;gBAE5B,kBAAa,GAAY,KAAK,CAAC;gBAC/B,oBAAe,GAAY,KAAK,CAAC;gBACjC,eAAU,GAAW,EAAE,CAAC;gBAIpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,IAAI,GAAG,IAAI,CAAC;gBAChB,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI;oBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,MAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAA;gBAEF,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC;YAED,iBAAiB;YAET,6BAAa,GAArB;gBACI,4BAA4B;gBAC5B,IAAI,IAAI,GAAG,IAAI,CAAC;gBAChB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI;oBAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC5B,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC,CAAC,CAAA;YAEN,CAAC;YAEO,gCAAgB,GAAxB;gBACI,IAAI,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClE,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;oBAC/E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAChC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC9B,CAAC;gBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;YAE3D,CAAC;YAEO,4BAAY,GAApB,UAAqB,SAAiB;gBAClC,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;oBACpB,YAAY,CAAC,OAAO,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;gBACtD,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxE,YAAY,CAAC,OAAO,CAAC,sBAAsB,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACvE,CAAC;YACL,CAAC;YAEL,YAAC;QAAD,CAAC,AAzDD,IAyDC;QAzDY,WAAK,QAyDjB,CAAA;IACL,CAAC,EA5Da,KAAK,GAAL,eAAK,KAAL,eAAK,QA4DlB;AACL,CAAC,EA9DM,SAAS,KAAT,SAAS,QA8Df;AC9DD,IAAO,SAAS,CAUf;AAVD,WAAO,SAAS;IACZ,IAAc,KAAK,CAQlB;IARD,WAAc,KAAK;QACf;YAGI,kBAAY,MAAoB;gBAFhC,SAAI,GAAW,WAAW,CAAC;gBAC3B,WAAM,GAAiB,EAAE,CAAC;gBAEtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,CAAC;YACL,eAAC;QAAD,CAAC,AAND,IAMC;QANY,cAAQ,WAMpB,CAAA;IACL,CAAC,EARa,KAAK,GAAL,eAAK,KAAL,eAAK,QAQlB;AACL,CAAC,EAVM,SAAS,KAAT,SAAS,QAUf;ACVD,IAAO,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;AACrC,IAAO,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC3C,IAAO,SAAS,CAuCf;AAvCD,WAAO,SAAS;IACZ;QAEI;YAcA;;;;;kBAKM;YACE,cAAS,GAAG;gBACf,MAAc,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAK,MAAc,CAAC,YAAY,IAAK,MAAc,CAAC,eAAe,IAAK,MAAc,CAAC,WAAW,CAAC;gBAC/I,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACZ,UAAA,MAAM,GAAG,UAAA,MAAM,CAAC,SAAS,CAAC;oBACzB,MAAc,CAAC,cAAc,GAAI,MAAc,CAAC,cAAc,IAAK,MAAc,CAAC,oBAAoB,IAAK,MAAc,CAAC,gBAAgB,CAAC;oBAC3I,MAAc,CAAC,WAAW,GAAI,MAAc,CAAC,WAAW,IAAK,MAAc,CAAC,iBAAiB,IAAK,MAAc,CAAC,aAAa,CAAA;gBACnI,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAE,MAAc,CAAC,YAAY,CAAC,CAAC,CAAC;oBACpC,UAAA,MAAM,GAAG,UAAA,MAAM,CAAC,MAAM,CAAC;gBAC3B,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,MAAM,4CAA4C,CAAC;gBACvD,CAAC;YACL,CAAC,CAAA;YAhCG,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;QAED,uBAAQ,GAAR,UAAS,QAAkB;YACvB,EAAE,CAAC,CAAC,UAAA,MAAM,IAAI,UAAA,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC7B,UAAA,UAAU,GAAG,IAAI,UAAA,QAAQ,CAAC,YAAY,EAAE,CAAC;gBACzC,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBACrE,UAAA,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YACjD,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,UAAA,SAAS,GAAG,IAAI,UAAA,QAAQ,CAAC,WAAW,EAAE,CAAC;YAC3C,CAAC;QACL,CAAC;QAsBL,WAAC;IAAD,CAAC,AArCD,IAqCC;IArCY,cAAI,OAqChB,CAAA;AACL,CAAC,EAvCM,SAAS,KAAT,SAAS,QAuCf;ACxCD,gDAAgD;AAChD,iDAAiD;AACjD,wCAAwC;AACxC,uCAAuC;AACvC,0CAA0C;AAC1C,8CAA8C;ACN9C,uCAAuC;ACAvC,IAAO,SAAS,CAKf;AALD,WAAO,SAAS;IACZ,IAAK,MAGJ;IAHD,WAAK,MAAM;QACP,6CAAS,CAAA;QACT,uCAAM,CAAA;IACV,CAAC,EAHI,MAAM,KAAN,MAAM,QAGV;IAAA,CAAC;AACN,CAAC,EALM,SAAS,KAAT,SAAS,QAKf;ACLD,IAAO,SAAS,CAKf;AALD,WAAO,SAAS;IACZ,IAAc,QAAQ,CAGrB;IAHD,WAAc,QAAQ;QAClB;YAAA;YACA,CAAC;YAAD,kBAAC;QAAD,CAAC,AADD,IACC;QADY,oBAAW,cACvB,CAAA;IACL,CAAC,EAHa,QAAQ,GAAR,kBAAQ,KAAR,kBAAQ,QAGrB;AACL,CAAC,EALM,SAAS,KAAT,SAAS,QAKf","sourcesContent":["module JsStorage {\r\n\r\n    export enum DBType {\r\n        IndexedDb,\r\n        WebSql\r\n    };\r\n\r\n    export interface TableSchema {\r\n        Name: string,\r\n        Version: number\r\n    }\r\n\r\n    export interface ColumnSchema {\r\n        Name: string,\r\n        AutoIncrement: boolean,\r\n        Primarykey: boolean\r\n    }\r\n\r\n    export var DbType: DBType,\r\n        IndexDbObj: Business.IndexDbLogic,\r\n        WebSqlObj: Business.WebSqlLogic;\r\n\r\n\r\n\r\n}","module JsStorage {\r\n    export module Business {\r\n        export class IndexDbLogic {\r\n            DbConnection;\r\n            openDataBase = function (dbVersion: number, dataBase: DataBase) {\r\n                var That: IndexDbLogic = this;\r\n                var DbRequest = window.indexedDB.open(dataBase.Name, dbVersion);\r\n\r\n                DbRequest.onerror = function (event) {\r\n                    throw \"Error in opening DataBase\"\r\n                };\r\n\r\n                DbRequest.onsuccess = function (event) {\r\n                    That.DbConnection = DbRequest.result;\r\n                };\r\n\r\n                DbRequest.onupgradeneeded = function (event) {\r\n                    var db = (<any>event).target.result;\r\n                    dataBase.Tables.forEach(function (item) {\r\n                        if (item.RequireDelete) {\r\n                            // Delete the old datastore.    \r\n                            if (db.objectStoreNames.contains(item.Name)) {\r\n                                db.deleteObjectStore(item.Name);\r\n                            }\r\n                            That.createObjectStore(db, item);\r\n                        }\r\n                        else if (item.RequireCreation) {\r\n                            That.createObjectStore(db, item);\r\n                        }\r\n                    })\r\n\r\n                }\r\n            }\r\n\r\n            private createObjectStore(dbConnection, item) {\r\n                try {\r\n                    if (item.PrimaryKey.length > 0) {\r\n                        var store = dbConnection.createObjectStore(item.Name, {\r\n                            keyPath: item.PrimaryKey\r\n                        });\r\n                    }\r\n                    else {\r\n                        var store = dbConnection.createObjectStore(item.Name, {\r\n                            autoIncrement: true\r\n                        });\r\n                    }\r\n                    localStorage.setItem(\"JsStorage_\" + item.Name, item.Version.toString());\r\n                }\r\n                catch (e) {\r\n                    console.warn(e);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}","module JsStorage {\r\n    export module Model {\r\n        export interface IColumn {\r\n            Name: string;\r\n            AutoIncrement: boolean;\r\n            Primarykey: boolean;\r\n        }\r\n        export class Column implements IColumn {\r\n            Name: string;\r\n            AutoIncrement: boolean;\r\n            Primarykey: boolean;\r\n\r\n            constructor(key: IColumn) {\r\n                if (key.Name != null) {\r\n                    this.Name = key.Name\r\n                }\r\n                else {\r\n                    throw \"Column Name is not defined\";\r\n                }\r\n                this.AutoIncrement = this.AutoIncrement == null ? false : this.AutoIncrement;\r\n                this.Primarykey = this.Primarykey == null ? false : this.Primarykey;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}","module JsStorage {\r\n    export module Model {\r\n\r\n        export class Table {\r\n            Name: string = \"\";\r\n            Columns: Array<Column> = [];\r\n            Version: number;\r\n            RequireDelete: boolean = false;\r\n            RequireCreation: boolean = false;\r\n            PrimaryKey: string = \"\";\r\n\r\n            //public methods\r\n            constructor(name: string, columns: Array<IColumn>, version: number) {\r\n                this.Name = name;\r\n                var That = this;\r\n                columns.forEach(function (item) {\r\n                    That.Columns.push(new Column(item));\r\n                })\r\n\r\n                this.setRequireDelete();\r\n                this.setDbVersion(version);\r\n                this.setPrimaryKey();\r\n            }\r\n\r\n            //private methods\r\n\r\n            private setPrimaryKey() {\r\n                //this.Key = new Column();//\r\n                var That = this;\r\n                this.Columns.every(function (item) {\r\n                    if (item.Primarykey) {\r\n                        That.PrimaryKey = item.Name;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                })\r\n\r\n            }\r\n\r\n            private setRequireDelete() {\r\n                var TableVersion = localStorage.getItem(\"JsStorage_\" + this.Name);\r\n                if (TableVersion == null || localStorage.getItem('JsStorage_Db_Version') == null) {\r\n                    this.RequireCreation = true;\r\n                }\r\n                else if (TableVersion != this.Version.toString()) {\r\n                    this.RequireDelete = true;\r\n                }\r\n                this.Version = this.Version == null ? 1 : this.Version;\r\n\r\n            }\r\n\r\n            private setDbVersion(dbVersion: number) {\r\n                if (dbVersion == null) {\r\n                    localStorage.setItem('JsStorage_Db_Version', '1');\r\n                }\r\n                else if (dbVersion > Number(localStorage.getItem('JsStorage_Db_Version'))) {\r\n                    localStorage.setItem('JsStorage_Db_Version', dbVersion.toString());\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}","module JsStorage {\r\n    export module Model {\r\n        export class DataBase {\r\n            Name: string = \"JsStorage\";\r\n            Tables: Array<Table> = [];\r\n            constructor(tables: Array<Table>) {\r\n                this.Tables = tables;\r\n            }\r\n        }\r\n    }\r\n}","import Table = JsStorage.Model.Table;\r\nimport DataBase = JsStorage.Model.DataBase;\r\nmodule JsStorage {\r\n    export class Main {\r\n\r\n        constructor() {\r\n            this.setDbType();\r\n        }\r\n\r\n        createDb(dataBase: DataBase) {\r\n            if (DbType == DBType.IndexedDb) {\r\n                IndexDbObj = new Business.IndexDbLogic();\r\n                var DbVersion = Number(localStorage.getItem('JsStorage_Db_Version'));\r\n                IndexDbObj.openDataBase(DbVersion, dataBase);\r\n            }\r\n            else {\r\n                WebSqlObj = new Business.WebSqlLogic();\r\n            }\r\n        }\r\n        /**\r\n            * determine and set the DataBase Type\r\n            * \r\n            * \r\n            * @memberOf MainLogic\r\n            */\r\n        private setDbType = function () {\r\n            (window as any).indexedDB = window.indexedDB || (window as any).mozIndexedDB || (window as any).webkitIndexedDB || (window as any).msIndexedDB;\r\n            if (indexedDB) {\r\n                DbType = DBType.IndexedDb;\r\n                (window as any).IDBTransaction = (window as any).IDBTransaction || (window as any).webkitIDBTransaction || (window as any).msIDBTransaction;\r\n                (window as any).IDBKeyRange = (window as any).IDBKeyRange || (window as any).webkitIDBKeyRange || (window as any).msIDBKeyRange\r\n            }\r\n            else if ((window as any).openDatabase) {\r\n                DbType = DBType.WebSql;\r\n            }\r\n            else {\r\n                throw 'Browser does not support Db Implementation';\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","\r\n/// <reference path=\"Business/CommonLogic.ts\" />\r\n/// <reference path=\"Business/IndexDbLogic.ts\" />\r\n/// <reference path=\"Model/Column.ts\" />\r\n/// <reference path=\"Model/Table.ts\" />\r\n/// <reference path=\"Model/DataBase.ts\" />\r\n/// <reference path=\"Business/MainLogic.ts\" />\r\n\r\n","/// <reference path=\"CommonLogic.ts\" />\r\n","module JsStorage {\r\n    enum DbType {\r\n        IndexedDb,\r\n        WebSql\r\n    };\r\n}","module JsStorage {\r\n    export module Business {\r\n        export class WebSqlLogic {\r\n        }\r\n    }\r\n}"]}